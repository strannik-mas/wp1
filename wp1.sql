-- phpMyAdmin SQL Dump
-- version 4.0.10
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1:3306
-- Generation Time: Mar 25, 2017 at 07:44 PM
-- Server version: 5.6.19-log
-- PHP Version: 5.4.29

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `wp1`
--

-- --------------------------------------------------------

--
-- Table structure for table `wp_commentmeta`
--

CREATE TABLE IF NOT EXISTS `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `wp_comments`
--

CREATE TABLE IF NOT EXISTS `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext NOT NULL,
  `comment_author_email` varchar(100) NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) NOT NULL DEFAULT '',
  `comment_type` varchar(20) NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=34 ;

--
-- Dumping data for table `wp_comments`
--

INSERT INTO `wp_comments` (`comment_ID`, `comment_post_ID`, `comment_author`, `comment_author_email`, `comment_author_url`, `comment_author_IP`, `comment_date`, `comment_date_gmt`, `comment_content`, `comment_karma`, `comment_approved`, `comment_agent`, `comment_type`, `comment_parent`, `user_id`) VALUES
(26, 427, 'Tomasz Dziuda', 'dziudek@gmail.com', 'http://gavick.com', '195.74.50.129', '2012-07-30 11:58:34', '2012-07-30 11:58:34', 'Cras mattis consectetur purus sit amet fermentum. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11', '', 0, 1),
(27, 427, 'Stefano', 'dziudek@gavick.com', 'http://gavick.com', '195.74.50.129', '2012-07-30 12:02:42', '2012-07-30 12:02:42', 'Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Maecenas faucibus mollis interdum. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur. Maecenas faucibus mollis interdum. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11', '', 0, 0),
(28, 427, 'Stefano', 'dziudek@gavick.com', 'http://gavick.com', '195.74.50.129', '2012-07-30 12:03:06', '2012-07-30 12:03:06', 'Aenean lacinia bibendum nulla sed consectetur. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Nullam quis risus eget urna mollis ornare vel eu leo. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Integer posuere erat a ante venenatis dapibus posuere velit aliquet.\r\n\r\nNullam quis risus eget urna mollis ornare vel eu leo. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11', '', 26, 0),
(29, 427, 'Robert Gavick', 'robert@gavick.com', 'http://gavick.com', '195.74.50.129', '2012-08-11 12:02:55', '2012-08-11 12:02:55', 'Sed posuere consectetur est at lobortis. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.75 Safari/537.1', '', 26, 0),
(30, 427, 'Paulo Seichinha', 'paulo@gavick.com', 'http://gavick.com', '195.74.50.129', '2012-08-11 12:03:25', '2012-08-11 12:03:25', 'Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Vestibulum id ligula porta felis euismod semper. Nullam quis risus eget urna mollis ornare vel eu leo. Aenean lacinia bibendum nulla sed consectetur. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo. Cras mattis consectetur purus sit amet fermentum.', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.75 Safari/537.1', '', 0, 0),
(31, 427, 'Paulo Seichinha', 'paulo@gavick.com', 'http://gavick.com', '195.74.50.129', '2012-08-11 12:03:41', '2012-08-11 12:03:41', 'Nullam id dolor id nibh ultricies vehicula ut id elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.75 Safari/537.1', '', 28, 0),
(32, 427, 'Tomasz Dziuda', 'dziudek@gmail.com', 'http://gavick.com', '195.74.50.129', '2012-08-11 12:07:25', '2012-08-11 12:07:25', 'Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam id dolor id nibh ultricies vehicula ut id elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec sed odio dui. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.75 Safari/537.1', '', 0, 1),
(33, 427, 'Tomasz Dziuda', 'dziudek@gmail.com', 'http://gavick.com', '195.74.50.129', '2012-09-01 08:09:58', '2012-09-01 08:09:58', 'Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. Nullam id dolor id nibh ultricies vehicula ut id elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.', 0, '1', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1', '', 29, 1);

-- --------------------------------------------------------

--
-- Table structure for table `wp_links`
--

CREATE TABLE IF NOT EXISTS `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) NOT NULL DEFAULT '',
  `link_name` varchar(255) NOT NULL DEFAULT '',
  `link_image` varchar(255) NOT NULL DEFAULT '',
  `link_target` varchar(25) NOT NULL DEFAULT '',
  `link_description` varchar(255) NOT NULL DEFAULT '',
  `link_visible` varchar(20) NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) NOT NULL DEFAULT '',
  `link_notes` mediumtext NOT NULL,
  `link_rss` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `wp_options`
--

CREATE TABLE IF NOT EXISTS `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(64) NOT NULL DEFAULT '',
  `option_value` longtext NOT NULL,
  `autoload` varchar(20) NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=8436 ;

--
-- Dumping data for table `wp_options`
--

INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(1, 'siteurl', 'http://wp1', 'yes'),
(2, 'blogname', 'les1', 'yes'),
(3, 'blogdescription', 'Just another WordPress site', 'yes'),
(4, 'users_can_register', '0', 'yes'),
(5, 'admin_email', 's@s.rt', 'yes'),
(6, 'start_of_week', '1', 'yes'),
(7, 'use_balanceTags', '0', 'yes'),
(8, 'use_smilies', '1', 'yes'),
(9, 'require_name_email', '1', 'yes'),
(10, 'comments_notify', '1', 'yes'),
(11, 'posts_per_rss', '10', 'yes'),
(12, 'rss_use_excerpt', '0', 'yes'),
(13, 'mailserver_url', 'mail.example.com', 'yes'),
(14, 'mailserver_login', 'login@example.com', 'yes'),
(15, 'mailserver_pass', 'password', 'yes'),
(16, 'mailserver_port', '110', 'yes'),
(17, 'default_category', '1', 'yes'),
(18, 'default_comment_status', 'open', 'yes'),
(19, 'default_ping_status', 'open', 'yes'),
(20, 'default_pingback_flag', '0', 'yes'),
(21, 'date_format', 'F j, Y', 'yes'),
(22, 'time_format', 'g:i a', 'yes'),
(23, 'links_updated_date_format', 'F j, Y g:i a', 'yes'),
(24, 'links_recently_updated_prepend', '<em>', 'yes'),
(25, 'links_recently_updated_append', '</em>', 'yes'),
(26, 'links_recently_updated_time', '120', 'yes'),
(27, 'comment_moderation', '0', 'yes'),
(28, 'moderation_notify', '1', 'yes'),
(29, 'permalink_structure', '', 'yes'),
(30, 'gzipcompression', '0', 'yes'),
(31, 'hack_file', '0', 'yes'),
(32, 'blog_charset', 'UTF-8', 'yes'),
(33, 'moderation_keys', '', 'no'),
(34, 'active_plugins', 'a:0:{}', 'yes'),
(35, 'home', 'http://wp1', 'yes'),
(36, 'category_base', '', 'yes'),
(37, 'ping_sites', 'http://rpc.pingomatic.com/', 'yes'),
(38, 'advanced_edit', '0', 'yes'),
(39, 'comment_max_links', '2', 'yes'),
(40, 'gmt_offset', '0', 'yes'),
(41, 'default_email_category', '1', 'yes'),
(42, 'recently_edited', '', 'no'),
(43, 'template', 'MeetGavernWP', 'yes'),
(44, 'stylesheet', 'MeetGavernWP', 'yes'),
(45, 'comment_whitelist', '1', 'yes'),
(46, 'blacklist_keys', '', 'no'),
(47, 'comment_registration', '0', 'yes'),
(48, 'html_type', 'text/html', 'yes'),
(49, 'use_trackback', '0', 'yes'),
(50, 'default_role', 'subscriber', 'yes'),
(51, 'db_version', '22441', 'yes'),
(52, 'uploads_use_yearmonth_folders', '1', 'yes'),
(53, 'upload_path', '', 'yes'),
(54, 'blog_public', '0', 'yes'),
(55, 'default_link_category', '2', 'yes'),
(56, 'show_on_front', 'posts', 'yes'),
(57, 'tag_base', '', 'yes'),
(58, 'show_avatars', '1', 'yes'),
(59, 'avatar_rating', 'G', 'yes'),
(60, 'upload_url_path', '', 'yes'),
(61, 'thumbnail_size_w', '150', 'yes'),
(62, 'thumbnail_size_h', '150', 'yes'),
(63, 'thumbnail_crop', '1', 'yes'),
(64, 'medium_size_w', '300', 'yes'),
(65, 'medium_size_h', '300', 'yes'),
(66, 'avatar_default', 'mystery', 'yes'),
(67, 'large_size_w', '1024', 'yes'),
(68, 'large_size_h', '1024', 'yes'),
(69, 'image_default_link_type', 'file', 'yes'),
(70, 'image_default_size', '', 'yes'),
(71, 'image_default_align', '', 'yes'),
(72, 'close_comments_for_old_posts', '0', 'yes'),
(73, 'close_comments_days_old', '14', 'yes'),
(74, 'thread_comments', '1', 'yes'),
(75, 'thread_comments_depth', '5', 'yes'),
(76, 'page_comments', '0', 'yes'),
(77, 'comments_per_page', '50', 'yes'),
(78, 'default_comments_page', 'newest', 'yes'),
(79, 'comment_order', 'asc', 'yes'),
(80, 'uninstall_plugins', 'a:0:{}', 'no'),
(81, 'timezone_string', '', 'yes'),
(82, 'page_for_posts', '0', 'yes'),
(83, 'page_on_front', '0', 'yes'),
(84, 'default_post_format', '0', 'yes'),
(85, 'link_manager_enabled', '0', 'yes'),
(86, 'initial_db_version', '22441', 'yes'),
(87, 'wp_user_roles', 'a:5:{s:13:"administrator";a:2:{s:4:"name";s:13:"Administrator";s:12:"capabilities";a:62:{s:13:"switch_themes";b:1;s:11:"edit_themes";b:1;s:16:"activate_plugins";b:1;s:12:"edit_plugins";b:1;s:10:"edit_users";b:1;s:10:"edit_files";b:1;s:14:"manage_options";b:1;s:17:"moderate_comments";b:1;s:17:"manage_categories";b:1;s:12:"manage_links";b:1;s:12:"upload_files";b:1;s:6:"import";b:1;s:15:"unfiltered_html";b:1;s:10:"edit_posts";b:1;s:17:"edit_others_posts";b:1;s:20:"edit_published_posts";b:1;s:13:"publish_posts";b:1;s:10:"edit_pages";b:1;s:4:"read";b:1;s:8:"level_10";b:1;s:7:"level_9";b:1;s:7:"level_8";b:1;s:7:"level_7";b:1;s:7:"level_6";b:1;s:7:"level_5";b:1;s:7:"level_4";b:1;s:7:"level_3";b:1;s:7:"level_2";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:17:"edit_others_pages";b:1;s:20:"edit_published_pages";b:1;s:13:"publish_pages";b:1;s:12:"delete_pages";b:1;s:19:"delete_others_pages";b:1;s:22:"delete_published_pages";b:1;s:12:"delete_posts";b:1;s:19:"delete_others_posts";b:1;s:22:"delete_published_posts";b:1;s:20:"delete_private_posts";b:1;s:18:"edit_private_posts";b:1;s:18:"read_private_posts";b:1;s:20:"delete_private_pages";b:1;s:18:"edit_private_pages";b:1;s:18:"read_private_pages";b:1;s:12:"delete_users";b:1;s:12:"create_users";b:1;s:17:"unfiltered_upload";b:1;s:14:"edit_dashboard";b:1;s:14:"update_plugins";b:1;s:14:"delete_plugins";b:1;s:15:"install_plugins";b:1;s:13:"update_themes";b:1;s:14:"install_themes";b:1;s:11:"update_core";b:1;s:10:"list_users";b:1;s:12:"remove_users";b:1;s:9:"add_users";b:1;s:13:"promote_users";b:1;s:18:"edit_theme_options";b:1;s:13:"delete_themes";b:1;s:6:"export";b:1;}}s:6:"editor";a:2:{s:4:"name";s:6:"Editor";s:12:"capabilities";a:34:{s:17:"moderate_comments";b:1;s:17:"manage_categories";b:1;s:12:"manage_links";b:1;s:12:"upload_files";b:1;s:15:"unfiltered_html";b:1;s:10:"edit_posts";b:1;s:17:"edit_others_posts";b:1;s:20:"edit_published_posts";b:1;s:13:"publish_posts";b:1;s:10:"edit_pages";b:1;s:4:"read";b:1;s:7:"level_7";b:1;s:7:"level_6";b:1;s:7:"level_5";b:1;s:7:"level_4";b:1;s:7:"level_3";b:1;s:7:"level_2";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:17:"edit_others_pages";b:1;s:20:"edit_published_pages";b:1;s:13:"publish_pages";b:1;s:12:"delete_pages";b:1;s:19:"delete_others_pages";b:1;s:22:"delete_published_pages";b:1;s:12:"delete_posts";b:1;s:19:"delete_others_posts";b:1;s:22:"delete_published_posts";b:1;s:20:"delete_private_posts";b:1;s:18:"edit_private_posts";b:1;s:18:"read_private_posts";b:1;s:20:"delete_private_pages";b:1;s:18:"edit_private_pages";b:1;s:18:"read_private_pages";b:1;}}s:6:"author";a:2:{s:4:"name";s:6:"Author";s:12:"capabilities";a:10:{s:12:"upload_files";b:1;s:10:"edit_posts";b:1;s:20:"edit_published_posts";b:1;s:13:"publish_posts";b:1;s:4:"read";b:1;s:7:"level_2";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:12:"delete_posts";b:1;s:22:"delete_published_posts";b:1;}}s:11:"contributor";a:2:{s:4:"name";s:11:"Contributor";s:12:"capabilities";a:5:{s:10:"edit_posts";b:1;s:4:"read";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:12:"delete_posts";b:1;}}s:10:"subscriber";a:2:{s:4:"name";s:10:"Subscriber";s:12:"capabilities";a:2:{s:4:"read";b:1;s:7:"level_0";b:1;}}}', 'yes'),
(100, 'widget_archives', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(101, 'widget_meta', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(102, 'sidebars_widgets', 'a:13:{s:19:"wp_inactive_widgets";a:2:{i:0;s:15:"widget_gk_nsp-3";i:1;s:7:"text-19";}s:6:"header";a:2:{i:0;s:6:"text-4";i:1;s:7:"text-33";}s:3:"top";a:16:{i:0;s:7:"text-16";i:1;s:7:"text-26";i:2;s:7:"text-27";i:3;s:7:"text-28";i:4;s:7:"text-17";i:5;s:7:"text-18";i:6;s:7:"text-20";i:7;s:7:"text-21";i:8;s:7:"text-22";i:9;s:7:"text-24";i:10;s:7:"text-23";i:11;s:7:"text-25";i:12;s:7:"text-29";i:13;s:7:"text-32";i:14;s:7:"text-31";i:15;s:7:"text-30";}s:7:"sidebar";a:4:{i:0;s:8:"search-2";i:1;s:11:"tag_cloud-2";i:2;s:20:"widget_gk_comments-2";i:3;s:16:"widget_gk_tabs-2";}s:12:"mainbody_top";a:0:{}s:8:"mainbody";a:1:{i:0;s:6:"text-8";}s:15:"mainbody_bottom";a:1:{i:0;s:15:"widget_gk_nsp-2";}s:6:"bottom";a:6:{i:0;s:6:"text-9";i:1;s:7:"text-11";i:2;s:7:"text-13";i:3;s:7:"text-14";i:4;s:7:"text-15";i:5;s:7:"text-12";}s:6:"social";a:1:{i:0;s:24:"widget_gk_social_icons-2";}s:4:"tab1";a:3:{i:0;s:7:"text-34";i:1;s:7:"text-35";i:2;s:7:"text-36";}s:4:"tab2";a:0:{}s:4:"tab3";a:0:{}s:13:"array_version";i:3;}', 'yes'),
(105, 'widget_pages', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(106, 'widget_calendar', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(107, 'widget_links', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(108, 'widget_tag_cloud', 'a:2:{i:2;a:2:{s:5:"title";s:4:"Tags";s:8:"taxonomy";s:8:"post_tag";}s:12:"_multiwidget";i:1;}', 'yes'),
(109, 'widget_nav_menu', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(122, 'posts_per_page', '10', 'yes'),
(156, 'theme_mods_Starkers', 'a:1:{i:0;b:0;}', 'yes'),
(185, 'sticky_posts', 'a:0:{}', 'yes'),
(186, 'widget_categories', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(187, 'widget_text', 'a:30:{i:4;a:3:{s:5:"title";s:0:"";s:4:"text";s:451:"[bigheader]Hello, <span>everyone!</span>[/bigheader]\r\n\r\n[smallheader]I’m new and really free Wordpress 3.5 theme based on the brand-new GavernWP Framework.<br />I come from the GavickPro stable - the new WP themes club.[/smallheader]\r\n\r\n\r\n<p class="gk-buttons">\r\n[bluebtn url="http://www.gavick.com/wordpress-features"]View details[/bluebtn]\r\n[yellowbtn url="http://www.gavick.com/wordpress-themes/meet-gavernwp,97.html"]Download[/yellowbtn]\r\n</p>\r\n";s:6:"filter";b:0;}i:8;a:3:{s:5:"title";s:0:"";s:4:"text";s:1161:"<div class="gk-demo-content">\r\n<img src="[pageurl]/wp-content/themes/MeetGavernWP/images/demo/wp.png" border="0" alt="Free WordPress Theme">\r\n<h2>Free WordPress Theme</h2>\r\n<p>This is our first and free theme built especially for WordPress. Want to know more about WordPress? </p>\r\n<a href="http://www.gavick.com/wordpress-themes/meet-gavernwp,97.html" class="btn btn-large">Read more</a>\r\n</div>\r\n<div class="gk-demo-content">\r\n<img src="[pageurl]/wp-content/themes/MeetGavernWP/images/demo/gavernwp.png" border="0" alt="GavernWP Framework">\r\n<h2>GavernWP Framework</h2>\r\n<p>Meet GavernWP is based upon a brand new version of the GavernWP Framework</p>\r\n<a href="http://www.gavick.com/wordpress-features" class="btn btn-large">Read more</a>\r\n</div>\r\n<div class="gk-demo-content">\r\n<img src="[pageurl]/wp-content/themes/MeetGavernWP/images/demo/responsive_design.png" border="0" alt="Responsive Web Design">\r\n<h2>Responsive Web Design</h2>\r\n<p>Meet GavernWP and GavernWP Framework are prepared to support Responsive Web Design </p>\r\n<a href="http://gavick.com/magazine/responsive-web-design-necessity-or-fashion.html" class="btn btn-large">Read more</a>\r\n</div>";s:6:"filter";b:0;}i:9;a:3:{s:5:"title";s:18:"[icon-ok] Weblinks";s:4:"text";s:357:"<ul>\r\n<li><a href="http://www.gavick.com">WordPress Themes</a></li>\r\n<li><a href="http://www.gavick.com/forums">Support forum</a></li>\r\n<li><a href="http://www.gavick.com/documentation">Documentation</a></li>\r\n<li><a href="http://www.gavick.com/magazine">GavickPro Blog</a></li>\r\n<li><a href="http://github.com/GavickPro">GavickPro on Github</a></li>\r\n</ul>";s:6:"filter";b:0;}i:11;a:3:{s:5:"title";s:21:"[icon-fire] Hot links";s:4:"text";s:283:"<ul>\r\n<li><a href="http://demo.gavick.com">Wordpress 3.4 Themes</a></li>\r\n<li><a href="#">Lorem ipsum</a></li>\r\n<li><a href="#">Dolor sit amet</a></li>\r\n<li><a href="#">Fermentum Purus</a></li>\r\n<li><a href="https://www.gavick.com/joomla-templates.html">Our portfolio</a></li>\r\n</ul>";s:6:"filter";b:0;}i:12;a:3:{s:5:"title";s:23:"[icon-time] Lorem ipsum";s:4:"text";s:227:"<ul>\r\n<li><a href="#">Curabitur blandit</a></li>\r\n<li><a href="#">Tempus porttitor</a></li>\r\n<li><a href="#">Donec ullamcorper</a></li>\r\n<li><a href="#">Nulla non</a></li>\r\n<li><a href="#">Metus auctor fringilla</a></li>\r\n</ul>";s:6:"filter";b:0;}i:13;a:3:{s:5:"title";s:20:"[icon-gift] Freebies";s:4:"text";s:563:"<ul>\r\n<li><a href="http://www.gavick.com/magazine/dream-flower-free-portfolio-psd-template.html">Dream Flower</a></li>\r\n<li><a href="http://www.gavick.com/magazine/free-portfolio-and-blog-psd-template.html">Free Portfolio</a></li>\r\n<li><a href="http://www.gavick.com/magazine/roberto-%7C-free-psd-template.html">Roberto</a></li>\r\n<li><a href="http://www.gavick.com/magazine/gasolina-awesome-free-psd-template.html">Gasolina</a></li>\r\n<li><a href="http://www.gavick.com/magazine/trybokeh-fancybg-and-yellowfun-free-blog-psd-templates.html">Trybokeh</a></li>\r\n</ul>";s:6:"filter";b:0;}i:14;a:3:{s:5:"title";s:33:"[icon-exclamation-sign] Important";s:4:"text";s:401:"<ul>\r\n<li><a href="http://www.gavick.com/updates.html">Updates</a></li>\r\n<li><a href="http://www.gavick.com/affiliate/">Affiliates</a></li>\r\n<li><a href="http://www.gavick.com/supportdesk/index.php?/Tickets/Submit">Help desk</a></li>\r\n<li><a href="http://validate.gavick.com/">Validate license</a></li>\r\n<li><a href="http://www.gavick.com/supportdesk/index.php?/Tickets/Submit">Contact</a></li>\r\n</ul>";s:6:"filter";b:0;}i:15;a:3:{s:5:"title";s:22:"[icon-thumbs-up] Share";s:4:"text";s:378:"<ul>\r\n<li><a href="http://www.facebook.com/gavickpro">Facebook</a></li>\r\n<li><a href="http://twitter.com/gavickpro">Twitter</a></li>\r\n<li><a href="http://www.gavick.com/magazine/index.php?format=feed&amp;type=rss">RSS</a></li>\r\n<li><a href="https://plus.google.com/110937149959405490547?prsrc=3">Google+</a></li>\r\n<li><a href="http://github.com/GavickPro">Github</a></li>\r\n</ul>";s:6:"filter";b:0;}i:16;a:3:{s:5:"title";s:7:"Default";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:17;a:3:{s:5:"title";s:4:"Blue";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:18;a:3:{s:5:"title";s:3:"Red";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:20;a:3:{s:5:"title";s:5:"Green";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:19;a:3:{s:5:"title";s:0:"";s:4:"text";s:0:"";s:6:"filter";b:0;}i:21;a:3:{s:5:"title";s:6:"Yellow";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:22;a:3:{s:5:"title";s:11:"Blue Header";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:23;a:3:{s:5:"title";s:12:"Green Header";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:24;a:3:{s:5:"title";s:10:"Red Header";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:25;a:3:{s:5:"title";s:13:"Yellow Header";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:26;a:3:{s:5:"title";s:8:"Border I";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:27;a:3:{s:5:"title";s:9:"Border II";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:28;a:3:{s:5:"title";s:10:"Border III";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:29;a:3:{s:5:"title";s:11:"Blue Border";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:30;a:3:{s:5:"title";s:13:"Yellow Border";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:31;a:3:{s:5:"title";s:12:"Green Border";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:32;a:3:{s:5:"title";s:10:"Red Border";s:4:"text";s:356:"<p>Aenean lacinia bibendum nulla sed consectetur. Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\r\n\r\n<ul>\r\n<li><a href="#">Donec id elit non mi porta.</a></li>\r\n<li><a href="#">Gravida at eget metus.</a></li>\r\n<li><a href="#">Nullam id dolor id nibh ultricies vehicula.</a></li>\r\n<li><a href="#">Cras mattis consectetur.</a></li>\r\n</ul>";s:6:"filter";b:0;}i:33;a:3:{s:5:"title";s:0:"";s:4:"text";s:43:"[mediumheader]Theme archives[/mediumheader]";s:6:"filter";b:0;}i:34;a:3:{s:5:"title";s:5:"Tab I";s:4:"text";s:236:"Aenean lacinia bibendum nulla sed consectetur. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Nullam quis risus eget urna mollis ornare vel eu leo. Lorem ipsum dolor sit amet, consectetur adipiscing elit.";s:6:"filter";b:0;}i:35;a:3:{s:5:"title";s:6:"Tab II";s:4:"text";s:236:"Aenean lacinia bibendum nulla sed consectetur. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Nullam quis risus eget urna mollis ornare vel eu leo. Lorem ipsum dolor sit amet, consectetur adipiscing elit.";s:6:"filter";b:0;}i:36;a:3:{s:5:"title";s:7:"Tab III";s:4:"text";s:236:"Aenean lacinia bibendum nulla sed consectetur. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Nullam quis risus eget urna mollis ornare vel eu leo. Lorem ipsum dolor sit amet, consectetur adipiscing elit.";s:6:"filter";b:0;}s:12:"_multiwidget";i:1;}', 'yes'),
(188, 'widget_rss', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(190, 'embed_autourls', '1', 'yes'),
(191, 'embed_size_w', '', 'yes'),
(192, 'embed_size_h', '600', 'yes'),
(197, 'widget_search', 'a:2:{i:2;a:1:{s:5:"title";s:20:"[icon-search] Search";}s:12:"_multiwidget";i:1;}', 'yes'),
(198, 'widget_recent-posts', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(199, 'widget_recent-comments', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(248, 'db_upgraded', '', 'yes'),
(473, 'theme_mods_MeetGavernWP', 'a:9:{i:0;b:0;s:18:"nav_menu_locations";a:2:{s:8:"mainmenu";i:3;s:10:"footermenu";i:3;}s:16:"header_textcolor";s:0:"";s:16:"background_color";s:6:"ffffff";s:12:"header_image";s:13:"remove-header";s:16:"background_image";s:0:"";s:17:"background_repeat";s:9:"no-repeat";s:21:"background_position_x";s:6:"center";s:21:"background_attachment";s:6:"scroll";}', 'yes'),
(548, 'meetgavernwp_branding_login_page_image', '', 'yes'),
(549, 'meetgavernwp_branding_login_page_image_width', '200', 'yes'),
(550, 'meetgavernwp_branding_login_page_image_height', '86', 'yes'),
(551, 'meetgavernwp_branding_admin_page_image', 'http://wp1/wp-content/uploads/2011/08/logo_gavick_bigger.jpg', 'yes'),
(552, 'meetgavernwp_branding_admin_page_image_width', '16', 'yes'),
(553, 'meetgavernwp_branding_admin_page_image_height', '16', 'yes'),
(592, 'meetgavernwp_branding_logo_type', 'css', 'yes'),
(593, 'meetgavernwp_branding_logo_image', '', 'yes'),
(594, 'meetgavernwp_branding_logo_image_width', '200', 'yes'),
(595, 'meetgavernwp_branding_logo_image_height', '86', 'yes'),
(596, 'meetgavernwp_branding_logo_text_type', 'own', 'yes'),
(597, 'meetgavernwp_branding_logo_text_value', 'Meet GavernWP', 'yes'),
(636, 'widget_logic', 'a:0:{}', 'yes'),
(755, 'gavern_widget_rules', 'a:1:{s:11:"tag_cloud-4";s:0:"";}', 'yes'),
(824, 'nav_menu_options', 'a:2:{i:0;b:0;s:8:"auto_add";a:0:{}}', 'yes'),
(1161, 'meetgavernwp_branding_logo_slogan_value', 'Free WordPress template', 'yes'),
(1166, 'gavern_widget_style', 'a:1:{s:11:"tag_cloud-4";s:4:"dark";}', 'yes'),
(1279, 'meetgavernwp_seo_use_gk_seo_settings', 'Y', 'yes'),
(1280, 'meetgavernwp_seo_use_blogname_in_title', 'Y', 'yes'),
(1281, 'meetgavernwp_seo_separator_in_title', '»', 'yes'),
(1282, 'meetgavernwp_seo_description', 'Meet GavernWP', 'yes'),
(1283, 'meetgavernwp_seo_blogname', 'Responsive Free WordPress theme', 'yes'),
(1284, 'meetgavernwp_seo_homepage_desc', 'custom', 'yes'),
(1285, 'meetgavernwp_seo_homepage_desc_value', 'Frontpage', 'yes'),
(1286, 'meetgavernwp_seo_post_desc', 'custom', 'yes'),
(1287, 'meetgavernwp_seo_homepage_keywords', 'custom', 'yes'),
(1288, 'meetgavernwp_seo_homepage_keywords_value', 'Homepage, Meet GavernWP', 'yes'),
(1289, 'meetgavernwp_seo_post_keywords', 'custom', 'yes'),
(1360, 'meetgavernwp_navigation_menu_state_mainmenu', 'Y', 'yes'),
(1361, 'meetgavernwp_navigation_menu_staterule_mainmenu', 'is_single()', 'yes'),
(1362, 'meetgavernwp_navigation_menu_depth_mainmenu', '0', 'yes'),
(1363, 'meetgavernwp_navigation_menu_style_mainmenu', 'gk_extra', 'yes'),
(1364, 'meetgavernwp_navigation_menu_animation_mainmenu', 'width_height_opacity', 'yes'),
(1365, 'meetgavernwp_navigation_menu_animationspeed_mainmenu', 'fast', 'yes'),
(1366, 'meetgavernwp_navigation_menu_state_footermenu', 'Y', 'yes'),
(1367, 'meetgavernwp_navigation_menu_staterule_footermenu', '', 'yes'),
(1368, 'meetgavernwp_navigation_menu_depth_footermenu', '0', 'yes'),
(1407, 'meetgavernwp_breadcrumbs_state', 'rule', 'yes'),
(1408, 'meetgavernwp_breadcrumbs_staterule', '!is_home()', 'yes'),
(1409, 'meetgavernwp_fontsize_state', 'Y', 'yes'),
(1410, 'meetgavernwp_fontsize_staterule', '!is_home()', 'yes'),
(1411, 'meetgavernwp_styleswitcher_state', 'N', 'yes'),
(1412, 'meetgavernwp_template_footer_content', 'Meet GavernWP - &lt;a href=\\&quot;http://www.gavick.com\\&quot; title=\\&quot;Responsive Free WordPress theme\\&quot;&gt;Responsive Free WordPress Themes&lt;/a&gt;', 'yes'),
(1413, 'meetgavernwp_template_homepage_items_amount', 'mainbody', 'yes'),
(1414, 'meetgavernwp_template_style_color', 'color1', 'yes'),
(1415, 'meetgavernwp_template_homepage_mainbody', 'Y', 'yes'),
(1489, 'meetgavernwp_chromeframe_state', 'N', 'yes'),
(1512, 'meetgavernwp_fonts_type_body', 'normal', 'yes'),
(1513, 'meetgavernwp_fonts_normal_body', 'Arial, Helvetica, sans-serif', 'yes'),
(1514, 'meetgavernwp_fonts_squirrel_body', 'Colaborate', 'yes'),
(1515, 'meetgavernwp_fonts_type_headers', 'squirrel', 'yes'),
(1516, 'meetgavernwp_fonts_normal_headers', 'Verdana, Geneva, sans-serif', 'yes'),
(1517, 'meetgavernwp_fonts_squirrel_headers', 'Colaborate', 'yes'),
(1518, 'meetgavernwp_fonts_type_others', 'normal', 'yes'),
(1519, 'meetgavernwp_fonts_normal_others', 'Arial, Helvetica, sans-serif', 'yes'),
(1520, 'meetgavernwp_fonts_squirrel_others', 'Colaborate', 'yes'),
(1521, 'meetgavernwp_fonts_google_body', 'http://fonts.googleapis.com/css?family=Open+Sans', 'yes'),
(1522, 'meetgavernwp_fonts_google_headers', 'http://fonts.googleapis.com/css?family=Doppio+One', 'yes'),
(1523, 'meetgavernwp_fonts_google_others', '', 'yes'),
(1524, 'meetgavernwp_fonts_selectors_body', 'body', 'yes'),
(1525, 'meetgavernwp_fonts_selectors_headers', 'h1, h2, h3, h4, h5, h6,\n#gk-head a.textLogo', 'yes'),
(1526, 'meetgavernwp_fonts_selectors_others', '', 'yes'),
(1563, 'meetgavernwp_shortcodes1_state', 'Y', 'yes'),
(1564, 'meetgavernwp_shortcodes2_state', 'Y', 'yes'),
(1565, 'meetgavernwp_shortcodes3_state', 'Y', 'yes'),
(1942, 'meetgavernwp_widget_rules', 'a:55:{s:6:"text-3";s:0:"";s:7:"links-3";s:8:"homepage";s:10:"nav_menu-3";s:9:",homepage";s:11:"tag_cloud-4";s:9:",homepage";s:11:"tag_cloud-5";s:7:",page:5";s:7:"meta-15";s:0:"";s:7:"meta-17";s:0:"";s:7:"meta-18";s:0:"";s:7:"meta-19";s:0:"";s:10:"nav_menu-4";s:9:",homepage";s:12:"categories-4";s:0:"";s:8:"search-4";s:0:"";s:6:"meta-9";s:0:"";s:10:"archives-3";s:0:"";s:7:"pages-4";s:0:"";s:10:"calendar-3";s:0:"";s:14:"recent-posts-3";s:0:"";s:10:"nav_menu-5";s:0:"";s:17:"recent-comments-3";s:0:"";s:5:"rss-3";s:0:"";s:6:"text-4";s:9:",homepage";s:6:"text-6";s:41:",category:template-features,post:branding";s:6:"text-7";s:27:",category:Template back-end";s:6:"text-8";s:9:",homepage";s:6:"text-9";s:0:"";s:7:"text-11";s:0:"";s:7:"text-12";s:0:"";s:7:"text-13";s:0:"";s:7:"text-14";s:0:"";s:7:"text-15";s:0:"";s:11:"tag_cloud-2";s:9:",homepage";s:8:"search-2";s:9:",homepage";s:7:"text-16";s:19:",page:widget-styles";s:7:"text-17";s:19:",page:widget-styles";s:7:"text-18";s:19:",page:widget-styles";s:7:"text-20";s:19:",page:widget-styles";s:7:"text-21";s:19:",page:widget-styles";s:7:"text-22";s:19:",page:widget-styles";s:7:"text-24";s:19:",page:widget-styles";s:7:"text-25";s:19:",page:widget-styles";s:7:"text-23";s:19:",page:widget-styles";s:7:"text-26";s:19:",page:widget-styles";s:7:"text-27";s:19:",page:widget-styles";s:7:"text-28";s:19:",page:widget-styles";s:7:"text-29";s:19:",page:widget-styles";s:7:"text-32";s:19:",page:widget-styles";s:7:"text-31";s:19:",page:widget-styles";s:7:"text-30";s:19:",page:widget-styles";s:7:"text-33";s:9:",archive:";s:20:"widget_gk_comments-2";s:26:",category:theme-essentials";s:24:"widget_gk_social_icons-2";s:0:"";s:7:"text-34";s:9:",homepage";s:15:"widget_gk_nsp-2";s:19:",page:widget-styles";s:16:"widget_gk_tabs-2";s:19:",page:widget-styles";s:15:"widget_gk_nsp-3";s:19:",page:widget-styles";}', 'yes'),
(1943, 'meetgavernwp_widget_style', 'a:55:{s:6:"text-3";s:0:"";s:7:"links-3";s:0:"";s:10:"nav_menu-3";s:0:"";s:11:"tag_cloud-4";s:4:"tags";s:11:"tag_cloud-5";s:0:"";s:7:"meta-15";s:0:"";s:7:"meta-17";s:0:"";s:7:"meta-18";s:0:"";s:7:"meta-19";s:0:"";s:10:"nav_menu-4";s:4:"dark";s:12:"categories-4";s:0:"";s:8:"search-4";s:0:"";s:6:"meta-9";s:0:"";s:10:"archives-3";s:0:"";s:7:"pages-4";s:0:"";s:10:"calendar-3";s:0:"";s:14:"recent-posts-3";s:0:"";s:10:"nav_menu-5";s:0:"";s:17:"recent-comments-3";s:0:"";s:5:"rss-3";s:0:"";s:6:"text-4";s:0:"";s:6:"text-6";s:0:"";s:6:"text-7";s:0:"";s:6:"text-8";s:0:"";s:6:"text-9";s:0:"";s:7:"text-11";s:0:"";s:7:"text-12";s:0:"";s:7:"text-13";s:0:"";s:7:"text-14";s:0:"";s:7:"text-15";s:0:"";s:11:"tag_cloud-2";s:4:"tags";s:8:"search-2";s:0:"";s:7:"text-16";s:0:"";s:7:"text-17";s:4:"blue";s:7:"text-18";s:3:"red";s:7:"text-20";s:5:"green";s:7:"text-21";s:6:"yellow";s:7:"text-22";s:11:"blue-header";s:7:"text-24";s:10:"red-header";s:7:"text-25";s:13:"yellow-header";s:7:"text-23";s:12:"green-header";s:7:"text-26";s:7:"border1";s:7:"text-27";s:7:"border2";s:7:"text-28";s:7:"border3";s:7:"text-29";s:11:"blue-border";s:7:"text-32";s:10:"red-border";s:7:"text-31";s:12:"green-border";s:7:"text-30";s:13:"yellow-border";s:7:"text-33";s:0:"";s:20:"widget_gk_comments-2";s:0:"";s:24:"widget_gk_social_icons-2";s:0:"";s:7:"text-34";s:0:"";s:15:"widget_gk_nsp-2";s:0:"";s:16:"widget_gk_tabs-2";s:0:"";s:15:"widget_gk_nsp-3";s:0:"";}', 'yes'),
(2077, 'meetgavernwp_overridecss_state', 'N', 'yes'),
(2078, 'meetgavernwp_overridecss_code', 'body { background: red; }', 'yes'),
(2079, 'meetgavernwp_overridehead_code', '&lt;script type=\\&quot;text/javascript\\&quot;&gt;alert(\\&#039;head\\&#039;);&lt;/script&gt;', 'yes'),
(2080, 'meetgavernwp_overridebody_code', '&lt;script type=\\&quot;text/javascript\\&quot;&gt;alert(\\&#039;body\\&#039;);&lt;/script&gt;', 'yes'),
(2081, 'meetgavernwp_template_footer_logo', 'Y', 'yes'),
(2098, 'meetgavernwp_opensearch_use_opensearch', 'Y', 'yes'),
(2137, 'meetgavernwp_emoticons_widget_state', 'Y', 'yes'),
(2138, 'meetgavernwp_shortcodes_widget_state', 'Y', 'yes'),
(2554, 'meetgavernwp_widget_rules_type', 'a:55:{s:7:"links-3";s:3:"all";s:10:"nav_menu-3";s:3:"all";s:11:"tag_cloud-4";s:3:"all";s:11:"tag_cloud-5";s:7:"exclude";s:7:"meta-15";s:7:"exclude";s:7:"meta-17";s:7:"exclude";s:7:"meta-18";s:7:"include";s:7:"meta-19";s:7:"exclude";s:10:"nav_menu-4";s:3:"all";s:12:"categories-4";s:3:"all";s:8:"search-4";s:3:"all";s:6:"meta-9";s:3:"all";s:6:"text-3";s:3:"all";s:10:"archives-3";s:3:"all";s:7:"pages-4";s:3:"all";s:10:"calendar-3";s:3:"all";s:14:"recent-posts-3";s:3:"all";s:10:"nav_menu-5";s:3:"all";s:17:"recent-comments-3";s:3:"all";s:5:"rss-3";s:3:"all";s:6:"text-4";s:7:"include";s:6:"text-6";s:7:"include";s:6:"text-7";s:7:"include";s:6:"text-8";s:7:"include";s:6:"text-9";s:3:"all";s:7:"text-11";s:3:"all";s:7:"text-12";s:3:"all";s:7:"text-13";s:3:"all";s:7:"text-14";s:3:"all";s:7:"text-15";s:3:"all";s:11:"tag_cloud-2";s:7:"exclude";s:8:"search-2";s:7:"exclude";s:7:"text-16";s:7:"include";s:7:"text-17";s:7:"include";s:7:"text-18";s:7:"include";s:7:"text-20";s:7:"include";s:7:"text-21";s:7:"include";s:7:"text-22";s:7:"include";s:7:"text-24";s:7:"include";s:7:"text-25";s:7:"include";s:7:"text-23";s:7:"include";s:7:"text-26";s:7:"include";s:7:"text-27";s:7:"include";s:7:"text-28";s:7:"include";s:7:"text-29";s:7:"include";s:7:"text-32";s:7:"include";s:7:"text-31";s:7:"include";s:7:"text-30";s:7:"include";s:7:"text-33";s:7:"include";s:20:"widget_gk_comments-2";s:7:"include";s:24:"widget_gk_social_icons-2";s:3:"all";s:7:"text-34";s:7:"include";s:15:"widget_gk_nsp-2";s:7:"include";s:16:"widget_gk_tabs-2";s:7:"include";s:15:"widget_gk_nsp-3";s:7:"include";}', 'yes'),
(2669, 'meetgavernwp_template_style', '1', 'yes'),
(2882, 'meetgavernwp_opengraph_use_opengraph', 'Y', 'yes'),
(2950, 'meetgavernwp_advanced_search_state', 'Y', 'yes'),
(3125, 'meetgavernwp_fb_api_id', '171342606239806', 'yes'),
(3126, 'meetgavernwp_fb_lang', 'en_US', 'yes'),
(3127, 'meetgavernwp_fb_like', 'Y', 'yes'),
(3128, 'meetgavernwp_fb_like_send', 'Y', 'yes'),
(3129, 'meetgavernwp_fb_like_layout', 'standard', 'yes'),
(3130, 'meetgavernwp_fb_like_show_faces', 'true', 'yes'),
(3131, 'meetgavernwp_fb_like_width', '350', 'yes'),
(3132, 'meetgavernwp_fb_like_action', 'like', 'yes'),
(3133, 'meetgavernwp_fb_like_font', 'arial', 'yes'),
(3134, 'meetgavernwp_fb_like_colorscheme', 'light', 'yes'),
(3135, 'meetgavernwp_google_plus', 'Y', 'yes'),
(3136, 'meetgavernwp_google_plus_count', 'bubble', 'yes'),
(3137, 'meetgavernwp_google_plus_size', 'medium', 'yes'),
(3138, 'meetgavernwp_google_plus_lang', 'en-GB', 'yes'),
(3139, 'meetgavernwp_tweet_btn', 'Y', 'yes'),
(3140, 'meetgavernwp_tweet_btn_data_count', 'horizontal', 'yes'),
(3141, 'meetgavernwp_tweet_btn_data_via', '', 'yes'),
(3142, 'meetgavernwp_tweet_btn_data_lang', 'en', 'yes'),
(3143, 'meetgavernwp_pinterest_btn', 'Y', 'yes'),
(3144, 'meetgavernwp_pinterest_btn_style', 'horizontal', 'yes'),
(3145, 'meetgavernwp_social_api_exclude_include', 'exclude', 'yes'),
(3146, 'meetgavernwp_social_api_articles', 'option-files', 'yes'),
(3147, 'meetgavernwp_social_api_pages', '', 'yes'),
(3148, 'meetgavernwp_social_api_categories', 'theme-essentials', 'yes'),
(3299, 'meetgavernwp_page_layout', 'right', 'yes'),
(3300, 'meetgavernwp_grid_base_width', '2', 'yes'),
(3301, 'meetgavernwp_grid_space', '5', 'yes'),
(3302, 'meetgavernwp_mainbody_width', '3', 'yes'),
(3303, 'meetgavernwp_sidebar_width', '30', 'yes'),
(3304, 'meetgavernwp_max_amount_of_columns', '10', 'yes'),
(3305, 'meetgavernwp_widget_rules_state', 'Y', 'yes'),
(3344, 'meetgavernwp_widget_responsive', 'a:49:{s:10:"nav_menu-4";s:3:"all";s:12:"categories-4";s:3:"all";s:8:"search-4";s:3:"all";s:6:"meta-9";s:3:"all";s:7:"links-3";s:3:"all";s:6:"text-3";s:3:"all";s:10:"archives-3";s:3:"all";s:7:"pages-4";s:3:"all";s:10:"calendar-3";s:3:"all";s:14:"recent-posts-3";s:3:"all";s:10:"nav_menu-5";s:3:"all";s:17:"recent-comments-3";s:3:"all";s:11:"tag_cloud-4";s:3:"all";s:5:"rss-3";s:11:"onlyDesktop";s:6:"text-4";s:3:"all";s:6:"text-6";s:3:"all";s:6:"text-7";s:3:"all";s:6:"text-8";s:3:"all";s:6:"text-9";s:3:"all";s:7:"text-11";s:3:"all";s:7:"text-12";s:3:"all";s:7:"text-13";s:3:"all";s:7:"text-14";s:3:"all";s:7:"text-15";s:3:"all";s:11:"tag_cloud-2";s:3:"all";s:8:"search-2";s:3:"all";s:7:"text-16";s:3:"all";s:7:"text-17";s:3:"all";s:7:"text-18";s:3:"all";s:7:"text-20";s:3:"all";s:7:"text-21";s:3:"all";s:7:"text-22";s:3:"all";s:7:"text-24";s:3:"all";s:7:"text-25";s:3:"all";s:7:"text-23";s:3:"all";s:7:"text-26";s:3:"all";s:7:"text-27";s:3:"all";s:7:"text-28";s:3:"all";s:7:"text-29";s:3:"all";s:7:"text-32";s:3:"all";s:7:"text-31";s:3:"all";s:7:"text-30";s:3:"all";s:7:"text-33";s:3:"all";s:20:"widget_gk_comments-2";s:3:"all";s:24:"widget_gk_social_icons-2";s:3:"all";s:7:"text-34";s:3:"all";s:15:"widget_gk_nsp-2";s:3:"all";s:16:"widget_gk_tabs-2";s:3:"all";s:15:"widget_gk_nsp-3";s:3:"all";}', 'yes'),
(3345, 'meetgavernwp_widget_users', 'a:49:{s:10:"nav_menu-4";s:3:"all";s:12:"categories-4";s:13:"administrator";s:8:"search-4";N;s:6:"meta-9";N;s:7:"links-3";N;s:6:"text-3";N;s:10:"archives-3";N;s:7:"pages-4";s:3:"all";s:10:"calendar-3";N;s:14:"recent-posts-3";N;s:10:"nav_menu-5";N;s:17:"recent-comments-3";N;s:11:"tag_cloud-4";N;s:5:"rss-3";N;s:6:"text-4";s:3:"all";s:6:"text-6";s:3:"all";s:6:"text-7";s:3:"all";s:6:"text-8";s:3:"all";s:6:"text-9";s:3:"all";s:7:"text-11";s:3:"all";s:7:"text-12";s:3:"all";s:7:"text-13";s:3:"all";s:7:"text-14";s:3:"all";s:7:"text-15";s:3:"all";s:11:"tag_cloud-2";s:3:"all";s:8:"search-2";s:3:"all";s:7:"text-16";s:3:"all";s:7:"text-17";s:3:"all";s:7:"text-18";s:3:"all";s:7:"text-20";s:3:"all";s:7:"text-21";s:3:"all";s:7:"text-22";s:3:"all";s:7:"text-24";s:3:"all";s:7:"text-25";s:3:"all";s:7:"text-23";s:3:"all";s:7:"text-26";s:3:"all";s:7:"text-27";s:3:"all";s:7:"text-28";s:3:"all";s:7:"text-29";s:3:"all";s:7:"text-32";s:3:"all";s:7:"text-31";s:3:"all";s:7:"text-30";s:3:"all";s:7:"text-33";s:3:"all";s:20:"widget_gk_comments-2";s:3:"all";s:24:"widget_gk_social_icons-2";s:3:"all";s:7:"text-34";s:3:"all";s:15:"widget_gk_nsp-2";s:3:"all";s:16:"widget_gk_tabs-2";s:3:"all";s:15:"widget_gk_nsp-3";s:3:"all";}', 'yes'),
(3666, 'meetgavernwp_template_width', '1120', 'yes'),
(3667, 'meetgavernwp_tablet_width', '900', 'yes'),
(3668, 'meetgavernwp_mobile_width', '540', 'yes'),
(3865, 'theme_mods_twentyeleven', 'a:9:{i:0;b:0;s:16:"header_textcolor";s:3:"000";s:16:"background_color";s:6:"f1f1f1";s:16:"background_image";s:0:"";s:17:"background_repeat";s:6:"repeat";s:21:"background_position_x";s:4:"left";s:21:"background_attachment";s:5:"fixed";s:18:"nav_menu_locations";a:1:{s:7:"primary";i:3;}s:16:"sidebars_widgets";a:2:{s:4:"time";i:1340622952;s:4:"data";a:9:{s:19:"wp_inactive_widgets";a:15:{i:0;s:6:"meta-8";i:1;s:10:"calendar-2";i:2;s:5:"rss-2";i:3;s:11:"tag_cloud-2";i:4;s:10:"nav_menu-2";i:5;s:8:"search-2";i:6;s:14:"recent-posts-2";i:7;s:17:"recent-comments-2";i:8;s:10:"archives-2";i:9;s:12:"categories-2";i:10;s:6:"meta-2";i:11;s:6:"meta-3";i:12;s:12:"categories-3";i:13;s:11:"tag_cloud-3";i:14;s:7:"links-2";}s:9:"sidebar-1";a:0:{}s:9:"sidebar-2";a:0:{}s:9:"sidebar-3";a:3:{i:0;s:7:"pages-4";i:1;s:12:"categories-4";i:2;s:5:"rss-3";}s:9:"sidebar-4";a:0:{}s:9:"sidebar-5";a:0:{}s:18:"orphaned_widgets_1";a:3:{i:0;s:6:"text-3";i:1;s:8:"search-4";i:2;s:10:"calendar-3";}s:18:"orphaned_widgets_2";a:3:{i:0;s:10:"nav_menu-5";i:1;s:10:"archives-3";i:2;s:7:"links-3";}s:18:"orphaned_widgets_3";a:4:{i:0;s:17:"recent-comments-3";i:1;s:11:"tag_cloud-4";i:2;s:14:"recent-posts-3";i:3;s:6:"meta-9";}}}}', 'yes'),
(3866, 'theme_switched', '', 'yes'),
(3867, 'twentyeleven_theme_options', 'a:3:{s:12:"color_scheme";s:5:"light";s:10:"link_color";s:7:"#1b8be0";s:12:"theme_layout";s:7:"content";}', 'yes'),
(3909, 'meetgavernwp_template_show_author_info', 'Y', 'yes'),
(4023, 'meetgavernwp_thickbox_state', 'Y', 'yes'),
(4111, 'meetgavernwp_use_header_image', 'Y', 'yes'),
(4112, 'meetgavernwp_content_width_variable', '1024', 'yes'),
(4289, 'theme_mods___MeetGavernWP', 'a:2:{i:0;b:0;s:16:"sidebars_widgets";a:2:{s:4:"time";i:1340622959;s:4:"data";a:16:{s:19:"wp_inactive_widgets";a:15:{i:0;s:6:"meta-8";i:1;s:10:"calendar-2";i:2;s:5:"rss-2";i:3;s:11:"tag_cloud-2";i:4;s:10:"nav_menu-2";i:5;s:8:"search-2";i:6;s:14:"recent-posts-2";i:7;s:17:"recent-comments-2";i:8;s:10:"archives-2";i:9;s:12:"categories-2";i:10;s:6:"meta-2";i:11;s:6:"meta-3";i:12;s:12:"categories-3";i:13;s:11:"tag_cloud-3";i:14;s:7:"links-2";}s:7:"banner1";a:0:{}s:6:"header";a:0:{}s:7:"banner2";a:3:{i:0;s:7:"pages-4";i:1;s:12:"categories-4";i:2;s:5:"rss-3";}s:3:"top";a:0:{}s:4:"left";a:0:{}s:5:"right";a:3:{i:0;s:6:"text-3";i:1;s:8:"search-4";i:2;s:10:"calendar-3";}s:11:"content_top";a:3:{i:0;s:10:"nav_menu-5";i:1;s:10:"archives-3";i:2;s:7:"links-3";}s:14:"content_bottom";a:4:{i:0;s:17:"recent-comments-3";i:1;s:11:"tag_cloud-4";i:2;s:14:"recent-posts-3";i:3;s:6:"meta-9";}s:12:"mainbody_top";N;s:8:"mainbody";N;s:15:"mainbody_bottom";N;s:10:"inset_left";N;s:11:"inset_right";N;s:4:"user";N;s:6:"bottom";N;}}}', 'yes'),
(4366, 'a8c_developer', 'a:1:{s:12:"project_type";s:5:"wporg";}', 'yes'),
(5430, 'widget_widget_gk_comments', 'a:2:{i:2;a:4:{s:5:"title";s:0:"";s:11:"avatar_size";s:2:"32";s:10:"word_count";s:2:"10";s:6:"number";s:1:"3";}s:12:"_multiwidget";i:1;}', 'yes'),
(5601, 'meetgavernwp_google_plus_width', '300', 'yes'),
(5675, 'widget_widget_gk_social_icons', 'a:2:{i:2;a:5:{s:5:"title";s:0:"";s:7:"fb_link";s:33:"http://www.facebook.com/gavickpro";s:12:"twitter_link";s:28:"http://twitter.com/gavickpro";s:10:"gplus_link";s:53:"https://plus.google.com/110937149959405490547?prsrc=3";s:8:"rss_link";s:65:"http://www.gavick.com/magazine/index.php?format=feed&amp;type=rss";}s:12:"_multiwidget";i:1;}', 'yes'),
(5714, 'meetgavernwp_social_icons_position', 'right', 'yes'),
(5773, 'meetgavernwp_prefixfree_state', 'N', 'yes'),
(6323, 'theme_mods_MeetGavernWP-Child', 'a:2:{i:0;b:0;s:18:"nav_menu_locations";a:2:{s:8:"mainmenu";i:3;s:10:"footermenu";i:3;}}', 'yes'),
(6358, 'meetgavernwp_template_show_author_info_on_pages', 'Y', 'yes'),
(6359, 'meetgavernwp_custom_fields_state', 'Y', 'yes'),
(6360, 'meetgavernwp_recaptcha_state', 'Y', 'yes'),
(6361, 'meetgavernwp_recaptcha_public_key', '6LeWpr4SAAAAAOU9YciJrFYCp4SKHVcBi5YJ_QFp', 'yes'),
(6362, 'meetgavernwp_recaptcha_private_key', '6LeWpr4SAAAAAFsB5Y384FaAFVLr3HhgILuZWhP0', 'yes'),
(6393, 'meetgavernwp_branding_favicon', 'http://wp1/wp-content/uploads/2012/09/favicon.ico', 'yes'),
(6460, 'meetgavernwp_head_code', '', 'yes'),
(6461, 'meetgavernwp_footer_code', '', 'yes'),
(6462, 'meetgavernwp_authorinfo_exclude_include', 'exclude', 'yes'),
(6463, 'meetgavernwp_authorinfo_articles', '', 'yes'),
(6464, 'meetgavernwp_authorinfo_pages', '', 'yes'),
(6465, 'meetgavernwp_authorinfo_categories', '', 'yes'),
(6540, 'meetgavernwp_excerpt_len', '55', 'yes'),
(6673, 'meetgavernwp_fonts_edgefonts_body', 'http://use.edgefonts.net/sail.js', 'yes'),
(6674, 'meetgavernwp_fonts_edgefonts_headers', '', 'yes'),
(6675, 'meetgavernwp_fonts_edgefonts_others', '', 'yes'),
(6940, 'meetgavernwp_template_show_details_on_pages', 'N', 'yes'),
(6975, 'meetgavernwp_widget_style_css', 'a:7:{s:7:"text-33";s:0:"";s:15:"widget_gk_nsp-2";s:0:"";s:16:"widget_gk_tabs-2";s:0:"";s:11:"tag_cloud-2";s:0:"";s:20:"widget_gk_comments-2";s:0:"";s:6:"text-4";s:0:"";s:15:"widget_gk_nsp-3";s:0:"";}', 'yes'),
(7008, 'widget_widget_gk_nsp', 'a:3:{i:2;a:44:{s:5:"title";s:23:"Widget GK News Show Pro";s:16:"data_source_type";s:6:"latest";s:11:"data_source";s:0:"";s:7:"orderby";s:2:"ID";s:5:"order";s:4:"DESC";s:6:"offset";s:1:"0";s:13:"article_pages";s:1:"2";s:12:"article_cols";s:1:"2";s:12:"article_rows";s:1:"1";s:11:"links_pages";s:1:"2";s:10:"links_rows";s:1:"2";s:18:"article_pagination";s:22:"pagination_with_arrows";s:16:"links_pagination";s:22:"pagination_with_arrows";s:19:"article_title_state";s:2:"on";s:17:"article_title_len";s:2:"10";s:22:"article_title_len_type";s:5:"words";s:19:"article_title_order";s:1:"1";s:18:"article_text_state";s:2:"on";s:16:"article_text_len";s:2:"20";s:21:"article_text_len_type";s:5:"words";s:18:"article_text_order";s:1:"3";s:19:"article_image_state";s:2:"on";s:15:"article_image_w";s:3:"160";s:15:"article_image_h";s:3:"120";s:17:"article_image_pos";s:3:"top";s:19:"article_image_order";s:1:"2";s:18:"article_info_state";s:2:"on";s:19:"article_info_format";s:33:"%DATE %CATEGORY %AUTHOR %COMMENTS";s:24:"article_info_date_format";s:5:"d M Y";s:18:"article_info_order";s:1:"4";s:22:"article_readmore_state";s:2:"on";s:22:"article_readmore_order";s:1:"5";s:17:"links_title_state";s:2:"on";s:15:"links_title_len";s:2:"10";s:20:"links_title_len_type";s:5:"words";s:16:"links_text_state";s:2:"on";s:14:"links_text_len";s:2:"20";s:19:"links_text_len_type";s:5:"words";s:21:"article_block_padding";s:1:"0";s:19:"image_block_padding";s:1:"0";s:10:"cache_time";s:2:"60";s:8:"autoanim";s:2:"on";s:17:"autoanim_interval";s:4:"5000";s:14:"autoanim_hover";s:2:"on";}i:3;a:44:{s:5:"title";s:16:"GK News Show Pro";s:16:"data_source_type";s:6:"latest";s:11:"data_source";s:0:"";s:7:"orderby";s:2:"ID";s:5:"order";s:4:"DESC";s:6:"offset";s:1:"0";s:13:"article_pages";s:1:"3";s:12:"article_cols";s:1:"2";s:12:"article_rows";s:1:"1";s:11:"links_pages";s:1:"0";s:10:"links_rows";s:1:"0";s:18:"article_pagination";s:10:"pagination";s:16:"links_pagination";s:10:"pagination";s:19:"article_title_state";s:2:"on";s:17:"article_title_len";s:2:"10";s:22:"article_title_len_type";s:5:"words";s:19:"article_title_order";s:1:"1";s:18:"article_text_state";s:2:"on";s:16:"article_text_len";s:2:"20";s:21:"article_text_len_type";s:5:"words";s:18:"article_text_order";s:1:"3";s:19:"article_image_state";s:2:"on";s:15:"article_image_w";s:3:"320";s:15:"article_image_h";s:3:"180";s:17:"article_image_pos";s:3:"top";s:19:"article_image_order";s:1:"2";s:18:"article_info_state";s:2:"on";s:19:"article_info_format";s:33:"%DATE %CATEGORY %AUTHOR %COMMENTS";s:24:"article_info_date_format";s:5:"d M Y";s:18:"article_info_order";s:1:"4";s:22:"article_readmore_state";s:2:"on";s:22:"article_readmore_order";s:1:"5";s:17:"links_title_state";s:2:"on";s:15:"links_title_len";s:2:"10";s:20:"links_title_len_type";s:5:"words";s:16:"links_text_state";s:2:"on";s:14:"links_text_len";s:2:"20";s:19:"links_text_len_type";s:5:"words";s:21:"article_block_padding";s:1:"0";s:19:"image_block_padding";s:13:"10px 0 20px 0";s:10:"cache_time";s:2:"60";s:8:"autoanim";s:3:"off";s:17:"autoanim_interval";s:4:"5000";s:14:"autoanim_hover";s:2:"on";}s:12:"_multiwidget";i:1;}', 'yes'),
(7049, 'widget_widget_gk_tabs', 'a:2:{i:2;a:6:{s:5:"title";s:4:"Tabs";s:7:"sidebar";s:4:"tab1";s:5:"event";s:5:"click";s:8:"autoanim";s:8:"disabled";s:10:"anim_speed";s:3:"500";s:13:"anim_interval";s:4:"5000";}s:12:"_multiwidget";i:1;}', 'yes'),
(7332, 'meetgavernwp_hidden_post_fields', '', 'yes'),
(7874, 'meetgavernwp_pages_show_comments_on_pages', 'N', 'yes'),
(7907, 'meetgavernwp_ga_ua_id', '', 'yes'),
(7908, 'meetgavernwp_details_on_attachment_page', 'Y', 'yes'),
(8114, 'meetgavernwp_contact_template_email', '', 'yes'),
(8290, 'WPML_tester_plugin', '1', 'yes'),
(8291, 'WPML_tester_themes_prefix', 'WPML_', 'yes'),
(8292, 'WPML_tester_plugins_prefix', 'WPML_', 'yes'),
(8396, 'cron', 'a:3:{i:1489439889;a:3:{s:16:"wp_version_check";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:10:"twicedaily";s:4:"args";a:0:{}s:8:"interval";i:43200;}}s:17:"wp_update_plugins";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:10:"twicedaily";s:4:"args";a:0:{}s:8:"interval";i:43200;}}s:16:"wp_update_themes";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:10:"twicedaily";s:4:"args";a:0:{}s:8:"interval";i:43200;}}}i:1489483103;a:1:{s:19:"wp_scheduled_delete";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:5:"daily";s:4:"args";a:0:{}s:8:"interval";i:86400;}}}s:7:"version";i:2;}', 'yes'),
(8398, '_site_transient_update_core', 'O:8:"stdClass":3:{s:7:"updates";a:1:{i:0;O:8:"stdClass":9:{s:8:"response";s:7:"upgrade";s:8:"download";s:58:"http://downloads.wordpress.org/release/wordpress-4.7.3.zip";s:6:"locale";s:5:"en_US";s:8:"packages";O:8:"stdClass":4:{s:4:"full";s:58:"http://downloads.wordpress.org/release/wordpress-4.7.3.zip";s:10:"no_content";s:69:"http://downloads.wordpress.org/release/wordpress-4.7.3-no-content.zip";s:11:"new_bundled";s:70:"http://downloads.wordpress.org/release/wordpress-4.7.3-new-bundled.zip";s:7:"partial";b:0;}s:7:"current";s:5:"4.7.3";s:11:"php_version";s:5:"5.2.4";s:13:"mysql_version";s:3:"5.0";s:11:"new_bundled";s:3:"4.7";s:15:"partial_version";s:0:"";}}s:12:"last_checked";i:1489412301;s:15:"version_checked";s:5:"3.5.1";}', 'yes'),
(8399, '_site_transient_update_plugins', 'O:8:"stdClass":2:{s:12:"last_checked";i:1489412301;s:8:"response";a:0:{}}', 'yes'),
(8402, '_site_transient_update_themes', 'O:8:"stdClass":3:{s:12:"last_checked";i:1489412302;s:7:"checked";a:5:{s:18:"MeetGavernWP-Child";s:3:"1.6";s:12:"MeetGavernWP";s:5:"1.6.2";s:12:"twentyeleven";s:3:"1.5";s:9:"twentyten";s:3:"1.5";s:12:"twentytwelve";s:3:"1.1";}s:8:"response";a:3:{s:12:"twentyeleven";a:4:{s:5:"theme";s:12:"twentyeleven";s:11:"new_version";s:3:"2.5";s:3:"url";s:42:"https://wordpress.org/themes/twentyeleven/";s:7:"package";s:57:"http://downloads.wordpress.org/theme/twentyeleven.2.5.zip";}s:9:"twentyten";a:4:{s:5:"theme";s:9:"twentyten";s:11:"new_version";s:3:"2.2";s:3:"url";s:39:"https://wordpress.org/themes/twentyten/";s:7:"package";s:54:"http://downloads.wordpress.org/theme/twentyten.2.2.zip";}s:12:"twentytwelve";a:4:{s:5:"theme";s:12:"twentytwelve";s:11:"new_version";s:3:"2.2";s:3:"url";s:42:"https://wordpress.org/themes/twentytwelve/";s:7:"package";s:57:"http://downloads.wordpress.org/theme/twentytwelve.2.2.zip";}}}', 'yes'),
(8403, '_site_transient_timeout_browser_58769e6f77965f1b81999b5fbb0b69b5', '1489655904', 'yes'),
(8404, '_site_transient_browser_58769e6f77965f1b81999b5fbb0b69b5', 'a:9:{s:8:"platform";s:7:"Windows";s:4:"name";s:6:"Chrome";s:7:"version";s:12:"56.0.2924.87";s:10:"update_url";s:28:"http://www.google.com/chrome";s:7:"img_src";s:49:"http://s.wordpress.org/images/browsers/chrome.png";s:11:"img_src_ssl";s:48:"https://wordpress.org/images/browsers/chrome.png";s:15:"current_version";s:2:"18";s:7:"upgrade";b:0;s:8:"insecure";b:0;}', 'yes'),
(8405, 'dashboard_widget_options', 'a:4:{s:25:"dashboard_recent_comments";a:1:{s:5:"items";i:5;}s:24:"dashboard_incoming_links";a:5:{s:4:"home";s:10:"http://wp1";s:4:"link";s:86:"http://blogsearch.google.com/blogsearch?scoring=d&partner=wordpress&q=link:http://wp1/";s:3:"url";s:119:"http://blogsearch.google.com/blogsearch_feeds?scoring=d&ie=utf-8&num=10&output=rss&partner=wordpress&q=link:http://wp1/";s:5:"items";i:10;s:9:"show_date";b:0;}s:17:"dashboard_primary";a:7:{s:4:"link";s:26:"http://wordpress.org/news/";s:3:"url";s:31:"http://wordpress.org/news/feed/";s:5:"title";s:14:"WordPress Blog";s:5:"items";i:2;s:12:"show_summary";i:1;s:11:"show_author";i:0;s:9:"show_date";i:1;}s:19:"dashboard_secondary";a:7:{s:4:"link";s:28:"http://planet.wordpress.org/";s:3:"url";s:33:"http://planet.wordpress.org/feed/";s:5:"title";s:20:"Other WordPress News";s:5:"items";i:5;s:12:"show_summary";i:0;s:11:"show_author";i:0;s:9:"show_date";i:0;}}', 'yes'),
(8408, 'can_compress_scripts', '1', 'yes'),
(8409, '_transient_timeout_dash_20494a3d90a6669585674ed0eb8dcd8f', '1489094306', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(8410, '_transient_dash_20494a3d90a6669585674ed0eb8dcd8f', '<p><strong>RSS Error</strong>: A feed could not be found at http://blogsearch.google.com/blogsearch_feeds?scoring=d&ie=utf-8&num=10&output=rss&partner=wordpress&q=link:http://wp1/. A feed with an invalid mime type may fall victim to this error, or SimplePie was unable to auto-discover it.. Use force_feed() if you are certain this URL is a real feed.</p>', 'no'),
(8411, '_transient_timeout_dash_4077549d03da2e451c8b5f002294ff51', '1489094306', 'no'),
(8412, '_transient_dash_4077549d03da2e451c8b5f002294ff51', '<div class="rss-widget"><p><strong>RSS Error</strong>: WP HTTP Error: SSL certificate problem: unable to get local issuer certificate</p></div>', 'no'),
(8413, '_transient_timeout_feed_867bd5c64f85878d03a060509cd2f92c', '1489094308', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(8414, '_transient_feed_867bd5c64f85878d03a060509cd2f92c', 'a:4:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:3:"\n\n\n";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:61:"\n	\n	\n	\n	\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:16:"WordPress Planet";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:28:"http://planet.wordpress.org/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"language";a:1:{i:0;a:5:{s:4:"data";s:2:"en";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:47:"WordPress Planet - http://planet.wordpress.org/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:50:{i:0;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:45:"WPTavern: Google Launches Invisible reCAPTCHA";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=67177";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"https://wptavern.com/google-launches-invisible-recaptcha";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4216:"<p>Three years ago Google introduced its new <a href="https://wptavern.com/googles-new-recaptcha-api-replaces-distorted-text-with-a-checkbox" target="_blank">reCAPTCHA v2 API</a>, replacing distorted text challenges with a simple &#8220;I&#8217;m not a robot&#8221; checkbox for validating users. This was a welcome improvement over the fuzzy text in a box that frustrated and infuriated real humans.</p>\n<a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2014/12/recaptcha.png?ssl=1"><img /></a>reCAPTCHA v1\n<a href="https://i1.wp.com/wptavern.com/wp-content/uploads/2014/12/nocaptcha.gif?ssl=1"><img /></a>reCAPTCHA v2 photo credit: <a href="http://googleonlinesecurity.blogspot.com/2014/12/are-you-robot-introducing-no-captcha.html">Google Online Security Blog</a>\n<p>reCAPTCHA v1 is no longer supported as of May 2016 and most sites have moved on to use v2. WordPress.org was one of the early adopters of reCAPTCHA v2 and still uses it to validate users on its <a href="https://login.wordpress.org/register" target="_blank">registration form</a>. </p>\n<p>The evolution of reCAPTCHA technology continues, as Google <a href="https://www.google.com/recaptcha/admin" target="_blank">opened up registration</a> for its new Invisible reCAPTCHA today. With the exception of the &#8220;Protected by reCAPTCHA&#8221; badge on forms, the newest implementation is invisible. It doesn&#8217;t require the user to click anything. Invisible reCAPTCHA validates users in the background and is invoked when the user clicks on an existing button on the site. It can also be invoked by a JavaScript API call. If it deems the traffic to be suspicious, it will require the user to solve a captcha. </p>\n<h3>Invisible reCaptcha for WordPress</h3>\n<p><a href="https://wordpress.org/plugins/invisible-recaptcha/" target="_blank">Invisible reCaptcha for WordPress</a> is the first plugin to implement the new API. It was launched in December 2016, shortly after Invisible reCAPTCHA went into beta. The settings page lets users paste in the site key and secret key Google issues after <a href="https://www.google.com/recaptcha/admin" target="_blank">registering on the reCAPTCHA site</a>.   </p>\n<p><a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2017/03/invisible-recaptcha-settings.png?ssl=1"><img /></a></p>\n<p>Invisible reCaptcha for WordPress has options to enable protection on the WordPress login, registration, comments, and forgot password forms. It is compatible with WooCommerce for protecting the login, registration, product review, lost password, and reset password forms. The plugin also works with Contact Form 7 to protect form submission.</p>\n<p>On the frontend users will see the &#8220;Protected by reCAPTCHA&#8221; badge. I&#8217;m not fond of the sticky badge on the right side of the viewport that slides out on hover, as it seems too obtrusive. It looks better in the context of the form, and the plugin offers an option to display it inline and add custom CSS.</p>\n<p><a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2017/03/invisible-recaptcha-plugin-frontend.png?ssl=1"><img /></a></p>\n<p>After testing the plugin and seeing Invisible reCAPTCHA in action, I was impressed with how easy it was to set up. It took less than a minute to get my site added at Google and the plugin configured. However, I was disappointed that the captcha is not truly invisible. Google&#8217;s overt branding on what is meant to be an invisible product makes it only a slight improvement over the v2 checkbox implementation in terms of what the user sees when interacting with the form. It is possible to hide the badge using CSS but this may violate reCAPTCHA&#8217;s policies, as the badge links to Google&#8217;s terms and privacy documents.</p>\n<p><a href="https://wordpress.org/plugins/invisible-recaptcha/" target="_blank">Invisible reCaptcha for WordPress</a> is free on WordPress.org and should greatly reduce the spam coming through WordPress forms. The plugin is compatible with Multisite and can be activated network-wide or on a single site. Detailed instructions for extending it to protect any plugin or custom form are available on WordPress.org.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 09 Mar 2017 05:13:46 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:101:"WPTavern: WPWeekly Episode 266 – Clef Is Shutting Down, Configuring User Avatars, and WPCampus 2017";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:58:"https://wptavern.com?p=67181&preview=true&preview_id=67181";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:106:"https://wptavern.com/wpweekly-episode-266-clef-is-shutting-down-configuring-user-avatars-and-wpcampus-2017";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4263:"<p>In this episode, <a href="http://marcuscouch.com/">Marcus Couch</a> and I discuss the stories that are making headlines including, Clef shutting down, WordPress 4.7.3, and WordPress.com&#8217;s new add-on for Chrome. I shared two lessons I recently learned from managing a site that has open registration and uses BuddyPress. We also share details of WPCampus 2017.</p>\n<h2>Stories Discussed:</h2>\n<p><a href="https://wptavern.com/wordpress-4-7-3-patches-six-security-vulnerabilities-immediate-update-advised">WordPress 4.7.3 Patches Six Security Vulnerabilities, Immediate Update Advised</a><br />\n<a href="https://wptavern.com/clef-is-shutting-down-june-6th">Clef is Shutting Down June 6th</a><br />\n<a href="https://wptavern.com/wordpress-com-releases-chrome-add-on-for-google-docs">WordPress.com Releases Chrome Add-On for Google Docs</a><br />\n<a href="https://wptavern.com/freemius-launches-insights-for-wordpress-themes">Freemius Launches Insights for WordPress Themes</a><br />\n<a href="https://wptavern.com/configuring-a-user-avatar-in-wordpress-is-not-as-easy-as-it-should-be">Configuring a User Avatar in WordPress Is Not as Easy as It Should Be</a><br />\n<a href="https://wptavern.com/buddypress-core-contributors-working-on-a-way-to-safely-edit-a-groups-permalink">BuddyPress Core Contributors Working on a Way to Safely Edit a Group’s Permalink</a><br />\n<a href="https://wptavern.com/wpcampus-2017-to-take-place-july-14-15-in-buffalo-ny">WPCampus 2017 to Take Place July 14-15 in Buffalo, NY</a></p>\n<h2>What&#8217;s on WordPress.tv:</h2>\n<p><a href="http://wordpress.tv/2017/03/06/wordpress-community-interview-with-jenny-beaumont/">WordPress Community Interview With Jenny Beaumont </a></p>\n<p>Jenny Beaumont is a multicultural, multidisciplinary maker and writer of things. She is a leader of people and of projects, who values communication above all else as a means to successful collaboration. Jenny and Paolo Belcastro, are the co-organizers of WordCamp Europe. She is the team lead of the local WordPress Community.</p>\n<p><a href="http://wordpress.tv/2017/03/05/rob-ruiz-admin-experience-the-new-ux/">Rob Ruiz: Admin Experience – The New UX</a></p>\n<p>This presentation is part of WordCamp Omaha 2016. Too often, User Experience is only considered on the front-end of a WordPress site design. Although that is very important, too many WP Designers/Developers stop there. This video goes over tricks and methods to make updating and administrating WordPress sites much more user-friendly for the admin/site-owner/client.</p>\n<p><a href="http://wordpress.tv/2016/10/27/chris-klosowski-democratizing-inspiration/">Chris Klosowski: Democratizing Inspiration</a></p>\n<p>This presentation is part of WordCamp Phoenix 2016. All businesses and stories start as an idea. WordPress is a democratized platform for that inspiration, where ideas are empowered to evolve into meaningful products and stories that shape and create the world we want.</p>\n<h2>Plugins Picked By Marcus:</h2>\n<p><a href="https://wordpress.org/plugins/clone-menu/">WP Clone Menu</a> enables you to clone menus using existing menus.</p>\n<p><a href="https://wordpress.org/plugins/list-images-to-optimize/">WordPress List Images to Optimize</a> gives users an idea of which ones need to be optimized or re-uploaded.</p>\n<p><a href="https://wordpress.org/plugins/wp-raffle/">WP Raffle</a> fully automates an online raffle. Simply install, start the appropriate raffle and prizes, and this plugin does the rest; picking the winners at the designated raffle draw date.</p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, March 15th 3:00 P.M. Eastern</p>\n<p><strong>Subscribe To WPWeekly Via Itunes: </strong><a href="https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738" target="_blank">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via RSS: </strong><a href="https://wptavern.com/feed/podcast" target="_blank">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via Stitcher Radio: </strong><a href="http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr" target="_blank">Click here to subscribe</a></p>\n<p><strong>Listen To Episode #266:</strong><br />\n</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 09 Mar 2017 02:49:36 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:73:"WPTavern: Google is Retiring Its Adsense for WordPress Plugin in May 2017";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66886";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:84:"https://wptavern.com/google-is-retiring-its-adsense-for-wordpress-plugin-in-may-2017";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3035:"<p>Google <a href="https://support.google.com/adsense/answer/3380626?hl=en-GB" target="_blank">announced</a> that it is retiring its <a href="https://wordpress.org/plugins/google-publisher/" target="_blank">official Adsense plugin</a>, previously known as the Google Publisher plugin. For the past three years it has allowed WordPress users to easily add Adsense ads to their sites, enable mobile-specific ad layouts, and manage ads with a point-and-click interface. </p>\n<p>&#8220;After reviewing the AdSense Plugin for WordPress, we&#8217;ve decided that in the future we can support WordPress publishers better with new innovative features like our automatic ad formats and other upcoming initiatives,&#8221; Google said. &#8220;As a result, we will be deprecating the AdSense Plugin for WordPress in May 2017.&#8221;</p>\n<p>Google published the following timeline for sunsetting the plugin:</p>\n<ul>\n<li>Early March 2017: New publishers will not be able to sign up for AdSense by using the plugin.</li>\n<li>Early April 2017: Existing publishers will not be able to change their ad settings or ad units through the plugin.</li>\n<li>Early May 2017: Google will no longer provide support for the plugin.</li>\n</ul>\n<p>Although Google&#8217;s Adsense plugin was used by more than 200,000 WordPress sites, the company has not provided support for the plugin for the past two years. It has been poorly reviewed throughout its three-year listing on WordPress.org and is currently hovering at 2.7/5 stars.</p>\n<p>This change will also affect <a href="https://wordpress.org/plugins/search.php?type=term&q=google+adsense" target="_blank">dozens of other Google Adsense plugins</a>, as Google is changing its ad display recommendations and does not endorse or support using any other WordPress plugins for this purpose.</p>\n<p>Affected publishers received an email with information on how to display ads without the plugin. Google recommends deactivating and removing the plugin, followed by using the QuickStart option or creating and placing ad units by inserting the ad code into text widgets. Those who are manually placing ads using widgets will need to make sure they comply with Google&#8217;s detailed <a href="https://support.google.com/adsense/answer/1346295" target="_blank">ad placement policies</a>. </p>\n<p>The new <a href="https://support.google.com/adsense/answer/7171740" target="_blank">QuickStart</a> method is a <a href="https://support.google.com/adsense/answer/6245304" target="_blank">page-level ad format</a> that automatically displays ads at &#8220;optimal times&#8221; when Adsense deems they will perform well and provide a good experience for visitors. These ads can be turned on by placing the QuickStart code within the  tag. It&#8217;s easier to set up but not nearly as flexible as placing ads in text widgets, which can be conditionally displayed or hidden on pages, categories, tags, and post types using widget visibility rules offered in Jetpack or another plugin.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 08 Mar 2017 21:23:17 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:37:"Matt: WordPress Collaborative Editing";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:22:"https://ma.tt/?p=47145";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:54:"https://ma.tt/2017/03/wordpress-collaborative-editing/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2390:"<p>I&#8217;m really excited about the <a href="https://en.blog.wordpress.com/2017/03/07/introducing-wordpress-com-for-google-docs-a-new-way-forward-for-collaborative-editing/">new Google Docs integration that just launched</a> &#8212; basically it builds a beautiful bridge between what is probably the best collaborative document editor on the planet right now, <a href="https://www.google.com/docs/about/">Google&#8217;s</a>, and let&#8217;s you one-click bring a document there into a WordPress draft with all the formatting, links, and everything brought over. There&#8217;s even a clever feature that if you are copying and pasting from Docs it&#8217;ll tell you about the integration.</p>\n<p>I think this is highly complementary to the work we&#8217;re doing with the new Editor in core WordPress. Why? Google Docs represents the web pinnacle of the WordPerfect / Word legacy of editing &#8220;pages&#8221;, what I&#8217;ll call a document editor. It runs on the web, but it&#8217;s not native to the web in that its fundamental paradigm is still about the document itself. With the new WordPress Editor the blocks will be all about bringing together building blocks from all over &#8212; maps, videos, galleries, forms, images &#8212; and making them like Legos you can use to build a rich, web-native post or page.</p>\n<p>We&#8217;re going to look into some collaborative features, but Google&#8217;s annotations, comments, and real-time co-editing are years ahead there. So if you&#8217;re drafting something that looks closer to something in the 90s you could print out, <a href="https://en.blog.wordpress.com/2017/03/07/introducing-wordpress-com-for-google-docs-a-new-way-forward-for-collaborative-editing/">Docs will be the best place to start and collaborate</a> (and better than Medium). If you want to built a richer experience, something that really only makes sense on an interactive screen, that&#8217;s what the new WordPress editor will be for.</p>\n<p>One final note, the <a href="https://chrome.google.com/webstore/detail/wordpresscom-for-google-d/baibkfjlahbcogbckhjljjenalhamjbp">Docs web store</a> makes it tricky to use different Google accounts to add integrations like this one. To make it easy, open up a Google Doc under the account you want to use, then go to Add-ons -&gt; Get add-ons… -&gt; search for “Automattic&#8221; and you&#8217;ll be all set.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 08 Mar 2017 20:12:25 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:4:"Matt";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:22:"HeroPress: Coming Home";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:56:"https://heropress.com/?post_type=heropress-essays&p=1634";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:41:"https://heropress.com/essays/coming-home/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:13077:"<img width="960" height="480" src="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/03/030817-min-1024x512.jpg" class="attachment-large size-large wp-post-image" alt="Pull Quote: I love that the WordPress community wants everyone to feel welcome and included," /><p>When I was 17, I attended the school for graphical design and printing. I remember one time a teacher yelling at me: ‘With an attitude like that, you won’t get very far in life’.</p>\n<p>I don’t know why this pops into my mind at the very moment I started to writing this piece for HeroPress. I guess I always wanted to do things my way. I have had pretty strong thoughts about how and why I wanted to do things in life, both personally and work wise.</p>\n<p>I’ve felt a great love for the DIY and making industry all my life, and was surrounded by people in small alternative ecosystems in my early twenties. Doing printing, music, squatting, cooking… those were the days. After a while, I sort of drifted apart. My career and life seemed to go a different way from what I actually loved. However, I did some small DIY internet projects on the computer that I got halfway through the nineties. I built some blogs and figured out how to do html. I was all on the side though, never professional.</p>\n<h3>A New Beginning</h3>\n<p>Around 2002, I really wanted to go away from what I had and dream, make plans and start a new life. So I ditched my management job, husband and newly built house. With a new love in my life, I bought a 150 year old farmhouse in a rural part of the Netherlands. We were busy doing it up and dreamt about starting our own business someday. Not to depend on a time &amp; place based 9-5 job anymore.</p>\n<p>In 2007, we started our own webshop in organic gardening and sustainable, handmade garden tools. I experimented with code, Open Source Systems and SEO. I did graphical design, e-mail marketing, text writing, photography… we grew and grew and grew. And then we hit the ground. We got struck by the crisis and everything fell apart.</p>\n<p>It made me rethink my career and 2011 was the start for me working with WordPress. I had built websites , but never designed a website with a content management system (besides the webshop). I knew WordPress from the dot com blog I had, so after comparing a few systems and asking for advice on Twitter, I decided to have WordPress as a basis for my future work.</p>\n<p>At the time, I didn’t know what WordPress was. I mean, what WordPress really was. Basically it was the software I chose to work with, but that was that. I spent a lot of time finding out about the plugins, themes and adjusting code and css.</p>\n<blockquote><p>But I never knew about the WordPress community that was there, and I wish I had.</p></blockquote>\n<p>Although I’ve learned a great deal from my research and mistakes, it would have been so much easier having the supportive community around in the early days of my life as a web designer.</p>\n<p>It took me quite a while to find out about the WordPress community. I had discovered WordPress support, but never realised these were all hardworking people like me, giving back some time and knowledge to the community without getting paid for it. I guess the anonymity of the internet was part of the reason for me not knowing. At some point I heard about these web developer and design conferences in general, not WordPress specific. It never occurred to me to go there, because I thought I wouldn’t fit in. I didn’t see myself as a real professional, because nearly all my knowledge was self taught. (Later on, I found out that’s the story of nearly everyone I met within the WordPress community). Besides that, designing websites was just part of my job. I also did graphical design, print work, marketing and copywriting. Another reason to feel like a fool among all these smart guys speaking code to each other!</p>\n<h3>A Revelation</h3>\n<p>Only in 2015 things changed. One of my friends told me about Meetups and was surprised I hadn’t heard of it, since I was her geeky friend. But I had been so busy with keeping my head up after breaking up with my boyfriend, building my company, starting a part time study (I decided to get my bachelor on Media, Information an Communication). In the meantime, I had moved to a new part of the Netherlands again. Looking at local Meetups, I found a WordPress Meetup in Rotterdam, approx. 15 minutes by train from where I lived. On a Monday evening, I decided to go there, not knowing anyone attending. I’m not a shy person at all, but sometimes stepping into a new network can be tough, even for extroverts like me.</p>\n<a href="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/03/rotterdam_meetup-min.jpg"><img class="size-large wp-image-1636" src="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/03/rotterdam_meetup-min-1024x633.jpg" alt="Scene from the back of the room, Monique with her hand up to ask a question." width="960" height="593" /></a>Asking a question at the Rotterdam meetup.\n<p>Arriving in the pouring rain, I stepped into the elevator bringing me to the right floor. A friendly women called Marleen stepped in with me and we started talking. We had a good click right away and chatted all evening. She then told me I should go to WordCamp Netherlands later on that year, convincing me I would fit in and it wouldn’t be all development and code boys, but all kinds of people like bloggers, marketeers, teachers or entrepreneurs.</p>\n<blockquote><p>So October 2015 I went to my first WordCamp ever and had a really good time. It definitely was an eye opener.</p></blockquote>\n<p>Finishing my thesis (and moving houses again!), I was too busy looking around, so unfortunately I couldn’t attend any other Meetups after that, but I was determined to go to the next Dutch WordCamp. I started following their Twitter to stay updated. At some point I saw them mentioning a WordCamp Europe. By that time, I hadn’t really figured out this whole WordCamp thing (and certainly hadn’t realised the impact it would have on me later).</p>\n<p>But what? WordCamp Europe? Vienna? End of June? Well that would be a great graduation present after three years of hard work! So I bought myself a ticket. And started to look forward going to a lovely city. As the date got closer, I realised this was much bigger than I expected. Wow, are there really people flying in from all over the world to be here? So it’s not just a Europe-thing? I was getting more and more impressed (and excited) by the day.</p>\n<h3>WordCamp Europe 2017</h3>\n<p>To have some pre-travelling fun, I started following the WordCamp Europe hashtag (<a href="https://twitter.com/search?q=%23wceu">#wceu</a>) on Twitter. Soon, I found out there were all these warmup events and I hooked up with some Dutch WordPressers for a cycling trip through Vienna in the scorching heat. For three hours, we chased our guide Franz through Vienna and I had the best time of my life. Immediately I felt at home with this group that I had never met before, apart from speaking to one of them briefly on WordCamp Netherlands. Apparently they had done a bike tour in Sevilla the year before, and as real Dutchies, they thought to continue the tradition.</p>\n<p>For the next few days, we sort of met on and off, having dinner or drinks with other people they knew. I was impressed with WordCamp itself as well. I don’t think I’ve ever been to an event organised this well. The catering was great, the talks were great and the weather was perfect. The social on Saturday night was unforgettable. All volunteers were so dedicated and the atmosphere all through the event was the best ever. After returning I was so enthusiastic about being part of this, but it was difficult to describe how I really felt. I guess you have to be part of it to know what WordPress really is.</p>\n<blockquote><p>Because WordPress in fact ís the community. I seriously doubt it would exist without the community.</p></blockquote>\n<p>What I found truly amazing about it, is that there is so much respect. People make an effort to make the WordCamps accessible for everyone. Disabled, bad eyesight or hearing: WordCamps are accessible for wheelchairs, have live subtitles on the talks or someone who knows sign language. Children? Of course there’s a child care department, so parents can enjoy the talks as well. Crazy diets? Not one diet is too crazy for WordCamp. Event managers should definitely attend a WordCamp or sign up as a volunteer because they could learn a great deal.</p>\n<p>I love that the WordPress community wants everybody to feel welcome and included. And this is what I thought of when this remark of my teacher popped into my mind. Ever since I was a child, I have a great feeling for justice. I want people to be equal and not being judged on whatever. That’s my attitude he had problems with, because he thought I should adapt to what big bosses would tell me in life and that they would never accept the different opinion I had. Within the WordPress community, I feel that people live by this rule of justice (the code of conduct I think helps a great deal) and it goes without saying. I believe this is very very welcome in times like these and I feel happy that I’ve discovered the WordPress community. It really felt like coming home and meeting people on WordCamps help me keep faith in humanity.</p>\n<a href="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/03/wordcamp_netherlands2-min.jpg"><img class="size-large wp-image-1638" src="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/03/wordcamp_netherlands2-min-1024x536.jpg" alt="WordCamp Netherlands Volunteers" width="960" height="503" /></a>WordCamp Netherlands Volunteers\n<p>I went to the Dutch WordCamp last October, this time giving back a little bit by volunteering. And at the time of writing, I’m looking forward to my next WordCamp which will be in London from 17-19 March. It will be great to go to one of my favourite cities, but I’m excited to go to this WordCamp for more than one reason: I applied and got selected as as speaker! Not that I’m so keen on standing on that stage, but because it’s a great opportunity to for me to share knowledge and learn. Because that’s what WordCamps are for aren’t they?</p>\n<h3>Your Turn</h3>\n<p>So this is a shout out to all WordPress newbies: get your arse over to the nearest WordCamp, you won’t regret it! We were all newbies once too, and we’re all still learning everyday and willing to teach you. We could probably learn from your expertise too!</p>\n<p>At the same time it’s a shout out to the WordPress community too: make it as easy as possible for new people to attend WordCamps. Invite them, buy tickets for them. Make them aware of the added value of the lively WordPress community both offline and online. Maybe it could become part of WordPress news in new installs? A link to all the great resources on <a href="http://wordpress.tv/">WordPress.tv</a> and support, and a notification of <a href="https://central.wordcamp.org/">upcoming WordCamps</a>? I definitely have intentions of visiting as many WordCamps as possible in the years coming, so hopefully I&#8217;ll meet you at one of them!</p>\n<div class="rtsocial-container rtsocial-container-align-right rtsocial-horizontal"><div class="rtsocial-twitter-horizontal"><div class="rtsocial-twitter-horizontal-button"><a title="Tweet: Coming Home" class="rtsocial-twitter-button" href="https://twitter.com/share?text=Coming%20Home&via=heropress&url=https%3A%2F%2Fheropress.com%2Fessays%2Fcoming-home%2F" rel="nofollow" target="_blank"></a></div></div><div class="rtsocial-fb-horizontal fb-light"><div class="rtsocial-fb-horizontal-button"><a title="Like: Coming Home" class="rtsocial-fb-button rtsocial-fb-like-light" href="https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fessays%2Fcoming-home%2F" rel="nofollow" target="_blank"></a></div></div><div class="rtsocial-linkedin-horizontal"><div class="rtsocial-linkedin-horizontal-button"><a class="rtsocial-linkedin-button" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fessays%2Fcoming-home%2F&title=Coming+Home" rel="nofollow" target="_blank" title="Share: Coming Home"></a></div></div><div class="rtsocial-pinterest-horizontal"><div class="rtsocial-pinterest-horizontal-button"><a class="rtsocial-pinterest-button" href="https://pinterest.com/pin/create/button/?url=https://heropress.com/essays/coming-home/&media=https://heropress.com/wp-content/uploads/2017/03/030817-min-150x150.jpg&description=Coming Home" rel="nofollow" target="_blank" title="Pin: Coming Home"></a></div></div><a rel="nofollow" class="perma-link" href="https://heropress.com/essays/coming-home/" title="Coming Home"></a></div><p>The post <a rel="nofollow" href="https://heropress.com/essays/coming-home/">Coming Home</a> appeared first on <a rel="nofollow" href="https://heropress.com">HeroPress</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 08 Mar 2017 12:00:56 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:17:"Monique Dubbelman";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:40:"WPTavern: Clef is Shutting Down June 6th";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66963";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:51:"https://wptavern.com/clef-is-shutting-down-june-6th";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3854:"<p><a href="https://getclef.com/">Clef</a>, a two-factor authentication service founded in 2013 <a href="https://blog.getclef.com/discontinuing-support-for-clef-6c89febef5f3#.9b7u28s9p">has announced</a> that it is discontinuing its product. Clef is most well known for removing the burden of rememberingvusernames and passwords by replacing them with a 300 character key using mobile cryptography.</p>\n<p>The service&#8217;s <a href="https://wordpress.org/plugins/wpclef">WordPress plugin</a> is active on more than 1M sites and has been removed from the directory. Clef will continue operating until June 6th, 2017. After June 6th, the mobile app will stop functioning and be removed from the Google Play and Apple App stores.</p>\n<p>Users are highly encouraged to transition to a different two-factor authentication provider as soon as possible. Clef has published a <a href="http://support.getclef.com/article/136-transitioning-away-from-clef-for-two-factor-authentication">transition guide</a> to help users switch to <a href="https://wordpress.org/plugins/two-factor/">Two-Factor</a>, <a href="https://www.authy.com/integrations/wordpress/">Authy</a>, or <a href="https://wordpress.org/plugins/google-authenticator/installation/">Google Authenticator</a>.</p>\n<p>The announcement offers few details as to why the service is shutting down. Brennen Byrne, Clef&#8217;s CEO, says the team is joining another company and that more details will be published soon.</p>\n<p>Users and customers reacted to the news by expressing disappointment and sadness in the comments, &#8220;I am very very sad for that,&#8221; Furio Detti said. &#8220;And I must admit a bit disappointed — Clef was clever, clean, quick.&#8221;</p>\n<p>&#8220;I need no more and no other. I’d like to know if the shutdown could be a sign of bad luck in business or a changing of strategy to improve the product. I tried many systems, but CLEF was the very best, the others, almost annoying crap.&#8221;</p>\n<p>Others questioned how the company reached the point of shutting down, &#8220;Has something gone wrong or incredibly right?,&#8221; John Walker asked. &#8220;How can something so useful and reassuring be canned?&#8221;</p>\n<p>&#8220;WordPress installer states over 1 million active users. That’s a lot of websites to just drop without tangible explanation.&#8221;</p>\n<p>The decision to sunset the product was not an easy one, &#8220;We&#8217;ve considered a lot of options for how we can satisfy our responsibility to the folks who have used our product for a long time, but ultimately we felt like this was the only responsible option we could take,&#8221; Byrne said.</p>\n<p>The service offered commercial business plans, including a $1,000 a month plan but couldn&#8217;t find a business model that worked, &#8220;We&#8217;ve been so happy to build a product that people loved and which had widespread adoption in the WordPress community, but we haven&#8217;t been able to find a business model which made the company sustainable,&#8221; he said.</p>\n<p>It&#8217;s evident by the comments that Clef offered something unique. Whether it was the <a href="https://medium.com/@friendly_amy/im-so-sad-to-see-it-go-f978154fda9e?source=responses---------24----------">user experience</a>, <a href="https://medium.com/@zachatkinson85/this-is-very-unfortunate-a27f79d2e7dd?source=responses---------4----------">ease of use</a>, or <a href="https://medium.com/@rogerioleme/too-bad-i-always-enjoyed-the-clef-authenticator-dee40dd7ebf3?source=responses---------3-32---------">working like magic</a>, the service has a devoted fanbase that love the product.</p>\n<p>Please spread the word that Clef is shutting down as potentially thousands of users may not discover it until their keycodes stop working on June 6th.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 08 Mar 2017 09:05:17 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:62:"WPTavern: WordPress.com Releases Chrome Add-On for Google Docs";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66941";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:73:"https://wptavern.com/wordpress-com-releases-chrome-add-on-for-google-docs";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3597:"<p>WordPress.com <a href="https://en.blog.wordpress.com/2017/03/07/introducing-wordpress-com-for-google-docs-a-new-way-forward-for-collaborative-editing/" target="_blank">released</a> its new Chrome <a href="https://chrome.google.com/webstore/detail/wordpresscom-for-google-d/baibkfjlahbcogbckhjljjenalhamjbp" target="_blank">Add-on for Google Docs</a> today. The free add-on allows users to edit documents collaboratively in Google Docs and then send the document directly to any WordPress.com site as a draft post. The add-on can also connect to Jetpack-enabled sites, offering the same functionality for self-hosted WordPress users.</p>\n<p><a href="https://i1.wp.com/wptavern.com/wp-content/uploads/2017/03/wp-google-docs.jpg?ssl=1"><img /></a></p>\n<p>After installing the add-on from the Google Chrome Store, users will be asked to give permission for it to send posts to WordPress.com. Clicking on the Add-ons menu within the document will open a sidebar where you can add sites. When the document is ready to send to one of your sites, you can click on the &#8220;Save Draft&#8221; button. You&#8217;ll be given a preview link to check out how it looks on the site. </p>\n<p>Ordinarily, copying and pasting content from Google Docs into WordPress results in a messy draft that lacks the same formatting. The new add-on was created to tackle this problem. It duplicates the document&#8217;s images and formatting into WordPress, cutting out a lot of secondary formatting that used to be required.</p>\n<p>&#8220;Collaboration has been a big area of interest for us, and we want to investigate a lot of different approaches,&#8221; Automattic representative Mark Armstrong said. &#8220;Google Docs made perfect sense because it&#8217;s where a lot of people already do collaborative editing. If we could streamline that process for publishing a Google Doc on WordPress, that would help so many people. We&#8217;ve been testing it with publishers and heard a lot of great feedback.&#8221; </p>\n<p>Armstrong didn&#8217;t have any data for how often users paste content from Google docs to WordPress.com, but making content more portable between the two platforms is an often requested feature. The WordPress Plugin Directory has <a href="https://wordpress.org/plugins/search.php?q=Google+Docs" target="_blank">several plugins for embedding Google documents inside content</a> via a shortcode embed or oEmbed, demonstrating that thousands of users are already interested in bringing content over from Google Docs to WordPress.</p>\n<p>After testing the add-on with a sample document that includes special formatting and images, I found that it is a great improvement over the clunky copy and paste experience. Sending posts to WordPress.com is fairly seamless and works as advertised. </p>\n<p>In testing with multiple Jetpack-enabled sites I received some errors when authenticating, which may be due to a security limitation of my host. We had the same issue with the Tavern and were not able to fully test it for self-hosted WordPress sites, but are continuing to investigate the issue. However, other Jetpack-enabled sites are reportedly working with the add-on as expected, according to Armstrong.</p>\n<p>Heavy users of Google Docs and WordPress are excited by the prospect of having the two platforms play nicely together. It saves users quite a bit of time and the new tool will do a lot to bridge the gap for those who rely on Google Docs for collaborative editing. It&#8217;s the next best thing to having collaborative editing built into WordPress. </p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 07 Mar 2017 22:14:37 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:88:"WPTavern: WordPress 4.7.3 Patches Six Security Vulnerabilities, Immediate Update Advised";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=67001";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:98:"https://wptavern.com/wordpress-4-7-3-patches-six-security-vulnerabilities-immediate-update-advised";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2298:"<p><a href="https://wordpress.org/news/2017/03/wordpress-4-7-3-security-and-maintenance-release/" target="_blank">WordPress 4.7.3</a> is now available with patches for six security vulnerabilities that affect version 4.7.2 and all previous versions. WordPress.org is strongly encouraging users to update their sites immediately. </p>\n<p>The release includes fixes for three XSS vulnerabilities that affect media file metadata, video URLs in YouTube embeds, and taxonomy term names. It also includes patches for three other security issues:</p>\n<ul>\n<li>Control characters can trick redirect URL validation</li>\n<li>Unintended files can be deleted by administrators using the plugin deletion functionality</li>\n<li>Cross-site request forgery (CSRF) in Press This leading to excessive use of server resources</li>\n</ul>\n<p>These vulnerabilities were responsibly disclosed by a variety of different sources contributing to WordPress security.</p>\n<p>Version 4.7.3 is also a maintenance release with fixes for <a href="https://core.trac.wordpress.org/query?status=closed&milestone=4.7.3&group=component&col=id&col=summary&col=component&col=status&col=owner&col=type&col=priority&col=keywords&order=priority" target="_blank">39 issues</a>. This includes a fix for an annoying bug that popped up after 4.7.1 where certain <a href="https://core.trac.wordpress.org/ticket/39550" target="_blank">non-image files failed to upload</a>, giving an error message that said: &#8220;Sorry, this file type is not permitted for security reasons.&#8221; Those who were negatively impacted have been waiting on this fix for two months.</p>\n<p>WordPress sites that haven&#8217;t been updated have been subject to a rash of exploits during the last month after a <a href="https://wptavern.com/wordpress-rest-api-vulnerability-is-being-actively-exploited-hundreds-of-thousands-of-sites-defaced" target="_blank">WP REST API vulnerability was disclosed</a>. Now that the patched vulnerabilities in 4.7.3 are public, it is only a matter of time before hackers begin exploiting sites that do not update. If you have auto-updates on, your site has probably already updated by now. If for some reason you have auto-updates disabled, you will want to manually update as soon as possible.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 07 Mar 2017 20:39:42 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:23:"Matt: The Job Interview";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:22:"https://ma.tt/?p=47141";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:40:"https://ma.tt/2017/03/the-job-interview/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:358:"<p>Inc. writes <a href="http://www.inc.com/marcel-schwantes/science-81-percent-of-people-lie-in-job-interviews-heres-what-top-companies-are-.html">The Job Interview Will Soon Be Dead. Here&#8217;s What the Top Companies Are Replacing It With</a>, and looks at how our brains mislead us in interviews and how Menlo Innovations and Automattic approach it.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 07 Mar 2017 11:46:15 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:4:"Matt";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:64:"WPTavern: NRKbeta Open Sources Comment Quiz Plugin for WordPress";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66935";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:75:"https://wptavern.com/nrkbeta-open-sources-comment-quiz-plugin-for-wordpress";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3418:"<p><a href="https://nrkbeta.no" target="_blank">NRKbeta</a>, the Norwegian Broadcasting Corporation&#8217;s media and technology site, is <a href="https://nrkbeta.no/2017/02/13/et-eksperiment-for-et-enda-bedre-kommentarfelt/" target="_blank">experimenting with a new way of keeping comments on topic</a>. A new plugin on the WordPress-powered site aims to ensure commenters have read the article by requiring them to complete a short, three-question quiz before opening the comment form. Visitors who get the questions wrong cannot contribute to the discussion.</p>\n<p><a href="https://i1.wp.com/wptavern.com/wp-content/uploads/2017/03/Quiz-1450x1001-e1488844634864.jpg?ssl=1"><img /></a></p>\n<p>The custom plugin was created to narrow the commenting field to those who are operating on a common basis of understanding of the article. It prevents commenters from skimming the article and then going on a rant.</p>\n<p>The NRKbeta team <a href="https://github.com/nrkbeta/nrkbetaquiz" target="_blank">open sourced the plugin on GitHub</a> today. It&#8217;s also in the review queue for the WordPress Plugin Directory and will be available for a one-click install after it passes review.</p>\n<p><a href="https://wordpress.org/plugins/quiz/" target="_blank">Quiz</a> is an another WordPress.org plugin that performs a similar function. Despite not having been updated for two years, the plugin is active on more than 2,000 sites. Post authors can create a question for each post in the &#8220;Comment Quiz&#8221; meta box. The plugin was also designed to help reduce spam comments.</p>\n<p>NRKbeta&#8217;s new Comment Quiz plugin takes a slightly different format, offering multiple choice in the form of radio buttons as well as the ability to add multiple questions. The comment form automatically slides into view after the visitor answers correctly.</p>\n<p><a href="https://i1.wp.com/wptavern.com/wp-content/uploads/2017/03/comment-quiz-plugin.png?ssl=1"><img /></a></p>\n<p>The idea of quizzing visitors before allowing them to comment gained quite a bit of interest after NRKbeta announced the experiment, but the publication is still experimenting to see how the quizzes affect commenting. Ensuring that readers have fully read the article comes at the expense of well-intentioned commenters who are now subjected to a time-wasting test. The plugin puts the burden of proof on the commenter in hopes of fewer rants and off-topic responses getting through.</p>\n<p>Some visitors may perceive the quiz as infantilizing potential commenters while others may see it as a mild annoyance. The quiz is a simple hurdle, easy to bypass by guessing until you land on the correct answer. It amounts to more of a speed bump than a true test of having read the article. It doesn&#8217;t take into account that many commenters who are prone to trolling and ranting off topic can be quite motivated and not significantly inconvenienced by a short quiz.</p>\n<p>If the questions are written to condition the commenter for a desired response, then it does little to promote free thinking. This seems like an expensive trade-off for fewer rants in the moderation queue. It all depends on how the publication implements the plugin. Hopefully NRKbeta will report back on how effective the Comment Quiz plugin was at deterring undesirable off-topic responses while retaining level-headed commenters.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 07 Mar 2017 05:15:50 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:10;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:79:"WPTavern: Configuring a User Avatar in WordPress Is Not as Easy as It Should Be";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66954";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:90:"https://wptavern.com/configuring-a-user-avatar-in-wordpress-is-not-as-easy-as-it-should-be";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3135:"<p>I maintain a website with active user registration and a common support question I&#8217;m asked is, &#8220;How do I change my profile picture?&#8221; The answer is not easy as it should be. WordPress&#8217; profile image system is powered by <a href="http://gravatar.com/">Gravatar</a>, an Automattic owned service. It replaced the old method of uploading a profile picture in <a href="https://wordpress.org/news/2008/03/wordpress-25-brecker/">WordPress 2.5 &#8220;Brecker&#8221;</a>.</p>\n<p>The longer I maintain the site, the <a href="https://twitter.com/jeffr0/status/837833604218617856">more frustrated I get</a> that Gravatar is the default way users create and manage their profile image. In the past, I&#8217;ve written how <a href="https://wptavern.com/managing-gravatars-in-wordpress-is-a-jarring-user-experience">managing Gravatars in WordPress</a> is a bad user experience and not much has changed. Many of the people requesting support simply want an Upload button or link that enables them to upload an image and use it as their avatar.</p>\n<p>One way to replace Gravatar is with the<a href="https://wordpress.org/plugins/wp-user-avatars/"> WP User Avatars</a> plugin developed by <a href="https://profiles.wordpress.org/johnjamesjacoby/">John James Jacoby</a>. WP User Avatars is part of the <a href="https://profiles.wordpress.org/stuttter/">Stutter collection</a> of plugins that replaces Gravatar and adds the ability for registered users to upload an image from their machine. Alternatively, users can click the Choose from Media button to choose an image from the Media Library. Existing profile images are preserved.</p>\n<img />WP User Avatar Interface\n<p>I tested the plugin on WordPress 4.7.3 and didn&#8217;t encounter any issues. It&#8217;s worth noting that according to the <a href="https://wordpress.org/plugins/wp-user-avatars/faq/">plugin&#8217;s FAQ</a>, it doesn&#8217;t work well with multisite.</p>\n<p>There has recently been some discussion on a<a href="https://core.trac.wordpress.org/ticket/16020"> six-year-old trac ticket</a> requesting upload functionality for custom avatars. Some have even suggested that <a class="ext-link" href="https://wordpress.org/plugins/simple-local-avatars/">Simple Local Avatars</a>, <a class="ext-link" href="https://wordpress.org/plugins/wp-user-avatar/">WP User Avatar</a> or <a class="ext-link" href="https://wordpress.org/plugins/add-local-avatar/">Add Local Avatar</a> could be merged into core to provide the functionality. All three plugins combined are active on nearly 300K sites.</p>\n<p>The site I administer is the first I&#8217;ve managed in my WordPress career that has open registration. Interacting with registered users who are often new to WordPress has opened my eyes to how bad of an experience configuring an avatar is. Relying on a third-party service as core functionality to manage profile images doesn&#8217;t make any sense.</p>\n<p>Let us know what your experience is like configuring an avatar in WordPress. If you use a plugin that adds local avatar support, share a link to it in the comments.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 06 Mar 2017 22:35:24 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:11;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:92:"WPTavern: BuddyPress Core Contributors Working on a Way to Safely Edit a Group’s Permalink";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66940";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:100:"https://wptavern.com/buddypress-core-contributors-working-on-a-way-to-safely-edit-a-groups-permalink";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3656:"<p>This past weekend while managing a site that runs BuddyPress, I ran into a situation where I needed to change a group&#8217;s slug or permalink. Editing the permalink for a post or page in WordPress is easy but BuddyPress doesn&#8217;t have the same functionality. As you can see in the screenshot below, an edit button to change a group&#8217;s permalink doesn&#8217;t exist.</p>\n<img />No Way to Edit a Group&#8217;s Permalink\n<p>Changing the permalink of a post in WordPress automatically creates a redirect so the previous URL doesn&#8217;t generate a 404 error. BuddyPress doesn&#8217;t offer the same convenience. According to John James Jacoby, BuddyPress lead developer, groups do not have a canonical redirection, or keep track of their slug history.</p>\n<p>In my scenario, I had two choices. I could either change the slug and break a number of links or delete the group and recreate it with the slug of my choice. Since the group already has more than 300 members and a handful of posts, I chose the first option.</p>\n<p>After a cursory search of Google on how to change a group&#8217;s slug, I came across many results that referenced the <a href="https://wordpress.org/plugins/bp-edit-group-slug/">BP Edit Group Slug</a> plugin created by Jacoby that had not been updated in seven years. As recently as two months ago, a <a href="https://buddypress.org/support/topic/changing-the-groups-slug-2/#post-262550">thread on the BuddyPress support forums</a> confirmed that the plugin was broken and generated a lot of errors.</p>\n<p>After speaking to Jacoby on Slack and linking him to the forum thread, he graciously spent two hours of his time to update the plugin. I can confirm that it works as advertised with BuddyPress 2.8.1. To change a group&#8217;s slug after activation the plugin, visit the Group&#8217;s management page on the front-end of the site.</p>\n<img />Editing a Group&#8217;s Slug\n<p>Eight years ago, <a href="https://buddypress.trac.wordpress.org/ticket/281">a ticket was created</a> on BuddyPress trac requesting the ability to change a Group&#8217;s slug. The ticket was eventually closed and labeled wontfix by <a href="https://profiles.wordpress.org/boonebgorges/">Boone Gorges</a>, BuddyPress lead developer, &#8220;Adding it as a core feature is likely to introduce lots of problems, because changed group slugs break all existing links to the content,&#8221; Gorges said. &#8220;We don&#8217;t have a graceful fallback system for changed permalinks, like WP posts do. For now, let&#8217;s leave this to a plugin. If we ever overhaul groups to have a different storage mechanism, we can revisit.&#8221;</p>\n<p>In the BuddyPress Slack channel, David Cavins offered the following idea on how the feature could work, &#8220;We could probably add a step after the lookup fails that looks in another place, like <code>group_meta</code> for key = <code>previous_slug</code> and value = <code>slug that missed a group</code>,&#8221; he said. Both Gorges and Jacoby approved the idea and encouraged Cavins to work on it for BuddyPress core.</p>\n<p>Until the feature is added to core, perhaps a note could be added to the BuddyPress group creation screen for step three that emphasizes how important it is to make sure the permalink is correct.</p>\n<img />BuddyPress Group Creation Step Three\n<p>I was willing to sacrifice broken links in order to have the correct slug for my Group but it&#8217;s a lesson I learned the hard way. I&#8217;m hopeful that others don&#8217;t make the same mistake and that BuddyPress one day has a graceful fallback system for tracking permalink changes.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 06 Mar 2017 22:16:07 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:12;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:89:"WPTavern: Initial Customizer Survey Results Reveal Majority of Respondents Don’t Use It";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66809";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:97:"https://wptavern.com/initial-customizer-survey-results-reveal-majority-of-respondents-dont-use-it";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5605:"<p>In January 2017, WordPress core design contributors posted a survey titled <a href="https://make.wordpress.org/design/2017/01/27/what-are-you-using-the-customizer-for/" target="_blank">What are you using the Customizer for?</a> The link was published on the Make WordPress Design blog and wasn&#8217;t widely shared, so it only received 50 replies. Responses were anonymous, but most seem to have come from the WordPress developer community.</p>\n<p>Despite the small sample number, the design team deemed the <a href="https://make.wordpress.org/design/2017/03/01/customizer-survey-results/" target="_blank">initial results</a> important enough to share with the community. Responses on the first question show that 53% never or rarely use the Customizer and 7.8% tend to only use it when setting up a site for the first time. Those who do use it (39.3%) range in frequency from monthly, weekly, and daily.</p>\n<p><a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2017/03/customizer-survey-results-1.png?ssl=1"><img /></a></p>\n<p>More than half of respondents (53.6%) do not add plugins to extend the Customizer. Those who do are adding plugins for theme options (12.5%), colors (5.4%), layout (7.1%), and other (21.4%). The majority of respondents indicated they use themes that add new functionality to the Customizer (53.9%) and those specified include colors, layout, typography, theme options, and design features.</p>\n<p>When asked if is there anything in the Customizer they cannot live without, 53.2% of respondents said no. This isn&#8217;t surprising given that most of them seem to be developers who are likely familiar with adding custom CSS or making edits to a child theme. Only 6.4% said they could not live without live previews. When asked if there was anything in the Customizer they never use, 31.3% of respondents said &#8220;Everything,&#8221; 20.8% said &#8220;No,&#8221; and the others identified specific features.</p>\n<p><a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2017/03/customizer-survey-results-2.png?ssl=1"><img /></a></p>\n<p>The negative comments on the questions are a general indicator of the lingering dissatisfaction with the Customizer. For those who use the feature regularly, one strong theme in their comments is that the separation between what settings are available in the Customizer versus the backend is confusing:</p>\n<blockquote><p>Setting up theme styling, redesigning, setting up sites, etc. Very useful for quick changes like a new header image to change up the look. Wish you could edit everything there instead of going elsewhere to edit content too.</p></blockquote>\n<blockquote><p>I don’t like it and wish that I didn’t have to use it. Most often if there is a setting I had to use the customizer for, I will either forget that something was set in the customizer and end up hunting around for it for a long time before remembering that’s where it was. More often than not the “preview” functionality doesn’t work and you have to save the settings anyway. Also there doesn’t seem to be any consistent logic as to what features should be in the customizer, and theme authors just put whatever they feel like putting in there.</p></blockquote>\n<blockquote><p>What would be great, it is to incorporate more settings in the Customizer in order to avoid the back and forth to set up the site (date format, title, tagline, posts per page, …).</p></blockquote>\n<p>Many users don&#8217;t understand the separation between content and presentation and don&#8217;t approach the Customizer with this mindset. Therefore, the Customizer&#8217;s omissions create a disjointed experience for users who are new to WordPress.</p>\n<blockquote><p>Absolutely! Most of my clients complain about the footer and why is it so difficult to modify something so basic as this sentence: “Proudly powered by WordPress”… It is really nonsense having so many options in customizer and still having to create a child theme only to be able to edit the standard footer sentence… That doesn’t make any sense, really!”</p></blockquote>\n<p>These kinds of frustrations are likely to continue until the Customizer can unify the content and theme editing experience. Currently, the bulk of content editing happens in the admin, but Customizer contributors are working towards adding <a href="https://wptavern.com/customize-posts-plugin-and-selective-refresh-are-paving-the-way-for-front-end-editing-powered-by-the-customizer" target="_blank">frontend editing powered by the Customizer</a>.</p>\n<p>It is difficult to know how to place this data, since the survey didn&#8217;t ask for any information about the respondents&#8217; WordPress background. However, the large number of negative responses underscore the importance of having the Customizer as one of the three focuses for WordPress core development in 2017.</p>\n<p>Customizer component co-maintainer Weston Ruter said he&#8217;s &#8220;not really surprised&#8221; by the negative feedback in the survey, as there are lots of passionate opinions about the Customizer.</p>\n<p>&#8220;Everyone should agree that the Customizer isn&#8217;t a finished product, but the answer to that is to make it a focus and make it the live preview interface that WP needs, not rip it out,&#8221; Ruter said. &#8220;And that focus is what 2017 includes.&#8221;</p>\n<p>The <a href="http://13233232.polldaddy.com/s/what-are-you-using-customizer-for" target="_blank">survey is still open</a>, if you want to contribute more data for the design team to consider.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 06 Mar 2017 19:06:58 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:13;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:58:"Dev Blog: WordPress 4.7.3 Security and Maintenance Release";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"https://wordpress.org/news/?p=4696";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:84:"https://wordpress.org/news/2017/03/wordpress-4-7-3-security-and-maintenance-release/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:6090:"<p>WordPress 4.7.3 is now available. This is a <strong>security release</strong> for all previous versions and we strongly encourage you to update your sites immediately.</p>\n<p>WordPress versions 4.7.2 and earlier are affected by six security issues:</p>\n<ol>\n<li>Cross-site scripting (XSS) via media file metadata.  Reported by <a href="https://www.securesolutions.no/">Chris Andrè Dale</a>, <a href="https://twitter.com/yorickkoster">Yorick Koster</a>, and Simon P. Briggs.</li>\n<li>Control characters can trick redirect URL validation.  Reported by <a href="http://www.danielchatfield.com/">Daniel Chatfield</a>.</li>\n<li>Unintended files can be deleted by administrators using the plugin deletion functionality.  Reported by <a href="http://b.360.cn/">xuliang</a>.</li>\n<li>Cross-site scripting (XSS) via video URL in YouTube embeds.  Reported by <a href="https://twitter.com/marcs0h">Marc Montpas</a>.</li>\n<li>Cross-site scripting (XSS) via taxonomy term names.  Reported by <a href="https://profiles.wordpress.org/deltamgm2">Delta</a>.</li>\n<li>Cross-site request forgery (CSRF) in Press This leading to excessive use of server resources.  Reported by Sipke Mellema.</li>\n</ol>\n<p>Thank you to the reporters for practicing <a href="https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/">responsible disclosure</a>.</p>\n<p>In addition to the security issues above, WordPress 4.7.3 contains 39 maintenance fixes to the 4.7 release series. For more information, see the <a href="https://codex.wordpress.org/Version_4.7.3">release notes</a> or consult the <a href="https://core.trac.wordpress.org/query?status=closed&milestone=4.7.3&group=component&col=id&col=summary&col=component&col=status&col=owner&col=type&col=priority&col=keywords&order=priority">list of changes</a>.</p>\n<p><a href="https://wordpress.org/download/">Download WordPress 4.7.3</a> or venture over to Dashboard → Updates and simply click “Update Now.” Sites that support automatic background updates are already beginning to update to WordPress 4.7.3.</p>\n<p>Thanks to everyone who contributed to 4.7.3: <a href="https://profiles.wordpress.org/aaroncampbell/">Aaron D. Campbell</a>, <a href="https://profiles.wordpress.org/adamsilverstein/">Adam Silverstein</a>, <a href="https://profiles.wordpress.org/xknown/">Alex Concha</a>, <a href="https://profiles.wordpress.org/afercia/">Andrea Fercia</a>, <a href="https://profiles.wordpress.org/azaozz/">Andrew Ozz</a>, <a href="https://profiles.wordpress.org/asalce/">asalce</a>, <a href="https://profiles.wordpress.org/blobfolio/">blobfolio</a>, <a href="https://profiles.wordpress.org/gitlost/">bonger</a>, <a href="https://profiles.wordpress.org/boonebgorges/">Boone Gorges</a>, <a href="https://profiles.wordpress.org/bor0/">Boro Sitnikovski</a>, <a href="https://profiles.wordpress.org/bradyvercher/">Brady Vercher</a>, <a href="https://profiles.wordpress.org/drrobotnik/">Brandon Lavigne</a>, <a href="https://profiles.wordpress.org/bhargavbhandari90/">Bunty</a>, <a href="https://profiles.wordpress.org/ccprog/">ccprog</a>, <a href="https://profiles.wordpress.org/ketuchetan/">chetansatasiya</a>, <a href="https://profiles.wordpress.org/davidakennedy/">David A. Kennedy</a>, <a href="https://profiles.wordpress.org/dlh/">David Herrera</a>, <a href="https://profiles.wordpress.org/dhanendran/">Dhanendran</a>, <a href="https://profiles.wordpress.org/dd32/">Dion Hulse</a>, <a href="https://profiles.wordpress.org/ocean90/">Dominik Schilling (ocean90)</a>, <a href="https://profiles.wordpress.org/drivingralle/">Drivingralle</a>, <a href="https://profiles.wordpress.org/iseulde/">Ella Van Dorpe</a>, <a href="https://profiles.wordpress.org/pento/">Gary Pendergast</a>, <a href="https://profiles.wordpress.org/iandunn/">Ian Dunn</a>, <a href="https://profiles.wordpress.org/ipstenu/">Ipstenu (Mika Epstein)</a>, <a href="https://profiles.wordpress.org/jnylen0/">James Nylen</a>, <a href="https://profiles.wordpress.org/jazbek/">jazbek</a>, <a href="https://profiles.wordpress.org/jeremyfelt/">Jeremy Felt</a>, <a href="https://profiles.wordpress.org/jpry/">Jeremy Pry</a>, <a href="https://profiles.wordpress.org/joehoyle/">Joe Hoyle</a>, <a href="https://profiles.wordpress.org/joemcgill/">Joe McGill</a>, <a href="https://profiles.wordpress.org/johnbillion/">John Blackbourn</a>, <a href="https://profiles.wordpress.org/johnjamesjacoby/">John James Jacoby</a>, <a href="https://profiles.wordpress.org/desrosj/">Jonathan Desrosiers</a>, <a href="https://profiles.wordpress.org/ryelle/">Kelly Dwan</a>, <a href="https://profiles.wordpress.org/markoheijnen/">Marko Heijnen</a>, <a href="https://profiles.wordpress.org/matheusgimenez/">MatheusGimenez</a>, <a href="https://profiles.wordpress.org/mnelson4/">Mike Nelson</a>, <a href="https://profiles.wordpress.org/mikeschroder/">Mike Schroder</a>, <a href="https://profiles.wordpress.org/codegeass/">Muhammet Arslan</a>, <a href="https://profiles.wordpress.org/celloexpressions/">Nick Halsey</a>, <a href="https://profiles.wordpress.org/swissspidy/">Pascal Birchler</a>, <a href="https://profiles.wordpress.org/pbearne/">Paul Bearne</a>, <a href="https://profiles.wordpress.org/pavelevap/">pavelevap</a>, <a href="https://profiles.wordpress.org/peterwilsoncc/">Peter Wilson</a>, <a href="https://profiles.wordpress.org/rachelbaker/">Rachel Baker</a>, <a href="https://profiles.wordpress.org/reldev/">reldev</a>, <a href="https://profiles.wordpress.org/sanchothefat/">Robert O&#8217;Rourke</a>, <a href="https://profiles.wordpress.org/welcher/">Ryan Welcher</a>, <a href="https://profiles.wordpress.org/sanketparmar/">Sanket Parmar</a>, <a href="https://profiles.wordpress.org/seanchayes/">Sean Hayes</a>, <a href="https://profiles.wordpress.org/sergeybiryukov/">Sergey Biryukov</a>, <a href="https://profiles.wordpress.org/netweb/">Stephen Edgar</a>, <a href="https://profiles.wordpress.org/triplejumper12/">triplejumper12</a>, <a href="https://profiles.wordpress.org/westonruter/">Weston Ruter</a>, and <a href="https://profiles.wordpress.org/wpfo/">wpfo</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 06 Mar 2017 17:53:30 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:11:"James Nylen";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:14;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:66:"Post Status: Making a living without client work, with Carrie Dils";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"https://poststatus.com/?p=34997";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:69:"https://poststatus.com/making-living-without-client-work-carrie-dils/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3358:"<p>Welcome to the Post Status <a href="https://poststatus.com/category/draft">Draft podcast</a>, which you can find <a href="https://itunes.apple.com/us/podcast/post-status-draft-wordpress/id976403008">on iTunes</a>, <a href="https://play.google.com/music/m/Ih5egfxskgcec4qadr3f4zfpzzm?t=Post_Status__Draft_WordPress_Podcast">Google Play</a>, <a href="http://www.stitcher.com/podcast/krogsgard/post-status-draft-wordpress-podcast">Stitcher</a>, and <a href="http://simplecast.fm/podcasts/1061/rss">via RSS</a> for your favorite podcatcher. Post Status Draft is hosted by Brian Krogsgard and this episode&#8217;s special guest, Carrie Dils.</p>\n<p><span>Carrie Dils has been self-employed for a long time. After years of client work, she now makes her full-time living through multiple different channels, but is not currently doing client services. In this episode, Brian and Carrie talk about various methods for generating revenue, and some helpful tools to do so.</span></p>\n<!--[if lt IE 9]><script>document.createElement(''audio'');</script><![endif]-->\n<a href="https://audio.simplecast.com/61980.mp3">https://audio.simplecast.com/61980.mp3</a>\n<p><a href="https://audio.simplecast.com/61980.mp3">Direct Download</a></p>\n<h3>Links</h3>\n<ul>\n<li><a href="http://waitbutwhy.com/2013/10/why-procrastinators-procrastinate.html">Why Procrastinators Procrastinate</a></li>\n<li><a href="https://convertkit.com">ConvertKit</a></li>\n<li><a href="https://mailchimp.com">Mailchimp</a></li>\n<li><a href="https://chimpessentials.com/">Chimp Essentials Mailchimp course</a></li>\n<li><a href="https://officehours.fm/podcast/136-2/">Paul Jarvis on Carrie&#8217;s podcast</a></li>\n<li><a href="https://pjrvs.com/signup/">Sunday Dispatches</a></li>\n<li><a href="http://www.nerdmarketing.com/">Nerd Marketing</a></li>\n<li><a href="https://amylynnandrews.com/">Amy Lynn Andrews</a></li>\n<li><a href="https://en.todoist.com/">Todoist</a></li>\n<li><a href="https://simplenote.com/">Simplenote</a></li>\n<li><a href="http://gettingthingsdone.com/">Getting Things Done</a></li>\n<li><a href="https://1password.com/">1Password</a></li>\n<li><a href="https://poststatus.com/art-self-employed-web-consultant-draft-podcast/">Interview with Diane Kinney</a></li>\n</ul>\n<h3>Links to Carrie&#8217;s Work</h3>\n<ul>\n<li><span><a href="https://carriedils.com/business-lessons/">Experience as an Uber driver</a> </span></li>\n<li><span><a href="https://officehours.fm">Office Hours</a> </span></li>\n<li><span><a href="https://carriedils.com/blog/">Carrie’s blog</a> </span></li>\n<li><a href="https://carriedils.com/courses/"><span>WordPress courses </span></a></li>\n<li><span><a href="https://store.carriedils.com/downloads/utility-pro/">Utility Pro theme</a> </span></li>\n<li><span><a href="http://realworldfreelancing.com/">Real World Freelancing book</a> </span></li>\n</ul>\n<h3>Sponsor: Prospress</h3>\n<p><span><a href="https://prospress.com/">Prospress</a>  makes the WooCommerce Subscriptions plugin, that enables you to turn your online business into a recurring revenue business. Whether you want to ship a box or setup digital subscriptions like I have on Post Status, Prospress has you covered. Check out <a href="https://prospress.com/">Prospress.com</a> for more, and thanks to Prospress for being a Post Status partner.</span></p>\n<p><em>Photo by Karyn Kelbaugh</em></p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 06 Mar 2017 15:44:48 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Katie Richards";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:15;a:6:{s:4:"data";s:11:"\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:27:"HeroPress: HeroPress at 100";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://heropress.com/?p=1639";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:39:"https://heropress.com/heropress-at-100/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5332:"<img width="960" height="547" src="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/03/heropress_media-1024x583.png" class="attachment-large size-large wp-post-image" alt="HeroPress Media Thumbnails" /><p>March 8th we&#8217;ll have 100 HeroPress essays published. This seems like an auspicious time to look back at what we&#8217;ve built.</p>\n<p>Since the first one I&#8217;ve only missed maybe 2 weeks. One essay has been taken down for security reasons. Only once has anyone really stood me up, and only four times or so has anyone asked for more time at the last second. In those times someone always stepped up.</p>\n<p>A goal of mine has always been diversity, across a number of vectors. I did pretty poorly in the first few months and ended up with diversity debt. Here are some stats as of the 100th post:</p>\n<table border="1">\n<tbody>\n<tr>\n<th>Men</th>\n<th>Women</th>\n<th>Americans</th>\n<th>Non-Americans</th>\n</tr>\n<tr>\n<td>55</td>\n<td>44</td>\n<td>34</td>\n<td>66</td>\n</tr>\n</tbody>\n</table>\n<p>That said, if you look at the last 50, the numbers look much more diverse:</p>\n<table border="1">\n<tbody>\n<tr>\n<th>Men</th>\n<th>Women</th>\n<th>Americans</th>\n<th>Non-Americans</th>\n</tr>\n<tr>\n<td>22</td>\n<td>26</td>\n<td>16</td>\n<td>34</td>\n</tr>\n</tbody>\n</table>\n<p>I have the next 8 contributors planned out, and they continue to enhance the diversity of HeroPress.</p>\n<h3>Sponsorship</h3>\n<p>Last June XWP started sponsoring HeroPress. As I&#8217;ve mentioned many times before, I&#8217;m wary of mixing money with HeroPress, because I never want to make money from the stories of these people I admire and respect so much. That said, the sponsorship makes it easier for me to spend the time away from my family working on HeroPress. Some wise people have told me that using money appropriately won&#8217;t lose me any real friends, so there we are.</p>\n<p>If you&#8217;re interested in talking to me about sponsorship, just send me an email, topher at this domain.</p>\n<h3>The Future</h3>\n<p>I don&#8217;t have any plans for changing the way essays work. I have people lined up through the end of April. I&#8217;ve recently found some new ways to find WordPressers in places I couldn&#8217;t access before, and I&#8217;m excited about the new places we&#8217;re going to hear about.</p>\n<p>I&#8217;ve been talking for months about doing a podcast. It would simply be me and someone far away from me talking about how they work and live. I hesitate to talk to Americans, because I already know how they live and work, but on the other hand, people outside America might be interested. We&#8217;ll see what happens after some research.</p>\n<p>I have some ideas about scholarships and software accessibility programs, but I&#8217;m still putting those together. I&#8217;ve recently been contacted by another organization that wants to work together on a scholarship, and that sounds exciting.  Again, we&#8217;ll see what happens.</p>\n<h3>Thanks</h3>\n<p>I&#8217;d like to thanks everyone that&#8217;s been involved in making HeroPress great.  At this point there are too many to name. Those of you that have tweeted, blogged, podcasted, and generally spread the word are amazing. Thanks to those that have written essays especially.  Without contributors HeroPress wouldn&#8217;t exist at all.</p>\n<p>Thanks to those that have facilitated getting me to WordCamps like Pune, Europe, and US.</p>\n<p>Lastly, thanks to those that have committed to the future of HeroPress. I&#8217;m looking forward to all the things to come.</p>\n<div class="rtsocial-container rtsocial-container-align-right rtsocial-horizontal"><div class="rtsocial-twitter-horizontal"><div class="rtsocial-twitter-horizontal-button"><a title="Tweet: HeroPress at 100" class="rtsocial-twitter-button" href="https://twitter.com/share?text=HeroPress%20at%20100&via=heropress&url=https%3A%2F%2Fheropress.com%2Fheropress-at-100%2F" rel="nofollow" target="_blank"></a></div></div><div class="rtsocial-fb-horizontal fb-light"><div class="rtsocial-fb-horizontal-button"><a title="Like: HeroPress at 100" class="rtsocial-fb-button rtsocial-fb-like-light" href="https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fheropress-at-100%2F" rel="nofollow" target="_blank"></a></div></div><div class="rtsocial-linkedin-horizontal"><div class="rtsocial-linkedin-horizontal-button"><a class="rtsocial-linkedin-button" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fheropress-at-100%2F&title=HeroPress+at+100" rel="nofollow" target="_blank" title="Share: HeroPress at 100"></a></div></div><div class="rtsocial-pinterest-horizontal"><div class="rtsocial-pinterest-horizontal-button"><a class="rtsocial-pinterest-button" href="https://pinterest.com/pin/create/button/?url=https://heropress.com/heropress-at-100/&media=https://heropress.com/wp-content/uploads/2017/03/heropress_media-150x150.png&description=HeroPress at 100" rel="nofollow" target="_blank" title="Pin: HeroPress at 100"></a></div></div><a rel="nofollow" class="perma-link" href="https://heropress.com/heropress-at-100/" title="HeroPress at 100"></a></div><p>The post <a rel="nofollow" href="https://heropress.com/heropress-at-100/">HeroPress at 100</a> appeared first on <a rel="nofollow" href="https://heropress.com">HeroPress</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 05 Mar 2017 16:15:09 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:16;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:108:"WPTavern: Web Annotations are Now a W3C Standard, Paving the Way for Decentralized Annotation Infrastructure";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66802";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:118:"https://wptavern.com/web-annotations-are-now-a-w3c-standard-paving-the-way-for-decentralized-annotation-infrastructure";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:13734:"<a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2016/02/writing.jpg?ssl=1"><img /></a>photo credit: <a href="https://stocksnap.io/photo/8Y0EDX4VP9">Green Chameleon</a>\n<p><a href="https://www.w3.org/blog/news/archives/6156" target="_blank">Web annotations</a> became a W3C standard last week but the world hardly noticed. For years, most conversations on the web have happened in the form of comments. Annotations are different in that they usually reference specific parts of a document and add context. They are often critical or explanatory in nature.</p>\n<p>One of the key differences between comments and web annotations, according to the new standard, is that annotations were designed to be decentralized, creating &#8220;a new layer of interactivity and linking on top of the Web.&#8221; Comments are published by the publisher at the same location as the original content, but web annotation content is owned by the reader. Annotations don&#8217;t have to be published on the original content. The reader has the choice to publish using an &#8220;annotation service&#8221; or their own website.</p>\n<p>Doug Schepers, former Developer Relations Lead at W3C, described the difference between annotating and commenting on an <a href="http://thewebahead.net/60" target="_blank">episode on The Web Ahead podcast</a>:</p>\n<blockquote><p>When a comment is at the bottom of a page, it&#8217;s so abstracted out from the rest. They get off track, they start talking about other things that have nothing to do with the original article. If it&#8217;s an even vaguely political topic, you&#8217;ve got the partisans jumping in, yelling at one another, how they&#8217;re all idiots. You lose track with the content of the article. There&#8217;s this viscerality, this immediacy, of actually commenting on something in its context.</p></blockquote>\n<p>Do people want to annotate the web? Popular implementations of this concept, such as <a href="https://genius.com/web-annotator" target="_blank">Genius Web Annotator</a> and Medium&#8217;s annotation-style commenting, show that people enjoy interacting on the web in this way. The W3C Web Annotation Working Group&#8217;s goal in standardizing the technology behind web annotations was to produce a set of specifications for &#8220;interoperable, sharable, distributed Web Annotation architecture,&#8221; enabling healthy competition between services and discouraging publisher lock-in.</p>\n<p>Decentralization is critical to unlocking the full potential of annotations on the web. If commenters have control of their own content, they have the freedom to publish it wherever they like. Open comments sections can sometimes offer the illusion of discourse, but are ultimately under the control of the publisher. This is obvious if you&#8217;ve ever seen a controversial blog post, which should undoubtedly have comments with varying viewpoints, but the only comments published are those in agreement with the author.</p>\n<p>&#8220;This notion that whoever controls the original source also controls the dialog &#8211; that&#8217;s dangerous,&#8221; Schepers said. &#8220;This is why I like the idea of annotations. It&#8217;s inherent in the idea of annotations, this indie web aspect of, &#8216;I want to control what I say, what channels it goes out to.&#8217; I can&#8217;t control who puts it into a different channel but I can control what channels I try to put it out into. I can actively publish in multiple channels.&#8221;</p>\n<h3>Hypothesis Plugin Brings Web Annotations to WordPress</h3>\n<p><a href="https://hypothes.is" target="_blank">Hypothesis</a> is a non-profit organization that is building an open platform for annotation on the web, based on the <a href="http://annotatorjs.org/" target="_blank">Annotator.js</a> library. It allows readers to highlight text and select whether they want to annotate it or highlight it.</p>\n<p><a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2017/03/hypothesis-annotations.png?ssl=1"><img /></a></p>\n<p>The Hypothes.is community has an ecosystem of <a href="https://hypothes.is/tools-plug-ins-and-integrations/" target="_blank">tools and integrations</a> for various technologies and publishing platforms, including WordPress. The <a href="https://wordpress.org/plugins/hypothesis/" target="_blank">Hypothesis plugin on WordPress.org</a> offers the same functionality that you see on the Hypothesis website with the ability to select text and have a sidebar slide out for taking notes. Annotation requires an account with Hypothesis. You can test it by pasting any link into the tool on the <a href="https://hypothes.is/" target="_blank">Hypothesis</a> homepage.</p>\n<p><a href="https://i1.wp.com/wptavern.com/wp-content/uploads/2017/03/annotating.png?ssl=1"><img /></a></p>\n<p>The mission of the Hypothesis project is &#8220;to bring a new layer to the web&#8221; that enables conversations on top of the world&#8217;s collected knowledge. The project also allows you to publish annotations privately, creating your own personal notebook of observations as you surf the web.</p>\n<p>The Hypothesis plugin allows users to customize the defaults and behavior and control where it&#8217;s loaded (front page, blog page, posts, pages, etc.) Highlights can be on or off by default and the sidebar can be collapsed or open. Annotations can also be enabled on PDFs in the Media Library. Hypotheses can be allowed/disallowed on a list of specific posts or pages, which is helpful for sites where the author may only want annotation on scholarly material.</p>\n<p><a href="https://github.com/kshaffer/hypothesis_aggregator" target="_blank">Hypothesis Aggregator</a> is another plugin for WordPress that offers a shortcode with different parameters for displaying annotations from the service. It allows site owners to display a collection of annotations from a certain user or topic.</p>\n<p><code>[hypothesis user = ''kris.shaffer'']</p>\n<p>[hypothesis tags = ''IndieWeb'']</p>\n<p>[hypothesis text = "Domain of One''s Own"]</p>\n<p>[hypothesis user = ''kris.shaffer'' tags = ''IndieEdTech'']</code></p>\n<p>The output includes a link to the original content, the highlighted text, the annotation, and the person who curated it.</p>\n<p><a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2017/03/hypothesis-aggregator.png?ssl=1"><img /></a></p>\n<p>Kris Shaffer, the plugin&#8217;s author, is considering adding support for multiple tags (in both AND and OR configurations) as well as the ability to embed a single annotation in a post, like users can with a tweet.</p>\n<p>The Hypothesis network of annotators is growing, along with the vast collection of knowledge that is getting linked and added every day. The service just completed a record month with nearly 6,000 annotators contributing content.</p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr">A record month <a href="https://twitter.com/hypothes_is">@hypothes_is</a> in February: almost 6K active annotators made 112,385 <a href="https://twitter.com/hashtag/annotations?src=hash">#annotations</a>. Did you help? <a href="https://t.co/R2DZaf6D7i">https://t.co/R2DZaf6D7i</a> <a href="https://t.co/HWNVUXUS9s">pic.twitter.com/HWNVUXUS9s</a></p>\n<p>&mdash; Hypothes.is (@hypothes_is) <a href="https://twitter.com/hypothes_is/status/836993180486684672">March 1, 2017</a></p></blockquote>\n<p></p>\n<p>Members of the Hypothesis team are principal contributors to the Annotator project and the organization was also deeply involved in the effort to make web annotations a W3C standard. The Hypothesis community tools are quite frequently used in the context of scholarly or academic dialogue, but the app aims to bring annotation to all types of websites, including news, blogs, scientific articles, books, terms of service, ballot initiatives, legislation, and more.</p>\n<p>In a <a href="https://www.youtube.com/watch?v=2jTctBbX_kw" target="_blank">presentation</a> at the Personal Democracy Forum in 2013, Dan Whaley, founder and CEO of Hypothesis, described the organization&#8217;s motivation behind annotating all of the web&#8217;s collective knowledge:</p>\n<blockquote><p>Think back 1,000 years, reflect on the key documents produced over that time, like the Magna Carta in 1215 or the Declaration of Independence, for which we only have the document itself. What we&#8217;re missing are the notes passed between co-authors in the drafting, the reviews by others providing feedback on early versions. We lack the perception by the public immediately after and most of the fine-grained citations, quotations, and reuse in the intervening years. Those incessant arguments about why the founding fathers chose this or that particular phrasing &#8211; what if we had a much better idea, the direct record of their internal deliberations? There&#8217;s no shortage of things to annotate, and there&#8217;s more knowledge being created per minute now than ever before &#8211; laws, scientific articles, news, books, tweets, data &#8230;but our tools are crude, balkanized, ill-preserved, and even then only available on a small minority of what&#8217;s important.</p></blockquote>\n<p>The idea of web annotations is to capture the surrounding conversation that doesn&#8217;t necessarily fit into traditional comments, preserving it in a way that is open, sharable, and cooperates nicely with other technologies using the web&#8217;s standard.</p>\n<h3>What Does the W3C Standard Mean for the Future of Annotations?</h3>\n<p>Web annotation seems to promote more critical thinking and collaboration but it&#8217;s doubtful that it would ever fully replace commenting systems. The two serve different purposes and it&#8217;s more likely that annotations will serve to supplement conversations on the web. Not everyone is fond of the current implementations of annotation UI, which require visitors to keep clicking on things as they are reading.</p>\n<p>Despite being first being introduced to the web in the Mosaic browser prototype in 1993, annotation tools are still in their infancy. In a <a href="https://genius.com/Marc-andreessen-why-andreessen-horowitz-is-investing-in-rap-genius-annotated" target="_blank">post</a> announcing Andreessen Horowitz&#8217;s $15 million investment in Rap Genius, Marc Andreesen describes how the technology was almost built into the first web browser:</p>\n<p>&#8220;Only a handful of people know that the big missing feature from the web browser – the feature that was supposed to be in from the start but didn&#8217;t make it – is the ability to annotate any page on the Internet with commentary and additional information.&#8221;</p>\n<p>The implementation was pulled not too long after, because they didn&#8217;t have the capabilities required to host all the annotations and have it scale. For the past 24 years, various companies and organizations have taken a stab at bringing this feature back to the web &#8211; all with varying approaches that don&#8217;t necessarily play well together. That&#8217;s why the W3C standard is an important development.</p>\n<p>&#8220;While Hypothesis and others are already enabling annotation to take place over any page on the Web, a standard means that there is additional incentive for browser vendors to include this functionality natively,&#8221; Dan Whaley <a href="https://hypothes.is/blog/annotation-is-now-a-web-standard/" target="_blank">said</a>. &#8220;The more that these new collaborative layers are present without any additional action on the part of the user, the more their use will grow.&#8221;</p>\n<p>Whaley also said the new W3C standard should send a strong signal to those who have developed proprietary annotation implementations, such as Genius, Readcube, Medium, and Amazon (Kindle).</p>\n<p>&#8220;These technical recommendations have the weight of the web community behind them and can be relied upon,&#8221; Whaley said. &#8220;Our hope is that the standard will not only encourage others to adopt its technical approach, but also ultimately to open their platforms.&#8221;</p>\n<p>In an ideal world, Doug Schepers sees annotation as a feature that is &#8220;baked straight into the web,&#8221; where all users can choose where their content is published. Annotation services would then offer the ability for users to choose which syndicators and aggregators the content is going out to. Publishers in turn would have the ability to consume annotation content and bring it back through their commenting system if they feel it adds value.</p>\n<p>&#8220;We can refine things over time,&#8221; Schepers said. &#8220;We can improve our culture over time. It sounds kind of lofty and maybe sort of abstract, but I think that&#8217;s what annotations can help us do. It can actually increase the growth of ideas and not the suppression of ideas. It can improve how we create our culture in a more conscious way, in a way that includes more critical thinking.&#8221;</p>\n<p>Schepers said it&#8217;s too soon to know how the future will unfold for web annotations and whether or not browsers will be interested in supporting them natively. Annotations may be relegated to live in script libraries forever if they don&#8217;t catch on with browsers. Like any new layer of interaction on the web, it&#8217;s worth building to see how the initial idea evolves based on where the users take it.</p>\n<p>&#8220;I don&#8217;t know what&#8217;s going to happen with annotations,&#8221; Schepers said. &#8220;That&#8217;s what I&#8217;m excited by. I can think of all sorts of things that might happen with annotations if we truly enable this, but I&#8217;m more looking forward to the things that I didn&#8217;t see coming at all.&#8221;</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 03 Mar 2017 23:02:35 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:17;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:63:"WPTavern: WPCampus 2017 to Take Place July 14-15 in Buffalo, NY";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66607";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:73:"https://wptavern.com/wpcampus-2017-to-take-place-july-14-15-in-buffalo-ny";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:6398:"<img />WPCampus Date\n<p><span class="st">After the inaugural </span> WPCampus concluded <a href="https://2016.wpcampus.org/">in 2016</a>, organizers <a href="https://wptavern.com/wpcampus-is-accepting-applications-to-host-the-event-in-2017">put out a call</a> for campuses across the country to host the event in 2017. The WPCampus planning committee has <a href="https://2017.wpcampus.org/2017/02/23/announcing-second-annual-wpcampus-conference/">announced</a> that <a href="https://2017.wpcampus.org/">WPCampus 2017</a> will be held July 14-15, at <a href="https://2017.wpcampus.org/venue/">Canisius College</a> in Buffalo, New York.</p>\n<p>In addition to announcing the date, the committee is accepting <a href="https://2017.wpcampus.org/call-for-speakers/">speaker submissions</a> and <a href="https://2017.wpcampus.org/sponsors/">looking for sponsors</a>. Speaker submissions will be accepted until March 24th, 2017.</p>\n<p>Rachel Carden, a Senior Software Engineer for Disney Interactive, came up with the idea for WPCampus in a Tweet published in August, 2015. Since then, the community has grown to more than 500 members.</p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr">Ooh. Dream with me: "<a href="https://twitter.com/hashtag/WordCampus?src=hash">#WordCampus</a>: A WordCamp for folks using <a href="https://twitter.com/hashtag/WordPress?src=hash">#WordPress</a> in Higher Education." I like it. <a href="https://twitter.com/hashtag/heweb?src=hash">#heweb</a> <a href="https://t.co/m1zEkpkP4B">https://t.co/m1zEkpkP4B</a></p>\n<p>&mdash; Rachel Carden (@bamadesigner) <a href="https://twitter.com/bamadesigner/status/628324358126235648">August 3, 2015</a></p></blockquote>\n<p></p>\n<h2>Interview With Rachel Carden</h2>\n<p><strong>What did you learn from organizing the first WPCampus that will improve the second event?</strong></p>\n<p>Most of the lessons learned from WPCampus 2016 involved logistics. A brand new community planning a brand new event with very minimal people &#8216;on the ground&#8217; was challenging but, clearly, not impossible.</p>\n<p>Most of the changes we’ve implemented have been on how to make the time we spend planning more efficient, especially since we are an entirely volunteer-driven organization spread out all over the world.</p>\n<p>Overall, our first event was a success but there’s always little notes you take away for the next go round, like &#8216;make sure we take the group photo BEFORE everyone leaves&#8217; and highlighted at the top of the list: &#8216;make sure we have candy again.&#8217;</p>\n<p>Ultimately, our main priority is to ensure attendees aren’t worrying about the &#8216;where&#8217;, &#8216;what&#8217;, and &#8216;how&#8217; so they can instead focus on learning, networking, and making the most out of our short time together. This means taking notice of how we can improve communication, signage, etc.</p>\n<p>&#8216;The secret of all victory lies in the organization of the non-obvious&#8217; could not be more true. The biggest question we asked ourselves after WPCampus 2016 was &#8216;how can we create more opportunities for diverse interaction and discussion?&#8217;</p>\n<p>Our planning team has some great ideas and we’re excited to experiment a little, to see how a conference might be able to drive development outside the usual sessions and lightning talks. We’re really excited for what’s in store for our next event.</p>\n<p><strong>Will there be another WordPress in higher education survey?</strong></p>\n<p>I hope so! If not, it won’t be for lack of desire. Last <a href="https://wptavern.com/wpcampus-survey-results-indicate-misconceptions-of-wordpress-are-slowing-its-growth-in-higher-education">year’s survey</a> offered an incredible amount of insight and data into how WordPress is being used in higher education. It would be great to see what has changed. Stay tuned!</p>\n<p><strong>Why was Canisius College chosen for the event?</strong></p>\n<p>We had some amazing universities apply and invite us all to their campus. An honor for which we are most grateful and appreciative. As was the case with WPCampus 2016, it was really hard to pick just one but ultimately, it comes down to what we believe is best overall for our attendees.</p>\n<p>We even have a grading matrix because, of course we do, we’re in higher education. Canisius College is a beautiful campus in a great location, especially since a majority of the WPCampus community is located in the eastern U.S. and Canada.</p>\n<p>The team at Canisius has also been extremely supportive and is working hard to make sure we have a great time in their top-notch facilities. Buffalo is also a great city with amazing architecture, food, and scenery that we’re excited to explore.</p>\n<h2>WPCampus Is Aiming for Sessions With a Variety of Perspectives</h2>\n<p>For a glimpse into what WPCampus <a href="https://2017.wpcampus.org/about/">is all about</a>, check out these recaps from those who attended the event in 2016. You can also watch most of the sessions from the event via the <a href="https://2016.wpcampus.org/schedule/">schedule page</a>.</p>\n<ul>\n<li><a href="https://calderawp.com/2016/07/wpcampus-2016-recap/">WPCampus 2016 Recap</a></li>\n<li><a href="https://www.thewpcrowd.com/wordpress/wordcamps/wpcampus-2016/">WPCampus 2016: WordPress in Higher Education</a></li>\n<li><a href="https://wpdistrict.sitelock.com/blog/wp-campus-a-wordpress-event-focused-on-higher-education/">WPCampus – A WordPress Event Focused on Higher Education</a></li>\n<li><a href="http://davidbisset.com/wpcampus-review/">WPCampus Review</a></li>\n</ul>\n<p>Registration is not yet available but will open soon.</p>\n<p>&#8220;We aim for our session topics to be a good mix of WordPress in higher ed as well as solely higher ed and solely WordPress,&#8221; Carden said.</p>\n<p>&#8220;We recognize the value and inspiration in all perspectives. We hope the general WordPress community, and other higher ed communities, will see the value in investing in WPCampus and its mission to advance higher education by lending their time, knowledge and experience.&#8221;</p>\n<p>To receive updates related to the event, you can follow <a href="https://twitter.com/wpcampusorg">WPCampus</a> on Twitter or keep an eye on the <a href="https://2017.wpcampus.org/announcements/">announcements page</a>.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 03 Mar 2017 17:24:55 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:18;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:28:"Matt: Henry Crown Fellowship";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:22:"https://ma.tt/?p=47132";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:45:"https://ma.tt/2017/03/henry-crown-fellowship/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:645:"<p>I&#8217;m very excited to have been selected to join the <a href="http://agln.aspeninstitute.org/fellowships/henrycrown/classes/XXI">Henry Crown Fellowship Class of 2017</a>. Many, many folks I admire including Reed Hastings, Kim Polese, Cory Booker, Aileen Lee, Stephen DeBerry, Deven Parekh, Chris Sacca, Tim Ferriss, Reid Hoffman, Scott Heiferman, Troy Carter, Bre Pettis, Lupe Fiasco, and Alexa von Tobel have been through the program in previous years, and several of those people have spoken highly of it to me. I&#8217;m excited to meet and get to know the rest of the 2017 class, and embark on a learning journey alongside them.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 03 Mar 2017 16:27:48 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:4:"Matt";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:19;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:83:"WPTavern: Do You Enjoy WordPress Meetups? Let the Community Marketing Team Know Why";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66806";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:93:"https://wptavern.com/do-you-enjoy-wordpress-meetups-let-the-community-marketing-team-know-why";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2722:"<p>When Matt Mullenweg, co-founder of the WordPress project, delivers his annual <a href="https://ma.tt/2016/12/state-of-the-word-2016/">State of The Word presentation</a>, he always gives props to meetup organizers and attendees. In 2016, there were 3,193 meetup events in 58 countries attended by 62,566 people. <a href="https://www.meetup.com/topics/wordpress/">Meetups</a> are one of the cornerstones of the community and for many are the gateway to discovering WordPress.</p>\n<p>In an effort to raise awareness of the project and its community, the Community Marketing team, a subgroup of the <a href="https://make.wordpress.org/marketing/">Marketing team</a>, is asking volunteers to <a href="https://make.wordpress.org/community/2017/03/01/meetup-video-testimonials-we-need-your-help/">record video testimonials</a> at WordCamps and meetups in March and April. The team wants to hear stories from users on why they use WordPress and how they&#8217;ve benefited from attending meetups.</p>\n<p>Other questions to consider asking include:</p>\n<ul>\n<li>How long have you been using WordPress.</li>\n<li>What brought you to the Meetup?</li>\n<li>How has coming to this Meetup affected you?</li>\n</ul>\n<p>Videos should be 1-5 minutes in length and <a href="http://wordpress.tv/submit-video/">uploaded to WordPress.tv</a> under the Testimonies category. Ideal recording conditions are a quiet room with decent lighting and good audio. Recordings can be planned or spontaneous and minimal post production editing is encouraged. Also consider making the videos more accessible by adding <a href="https://wordpress.tv/using-amara-org-to-caption-or-subtitle-a-wordpress-tv-video/">captions and translations</a>.</p>\n<p>The idea has received positive feedback with meetup attendees and organizers stating their <a href="https://make.wordpress.org/community/2017/03/01/meetup-video-testimonials-we-need-your-help/#comment-23138">intention to participate</a>. For an example on how to record WordPress testimonials, check out this video by Troy Dean where he interviews attendees at <a href="http://wordpress.tv/event/wordcamp-sunshine-coast-2016/">WordCamp Sunshine Coast</a> 2016.</p>\n<div class="embed-wrap"></div>\n<p>If there&#8217;s not a <a href="https://www.meetup.com/topics/wordpress/">WordPress meetup</a> in your area, consider organizing one yourself using <a href="https://wptavern.com/guide-to-starting-and-maintaining-a-wordpress-meetup">our guide</a>. For additional advice, I recommend this <a href="http://ithemes.com/publishing/run-wordpress-meetup/">free ebook by iThemes</a> that includes interviews with several organizers who share their experience managing meetups.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 02 Mar 2017 23:56:58 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:20;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:63:"WPTavern: WordPress.com Announces New Importer for Medium Posts";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66836";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:74:"https://wptavern.com/wordpress-com-announces-new-importer-for-medium-posts";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:6732:"<a href="https://i1.wp.com/wptavern.com/wp-content/uploads/2016/08/typewriter.jpg?ssl=1"><img /></a>photo credit: <a href="https://stocksnap.io/photo/4OURRGDU7Z">Sergey Zolkin</a>\n<p>Medium started 2017 on uncertain footing, <a href="https://blog.medium.com/renewing-mediums-focus-98f374a960be#.xij39212w" target="_blank">laying off a third of its staff</a> in January after admitting that its ad-based business model was not working.</p>\n<p>&#8220;We had started scaling up the teams to sell and support products that were, at best, incremental improvements on the ad-driven publishing model, not the transformative model we were aiming for,&#8221; Medium CEO Ev Williams said. &#8220;To continue on this trajectory put us at risk — even if we were successful, business-wise — of becoming an extension of a broken system. Upon further reflection, it’s clear that the broken system is ad-driven media on the internet.&#8221;</p>\n<p>Williams said that Medium will be taking &#8220;a different, bolder approach&#8221; to this problem of driving payment for quality content but that &#8220;it is too soon to say exactly what this will look like.&#8221; Medium may be <a href="https://twitter.com/rrhoover/status/827340315681923072" target="_blank">experimenting with paid subscriptions</a> in the future, but the company has yet to articulate its next strategy for monetization.</p>\n<h3>WordPress.com Now Offers an Importer Tool for Medium</h3>\n<p>Publishers that don&#8217;t want to stick around for Medium&#8217;s next round of experimentation can now easily migrate to WordPress. Automattic <a href="https://en.blog.wordpress.com/2017/03/02/import-your-medium-posts-to-wordpress-com/" target="_blank">announced</a> a new Medium importer for WordPress.com today and the company also plans to make it available to self-hosted WordPress sites through Jetpack.</p>\n<p><a href="https://i2.wp.com/wptavern.com/wp-content/uploads/2017/03/wordpressdotcom-medium-importer.png?ssl=1"><img /></a></p>\n<p>Medium users can export content to a zip file and then upload it into WordPress.com&#8217;s import tool. The import includes posts, tags, images, and videos and takes approximately 15 minutes to complete. Previously, Medium sites could be imported into WordPress using an RSS importer plugin, but there were significant drawbacks to this approach. WordPress.com&#8217;s importer tool takes this into account.</p>\n<p>&#8220;Using the provided RSS file from Medium&#8217;s export archive was not sufficient, because some of the post data, like embeds, is missing,&#8221; Automattic developer Marko Andrijašević said. &#8220;Because of that, we are combining the data available in RSS and exported HTML files to accurately reproduce the post&#8217;s content.&#8221;</p>\n<p>Medium hasn&#8217;t made it easy for publishers to leave with their full content and has changed the format of its exports multiple times in the past. Andrijašević said this is one of the reasons it took WordPress.com so long to add an importer, along with the fact that the provided data in the exported archive was not sufficient to import everything correctly.</p>\n<p>&#8220;We’ll have Jetpack support coming soon for self-hosted sites,&#8221; Andrijašević said. &#8220;One other workaround for self-hosted site owners would be to use the Medium importer on WordPress.com, and then generate a WXR (WordPress eXtended RSS) file with our exporter. The WXR can then be used with WordPress importer on any self-hosted site.&#8221;</p>\n<p>In addition to its uncertain future and unsightly permalinks, Medium gives users plenty of other reasons to be wary of the platform. <a href="https://www.buzzfeed.com/charliewarzel/when-you-launch-your-publication-the-same-day-medium-changes" target="_blank">Publishers were not notified in advance</a> about the company&#8217;s &#8220;renewed focus&#8221; and its plan to abandon the advertising model. Medium&#8217;s product is its users&#8217; content and the company&#8217;s <a href="https://medium.com/policy/medium-terms-of-service-9db0094a1e0f#.c309bw63n" target="_blank">terms of service</a> state that it can use that content to promote its own products and services, enable advertising, and &#8220;remove any content you post for any reason.&#8221;</p>\n<p>Part of the appeal of Medium is that it removes the burden of site management. Publishers are now expected to navigate things like AMP, FB Instant Articles, social networks, and SEO to drive traffic to their websites. With Medium, publishers are trading site ownership for convenience. If the company is not able to find a workable way to monetize users&#8217; content, it has a very real chance of joining the hundreds of <a href="https://indieweb.org/site-deaths" target="_blank">blogging silos that have died</a> or been bought by a competitor simply to be shut down and have their technology reabsorbed.</p>\n<p>Medium&#8217;s publishing experience is entirely geared towards making the company successful by monetizing the efforts of publishers on its network. In a post titled <a href="http://practicaltypography.com/billionaires-typewriter.html" target="_blank">The Billionaire&#8217;s Typewriter</a>, Matthew But­t­er­ick writes about how the platform&#8217;s limitations on features and customization are designed to &#8220;let Medium extract value from the talent and labor of others.&#8221; He describes digital sharecropping in its shiniest form:</p>\n<blockquote><p>Be­cause in re­turn for that snazzy de­sign, Medium needs you to relinquish con­trol of how your work gets to readers.</p>\n<p>Tempt­ing per­haps. But where does it lead? I fear that writ­ers who limit them­selves to pro­vid­ing “con­tent” for some­one else’s “branded plat­form” are go­ing to end up with as much lever­age as cows on a dairy farm.</p>\n<p>Medium is a new kind of type­writer—the bil­lion­aire’s type­writer. It’s not the only bil­lion­aire’s type­writer. So is the Kin­dle. So is iBooks. So is Twit­ter. <strong>What dis­tin­guishes these new type­writ­ers is not the pos­si­bil­i­ties they make available to writers, but what they take away.</strong></p></blockquote>\n<p>Publishers who want to determine the trajectory and reach of their own work need to migrate to a more stable platform where they have full control of their content. It&#8217;s not yet clear how Medium plans to monetize in the future, but the company will undoubtedly continue reaping the economic rewards of its publishers&#8217; work. Whether you choose open source software or some other avenue, it&#8217;s worth leaving Medium&#8217;s grand experiment in order to own your own work.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 02 Mar 2017 22:10:11 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:21;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:63:"WPTavern: WPWeekly Episode 265 – Interview with Matt Medeiros";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:58:"https://wptavern.com?p=66822&preview=true&preview_id=66822";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:70:"https://wptavern.com/wpweekly-episode-265-interview-with-matt-medeiros";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3596:"<p>In this episode, <a href="http://marcuscouch.com/">Marcus Couch</a> and I are joined by <a href="http://craftedbymatt.com/">Matt Medeiros</a>, co-founder of <a href="http://slocumstudio.com/">Slocum Studio</a>. Medeiros developed <a href="https://conductorplugin.com/">Conductor</a>, a WordPress plugin that enables people to display content in blocks, similar to the approach that <a href="https://wptavern.com/wordpress-core-editor-team-publishes-ui-prototype-for-gutenberg-an-experimental-block-based-editor">WordPress core is taking</a>. He shares his thoughts and opinions on core&#8217;s approach and how it might impact the content builder market.</p>\n<p>Since Medeiros co-founded Slocum Studio with his father, Mark Medeiros, we discover what it&#8217;s like to operate a web development agency with a family dynamic. Last but not least, he shares his experience in the <a href="https://slocumthemes.com/">commercial theme market</a> and gives us a first-hand account of what it was like to go through the <a href="https://make.wordpress.org/themes/handbook/review/">theme review process</a>. Based on the experience, Medeiros says he will not submit new themes to the directory.</p>\n<h2>Stories Discussed:</h2>\n<p><a href="https://wptavern.com/nextgen-gallery-patches-critical-sql-injection-vulnerability">NextGEN Gallery Patches Critical SQL Injection Vulnerability</a><br />\n<a href="https://wptavern.com/amazon-s3-outage-hits-wordpress-businesses-disrupting-service-and-support">Amazon S3 Outage Hits WordPress Businesses, Disrupting Services and Support</a><br />\n<a href="https://wptavern.com/freemius-launches-insights-for-wordpress-themes">Freemius Launches Insights for WordPress Themes</a></p>\n<h2>Plugins Picked By Marcus:</h2>\n<p><a href="https://wordpress.org/plugins/woo-simple-ads-server/">WooCommerce Simple Ads Server</a> lets you create ads and campaigns for selling your own WooCommerce products on other websites. It lists all of your WooCommerce products on the back-end with options to create and assign banners for each product. It also provides all the scripts and embed codes necessary for your banners.</p>\n<p><a href="https://wordpress.org/plugins/wp-keyword-monitor/">WP Keyword Monitor</a> uses the official API from Google to track your organic keyword rankings. You can track up to 100 keywords per day. This plugin provides full reports and displays a running graph of your rankings and statistics over time.</p>\n<p><a href="https://wordpress.org/plugins/private-uploads/">Private Uploads</a> protects sensitive uploaded files so that only logged-in users can access them. This plugin moves your designated private files to a separate folder and configures the web server to ask WordPress to authenticate access to files in that folder. It&#8217;s more efficient than similar plugins because it only rubs when serving files in the private folders.</p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, March 8th 3:00 P.M. Eastern</p>\n<p><strong>Subscribe To WPWeekly Via Itunes: </strong><a href="https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738" target="_blank">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via RSS: </strong><a href="https://wptavern.com/feed/podcast" target="_blank">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via Stitcher Radio: </strong><a href="http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr" target="_blank">Click here to subscribe</a></p>\n<p><strong>Listen To Episode #265:</strong><br />\n</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 01 Mar 2017 23:28:38 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:22;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:48:"HeroPress: WordPress Opened Up a Whole New World";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:56:"https://heropress.com/?post_type=heropress-essays&p=1620";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:62:"https://heropress.com/essays/wordpress-opened-whole-new-world/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:10886:"<img width="960" height="480" src="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/03/030117-1024x512.jpg" class="attachment-large size-large wp-post-image" alt="Pull Quote: If it hadn''t been for WordPress, I would never have experience being part of an open-source community." /><h3>Before WordPress</h3>\n<p>Several years ago, I went through a tough time in my life. I lost my job and I was desperately in need of a career change. Because of the economic climate in Zimbabwe, I didn&#8217;t see many options, but I felt that IT held the most promising future.</p>\n<p>So I completed an A+ course and obtained a CCNA certification. Unfortunately, in Zimbabwe, skills and certifications were not enough to secure meaningful employment. Being a college drop-out, I didn&#8217;t have the required diploma or degree that employers were looking for.</p>\n<p>That&#8217;s when I enrolled in a diploma in management of information systems. In this course, there was a module called “Programming and Web Design”. I was introduced to HTML, CSS and Javascript, among other programming languages. But it was only an introduction… it wasn&#8217;t enough to be able to create my own website.</p>\n<p>After graduating, I studied online tutorials and learned how to create a website. That was the beginning of my personal website, franksweb.org, a static HTML website that I created from scratch.</p>\n<p>Not long after that, I was hired by an an online design and marketing firm that was looking for a web developer. To my surprise, I found that they only used content management systems (CMS) to create websites. No one was making static HTML websites!</p>\n<p>Joomla! was the preferred CMS at this company. It wasn&#8217;t until I was assigned to create a website for a local recording artist that I discovered WordPress. I was searching for templates that suited the client&#8217;s needs and discovered a template that just happened to be WordPress!</p>\n<p>I had heard of WordPress, even though they didn&#8217;t teach us about content management systems in my diploma course. All I knew was that WordPress was a free blogging service.</p>\n<blockquote><p>I had no idea how much more was possible using WordPress.</p></blockquote>\n<p>I soon discovered the numerous advantages of using WordPress over Joomla! (There&#8217;s a reason why 27% of the web uses WordPress, whereas Joomla! is used by only 3%!) Soon after, I re-designed <a href="https://franksweb.org/" target="_blank">franksweb.org</a> using WordPress. So began my love affair with WordPress.</p>\n<h3>Freelancing</h3>\n<p>After having worked for my employer for a little over one and a half years, receiving a very small salary, the time came for me to move on. My employer had been failing to pay our salaries and owed me a lot of money in back pay (which has never been paid to me to this day). So I had no choice but to leave and I started freelancing.</p>\n<p>Since I started freelancing, all the websites I&#8217;ve created for my clients (except for one) have been WordPress sites. WordPress has empowered me to make a living from creating functional websites that are easy to manage for my clients.</p>\n<p>Here in Zimbabwe, very few web designers and web developers create static HTML websites. The majority use content management systems, and for good reason. Of course, the overwhelming majority are WordPress sites. This is just a testament to how WordPress makes our jobs easier and the potential to make money using WordPress.</p>\n<h3>The WordPress Community</h3>\n<p>One thing that we were taught in my diploma course was the importance of continuous professional development (CPD). That, and the fact that I had a genuine passion for all things WordPress, led me to soak up anything WordPress-related that I could get my hands on. I watched a lot of Morten Rand-Hendriksen&#8217;s tutorials on lynda.com to advance my skills. The WordPress.org website became a permanent tab on my desktop whenever you opened my web browser (my “WordPress Bible”). I also made sure the “WordPress News” box was always open in all my Dashboards so I could keep up with the latest in WordPress.</p>\n<p>One day I saw a <a href="https://wptavern.com/" target="_blank">WPTavern</a> article in my Dashboard calling for applications to participate in the first WordCamp incubator program. I was very interested since Zimbabwe had never had a WordCamp before. I didn’t know of anyone else in Harare who had the same desire but I applied anyway.</p>\n<p>More than a hundred cities applied so I honestly wasn’t expecting my application to be chosen, especially because of the challenges that my country is facing.</p>\n<blockquote><p>I was shocked when I got an email from Rocio Valdivia and Hugh Lashbrooke saying they wanted to interview me for the incubator program.</p></blockquote>\n<p>Later on, I received an email from Andrea Middleton saying my application to be a WordCamp organizer had been accepted! This was a very exciting time for me. It was now going to be possible to experience the things I had read about the WordPress Community here in Zimbabwe, too.</p>\n<a href="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/03/meetup_at_CSZ-min.jpeg"><img class="size-large wp-image-1627" src="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/03/meetup_at_CSZ-min-1024x576.jpeg" alt="First meetup at the Computer Society of Zimbabwe, August 20, 2016" width="960" height="540" /></a>First meetup at the Computer Society of Zimbabwe, August 20, 2016\n<p>The first thing that I needed to do was start a monthly WordPress meetup group in Harare because there was no regular meetup that I was aware of, and therefore no real WordPress Community. It was a struggle but thanks to the guidance and support of WordCamp Central, and the support of the <a href="http://www.csz.org.zw/" target="_blank">Computer Society of Zimbabwe</a>, we were able to have meetups and the membership grew.</p>\n<blockquote><p>Months later, we hosted the very first WordCamp in Zimbabwe: WordCamp Harare 2016.</p></blockquote>\n<p>It was a success and much better than I thought it would be. Along with our monthly meetups, WordCamp did a lot to promote awareness of the WordPress Community. Since then, quite a number of local WordPress users have become active in the WordPress Community. I absolutely love hosting meetups and sharing knowledge about something which I am passionate about.</p>\n<a href="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/03/wordcamp_at_harare_city_library-min.jpg"><img class="size-large wp-image-1628" src="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/03/wordcamp_at_harare_city_library-min-1024x678.jpg" alt="First WordCamp Harare at Harare City Library" width="960" height="636" /></a>First WordCamp Harare at Harare City Library\n<p>On a personal level, working with the WordPress Community opened up a world that I didn&#8217;t know existed within WordPress. I got to know so many amazing people and everyone has been helpful and kind. The WordPress Community is made up of people who are generous and willing to give their time and share knowledge with others. For me, it is very fulfilling to be able to give back to something which I have benefited from so much.</p>\n<p>One of the highlights of WordCamp for me was meeting Job Thomas and Herman Kok, two of our speakers who came from South Africa. They both work for <a href="https://automattic.com/" target="_blank">Automattic</a>, the company that owns WordPress.com, WooCommerce, Jetpack and other WordPress-related products. (Before I became active in the WordPress Community, I had no idea Automattic had an office in South Africa!) Talking to them, I got a strong sense that they were passionate, not only about what they do, but about sharing their knowledge and experience with others.</p>\n<p>I was encouraged and inspired to apply to work for Automattic. The position that I wish to apply for is called “Happiness Engineer”. Basically, your job is customer support. For me, this is a dream job: getting paid to do something that I have a passion for which is share my knowledge of WordPress with others. They say that if you find something that you love to do, you&#8217;ll never work another day in your life. So currently, I spend time helping other users in Automattic product forums in order to gain more direct experience before I apply.</p>\n<p>This past year has been an awesome journey for me. If it wasn&#8217;t for WordPress, I would never have experienced being part of an open-source community and the doors that have opened for me. There are so many awesome people that I never would have gotten to know. WordPress truly changed my life.</p>\n<div class="rtsocial-container rtsocial-container-align-right rtsocial-horizontal"><div class="rtsocial-twitter-horizontal"><div class="rtsocial-twitter-horizontal-button"><a title="Tweet: WordPress Opened Up a Whole New World" class="rtsocial-twitter-button" href="https://twitter.com/share?text=WordPress%20Opened%20Up%20a%20Whole%20New%20World&via=heropress&url=https%3A%2F%2Fheropress.com%2Fessays%2Fwordpress-opened-whole-new-world%2F" rel="nofollow" target="_blank"></a></div></div><div class="rtsocial-fb-horizontal fb-light"><div class="rtsocial-fb-horizontal-button"><a title="Like: WordPress Opened Up a Whole New World" class="rtsocial-fb-button rtsocial-fb-like-light" href="https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fessays%2Fwordpress-opened-whole-new-world%2F" rel="nofollow" target="_blank"></a></div></div><div class="rtsocial-linkedin-horizontal"><div class="rtsocial-linkedin-horizontal-button"><a class="rtsocial-linkedin-button" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fessays%2Fwordpress-opened-whole-new-world%2F&title=WordPress+Opened+Up+a+Whole+New+World" rel="nofollow" target="_blank" title="Share: WordPress Opened Up a Whole New World"></a></div></div><div class="rtsocial-pinterest-horizontal"><div class="rtsocial-pinterest-horizontal-button"><a class="rtsocial-pinterest-button" href="https://pinterest.com/pin/create/button/?url=https://heropress.com/essays/wordpress-opened-whole-new-world/&media=https://heropress.com/wp-content/uploads/2017/03/030117-150x150.jpg&description=WordPress Opened Up a Whole New World" rel="nofollow" target="_blank" title="Pin: WordPress Opened Up a Whole New World"></a></div></div><a rel="nofollow" class="perma-link" href="https://heropress.com/essays/wordpress-opened-whole-new-world/" title="WordPress Opened Up a Whole New World"></a></div><p>The post <a rel="nofollow" href="https://heropress.com/essays/wordpress-opened-whole-new-world/">WordPress Opened Up a Whole New World</a> appeared first on <a rel="nofollow" href="https://heropress.com">HeroPress</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 01 Mar 2017 12:00:53 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"Thabo Tswana";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:23;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:91:"WPTavern: HackerOne Launches Free Community Edition for Non-Commercial Open Source Projects";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66592";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:102:"https://wptavern.com/hackerone-launches-free-community-edition-for-non-commercial-open-source-projects";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5076:"<p><a href="https://i2.wp.com/wptavern.com/wp-content/uploads/2017/02/hackerone-logo.png?ssl=1"><img /></a></p>\n<p><a href="https://www.hackerone.com" target="_blank">HackerOne</a>, the vulnerability coordination and bug bounty platform, has launched a new <a href="https://www.hackerone.com/product/community" target="_blank">Community Edition</a> for open source projects. The company is built around the notion that, &#8220;given enough eyeballs, all vulnerabilities are shallow.&#8221; HackerOne announced a <a href="https://www.hackerone.com/blog/The-best-security-initiative-you-can-take-in-2017" target="_blank">$40 million round of funding</a> earlier this month, which allows the company to expand its market and add new features to the platform.</p>\n<p>Open source projects are one area where HackerOne is expanding its reach. The company participates in the <a href="https://internetbugbounty.org/" target="_blank">Internet Bug Bounty</a> program, which helps secure core internet infrastructure and open source software, but HackerOne is now opening up its own platform.</p>\n<p>&#8220;One of the goals I have had in my work with HackerOne is to build an even closer bridge between HackerOne and the open source community,&#8221; community strategy consultant Jono Bacon said. Bacon <a href="http://www.jonobacon.org/2017/02/09/hackerone-professional-free-open-source-projects/" target="_blank">announced</a> the availability of HackerOne&#8217;s new <a href="https://www.hackerone.com/product/community" target="_blank">Community Edition</a>, which has not yet been formally announced but is already open for applicants.</p>\n<p>The Community Edition has all the same features as HackerOne&#8217;s Professional Edition, including vulnerability submission/coordination, duplicate detection, hacker reputation, analytics, and more. The only difference is that it doesn&#8217;t include paid customer support and program assistance. It also integrates with many popular issue tracking tools, such as JIRA, GitHub, Bugzilla, Zendesk, Track, and others.</p>\n<p><a href="https://i1.wp.com/wptavern.com/wp-content/uploads/2017/02/hackerone-community-edition.png?ssl=1"><img /></a></p>\n<p>Although the name &#8220;Community Edition&#8221; might suggest to some that it is self-hosted, HackerOne actually provides it as a SaaS offering with no setup or deployment required.</p>\n<p>Open source projects are eligible if they meet a few requirements:</p>\n<ul>\n<li>Must be open source projects covered by an <a href="https://opensource.org/licenses" target="_blank">OSI license</a></li>\n<li>Be active and at least 3 months old (age is defined by shipped releases/code contributions)</li>\n<li>Include a SECURITY.md in the project root that provides details for how to submit vulnerabilities (<a href="https://github.com/discourse/discourse/blob/master/docs/SECURITY.md" target="_blank">example</a>)</li>\n<li>Display a link to your HackerOne profile from either the primary or secondary navigation on the project&#8217;s website</li>\n<li>Maintain an initial response to new reports of less than a week</li>\n</ul>\n<p>WordPress doesn&#8217;t have its own listing in the HackerOne directory but <a href="https://hackerone.com/automattic" target="_blank">Automattic&#8217;s page</a> says the company also welcomes reports for WordPress, BuddyPress, and bbPress. Automattic has had 446 bugs resolved through its program on HackerOne, which it has maintained for the past three years. A handful of other WordPress-related projects are also listed in the directory, including the <a href="https://hackerone.com/wordpoints" target="_blank">WordPoints</a> plugin, <a href="https://hackerone.com/iandunn-projects" target="_blank">Ian Dunn&#8217;s projects</a>, and <a href="https://hackerone.com/flox" target="_blank">Flox</a>.</p>\n<p>Having a crowd-sourced security program in place is becoming more critical, as breeches are costing companies billions of dollars every year. The World Economic Forum&#8217;s <a href="http://www3.weforum.org/docs/GRR/WEF_GRR16.pdf" target="_blank">2016 Global Risks Report</a> estimated that &#8220;crimes in cyberspace cost the global economy an estimated $445 billion.&#8221;</p>\n<p>Not all organizations listed on HackerOne offer bug bounties, but bounties are a proven method of attracting security talent. Since HackerOne launched, its customers have resolved more than 37,000 vulnerabilities and have paid out more than $13 million in bug bounties. By the end of 2016, HackerOne&#8217;s community of hackers had grown to nearly 100,000.</p>\n<p>The new <a href="https://www.hackerone.com/product/community" target="_blank">Community Edition</a> gives smaller open source projects and organizations exposure to HackerOne&#8217;s network of thousands of security researchers and the tools for managing communication about vulnerabilities. Projects applying for the Community Edition must be non-commercial and able to run an effective security program. Applications are usually answered within one business week.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 01 Mar 2017 04:56:16 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:24;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:57:"WPTavern: Freemius Launches Insights for WordPress Themes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66740";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:68:"https://wptavern.com/freemius-launches-insights-for-wordpress-themes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:8722:"<p>Freemius Insights <a href="https://freemius.com/blog/freemius-insights-wordpress-themes/">has announced</a> that its <a href="https://freemius.com/">analytics service</a> that was previously <a href="https://wptavern.com/freemius-insights-enables-plugin-developers-to-make-data-driven-decisions">only available to WordPress plugins</a> is now available for themes. The company was founded in 2015 by <a href="https://twitter.com/vovafeldman">Vova Feldman</a> and his team after discovering how much information is not available to developers who host plugins and themes on the official WordPress directories and marketplaces.</p>\n<img />Freemius Insights for Themes\n<p>Freemius Insights for themes gives developers an opportunity to collect a large variety of data, including, email addresses, PHP, plugin, WordPress version distribution, and more. When a user installs a theme that uses Freemius, an opt-in prompt is displayed that notifies them that data will be sent to Freemius.com to help improve the product. Selecting Skip prevents data from reaching Freemius.com.</p>\n<img />Freemius Opt-in Prompt\n<p>Feldman says that he and his team have worked closely with the <a href="https://make.wordpress.org/themes/">WordPress Theme Review Team</a> to ensure that Freemius Insights does not violate the theme directory <a href="https://make.wordpress.org/themes/handbook/review/required/">requirements.</a> One of the most informative features that Freemius Insights provides is the ability for users to provide feedback if they decide to switch to a different theme.</p>\n<p>When a user switches away from a product using Freemius, a prompt is shown with randomly displayed questions asking for feedback. These responses are saved and can be viewed at a later time in the Freemius dashboard. If a user switches themes because it doesn&#8217;t have a specific feature and it&#8217;s added at some point, a developer can go back and notify them that the feature exists.</p>\n<h2>Data Collection Leads to Description, Settings, and Documentation Improvements for FooBox</h2>\n<p>Adam Warner, Co-founder of <a href="https://fooplugins.com">FooPlugins.com</a>, added Freemius Insights to <a href="https://wordpress.org/plugins/foobox-image-lightbox/">FooBox</a>, an image lightbox plugin after noticing that other plugins were collecting opt-in usage data. His team realized they needed the data but didn&#8217;t have the resources to build a custom solution in a reasonable amount of time.</p>\n<p>Warner shares what he discovered with the data collected by Freemius. &#8220;Install, uninstall, deactivation, and feedback data is some of the most important data we&#8217;ve obtained,&#8221; he responded.</p>\n<p>&#8220;Not long after we discovered that of those who deactivated the plugin, the two top reasons were &#8216;expected something else&#8217; and &#8216;didn&#8217;t understand how it works.&#8217; That is valuable insight that we might not have had otherwise and allowed us to revamp our plugin description on .org and in the plugin settings.&#8221;</p>\n<p>One of the main reasons for collecting data is to improve the product. Based on the data collected, improvements to FooBox were geared towards documentation and the plugin&#8217;s settings pages, &#8220;After learning from the insights that Freemius provided us, we wrote longer explanations of various settings and what they do, as well as putting in links to documentation and video walkthroughs,&#8221; he said.</p>\n<h2>Freemius Usage Data Ramps Up Priority for NextGEN Gallery Wizard</h2>\n<p>NextGEN Gallery is Freemius&#8217; most popular plugin tracked so I asked Erick Danzer, Founder and CEO of Imagely, makers of NextGEN Gallery, what his team has learned and if any improvements are a direct result of the data collected.</p>\n<p>Since adding Freemius to NextGEN Gallery, the opt-in form has been exposed to about 200K new users. Out of these, 37.5% or 75K users have opted to submit data.</p>\n<p>&#8220;We&#8217;ve learned that 21% of users deactivate or uninstall the plugin entirely,&#8221; Danzer said. &#8220;Conversely, that means we have about a 79% retention rate. It&#8217;s hard to know how that compares to the WordPress ecosystem as a whole, but our sense is that retention rate is not bad (even if we&#8217;d like it to be better). I&#8217;d love to see comparative data across other plugins at some point.&#8221;</p>\n<p>Of those who uninstall the plugin, 20% which is the largest share, do so because they don&#8217;t understand how it works, &#8220;This wasn&#8217;t a surprise. We know that NextGEN Gallery is powerful and thus overwhelming to some users,&#8221; Danzer said. &#8220;But this is the first time we&#8217;ve been able to put actual numbers on that behavior.&#8221;</p>\n<p>Some of the biggest improvements to NextGEN Gallery that are a result of the data that&#8217;s been collected deal with the user interface. &#8220;We now know that 21% of users uninstall and that the biggest reason is too much complexity getting started,&#8221; Danzer said. &#8220;That tells us that if we want to improve our retention rate, we need to make it easier to start.&#8221;</p>\n<p>&#8220;To that end, we&#8217;ve done two things. First, we just released a start-up Gallery Wizard late last fall that walks new users through the process of setting up their first gallery. Second, we&#8217;re about 70% done with an overhaul of the interface to simplify the presentation of options. These are both things we probably would have done anyways, but we upped their priority based on Freemius data.&#8221;</p>\n<h2>Data From Freemius Insights Points to a Common Dead-end With Plugins</h2>\n<p>For more than a year, Freemius Insights has been collecting mountains of data for plugins. Feldman was gracious enough to supply the Tavern with some interesting data. There are more than 750 developers registered to the site and more than 400K users have opted-in to usage tracking. <a href="https://wordpress.org/plugins/nextgen-gallery/">NextGEN Gallery</a> is the service&#8217;s most popular tracked plugin active on more than 1.5M sites.</p>\n<p>Out of the plugins tracked, there have been 114K feedback responses on why users deactivated a plugin. The top five reasons plugins were deactivated are:</p>\n<ul>\n<ul>\n<li>23% Expected something else / didn&#8217;t work as expected</li>\n<li>21% Didn&#8217;t understand how it works</li>\n<li>20% No longer needed</li>\n<li>13% Found a better alternative</li>\n<li>6% Didn’t work</li>\n</ul>\n</ul>\n<p>The most interesting aspect of this data is the second most popular reason why users deactivate a plugin. When users activate a plugin, many don&#8217;t know what the next step is. It could be searching for a link to the settings page or not doing anything at all. Most of the time, users have no idea because the plugin doesn&#8217;t tell them.</p>\n<p><a href="https://wordpress.org/plugins/woocommerce/">WooCommerce</a> is a good example of a plugin that bucks this trend with an <a href="https://docs.woocommerce.com/document/woocommerce-onboarding-wizard/">onboarding wizard</a> that when completed, puts users in a place where they can immediately start selling products.</p>\n<img />WooCommerce Onboarding Wizard\n<p>Not every plugin is as complex as WooCommerce and doesn&#8217;t need a onboarding wizard. For these use cases, developers might consider using <a href="https://code.tutsplus.com/articles/integrating-with-wordpress-ui-admin-pointers--wp-26853">Admin Pointers</a>, a feature that was added in WordPress 3.3. With Admin Pointers you can inform users about a new feature or provide further instructions after a plugin is activated.</p>\n<p>Insights for Themes is free for non-commercial themes however, only two weeks of historical aggregated metrics and the 100 most recent user emails will be collected. In exchange for aggregating the data, Freemius asks that a symbolic attribution that &#8216;freemius&#8217; is a contributor be added to the theme&#8217;s readme.txt file. No email exports or webhooks are included with the free plan.</p>\n<p>Freemius is an example of a service that is filling a huge void of nonexistent data from WordPress.org for plugin and theme authors. A void that <a href="https://wptavern.com/solving-the-mystery-of-how-people-actually-use-wordpress">doesn&#8217;t appear likely</a> to be filled anytime soon. As noted above, the data that is collected, especially direct feedback from users, has surfaced issues that may not have otherwise been discovered.</p>\n<p>If you use Freemius Insights in your plugins or themes, please tell us about your experience and what you&#8217;ve learned from the collected data.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 28 Feb 2017 22:43:48 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:25;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:85:"WPTavern: Amazon S3 Outage Hits WordPress Businesses, Disrupting Services and Support";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66751";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:94:"https://wptavern.com/amazon-s3-outage-hits-wordpress-businesses-disrupting-service-and-support";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5853:"<p><a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2017/02/Amazon_Web_Services_logo_AWS.jpg?ssl=1"><img /></a></p>\n<p>Amazon is currently experiencing &#8220;high error rates with S3 in US-EAST-1,&#8221; causing a massive outage for sites, apps, and services across the web. The <a href="https://status.aws.amazon.com/" target="_blank">AWS service health dashboard</a> was also temporarily affected by the outage. Amazon says it is working at repairing S3 and that they believe they have identified the root cause.</p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr"><a href="https://twitter.com/awscloud">@awscloud</a> Care to share the architecture of this status page as an anti-pattern?</p>\n<p>&mdash; Thorben Heins (@thorbenheins) <a href="https://twitter.com/thorbenheins/status/836657580382502912">February 28, 2017</a></p></blockquote>\n<p></p>\n<p>The outage is affecting many popular sites, such as Quora, Netflix, Splitwise, Business Insider, Giphy, Trello, IFTTT, many publishers&#8217; image hosting, filesharing in Slack, and the Docker Registry Hub.</p>\n<p>WordPress businesses are also currently affected, especially those that host customer downloads. WooCommerce customers are currently unable to access downloads they purchased. Similarly Envato customers are having difficulty accessing downloads and content.</p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr">Yes, we are affected by <a href="https://twitter.com/hashtag/AWS?src=hash">#AWS</a> <a href="https://twitter.com/hashtag/S3?src=hash">#S3</a> outage too. S3 is having a snag right now&#8230;. Quora, Slack, Envato and millions more are suffering&#8230;</p>\n<p>&mdash; WPBakery (@wpbakery) <a href="https://twitter.com/wpbakery/status/836663834437955584">February 28, 2017</a></p></blockquote>\n<p></p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr">We''re aware of issues with functionality of the <a href="https://t.co/dGuVluPt9A">https://t.co/dGuVluPt9A</a> site, such as My Downloads. This is related to the <a href="https://twitter.com/awscloud">@awscloud</a> outage</p>\n<p>&mdash; WooCommerce (@WooCommerce) <a href="https://twitter.com/WooCommerce/status/836663491805216768">February 28, 2017</a></p></blockquote>\n<p></p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr">Amazon S3 has identified high error rate issue that''s impacting the Envato Market specifically our downloads and content. We are monitoring!</p>\n<p>&mdash; Envato Help (@envato_help) <a href="https://twitter.com/envato_help/status/836653583428771840">February 28, 2017</a></p></blockquote>\n<p></p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr">Downloading and updating our premium plugins is possible again, after a short downtime due to problems at S3. Sorry for the inconvenience!</p>\n<p>&mdash; Yoast (@yoast) <a href="https://twitter.com/yoast/status/836684468513558529">February 28, 2017</a></p></blockquote>\n<p></p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr">Due to the AWS outage, we are experiencing problems with sales, support, and development.  Please accept our apologies&#8230;we''ll be back soon!</p>\n<p>&mdash; WP Ninjas, LLC (@wpninjas) <a href="https://twitter.com/wpninjas/status/836662320088539136">February 28, 2017</a></p></blockquote>\n<p></p>\n<p>Joost de Valk, CEO and founder of <a href="https://yoast.com/" target="_blank">Yoast</a>, said the company experienced minor effects from the outage but has already been planning on switching from S3 to a new storage provider.</p>\n<p>“The outage doesn’t seem to have affected our revenue much,&#8221; de Valk said. &#8220;It was slightly annoying and led to some images not working and people not being able to download their plugins for a while, which is always a shame. However, not directly related to this, we’re already looking at ditching S3. That&#8217;s because our new hosting setup at SiteGround combined with CDN from MaxCDN actually negates the need for S3 entirely.&#8221;</p>\n<p>Other companies that have AWS integrated into their support services experienced more disruption due to customers not being able to receive help.</p>\n<p>&#8220;Obviously our website is hosted using AWS technology through Pagely,&#8221; <a href="http://wpninjas.com/" target="_blank">WP Ninjas</a> co-founder James Laws said. &#8220;I’m not sure how they’ve been affected directly, but we have noticed intermittent downtime. Perhaps the biggest impact is that our support service is built on AWS and with it down we are completely unable to provide any support to our users.&#8221;</p>\n<p>Laws said the company has had fairly decent uptime with AWS in the past and that the idea of switching services because of an outage would not be worth the effort.</p>\n<p>&#8220;The truth is that 100% uptime is more a fantasy than anything,&#8221; Laws said. &#8220;The idea of having to move a website or change a support system temporarily or even permanently for a short period of downtime would be pretty daunting. You probably could create contingency plans for something like this, but the technical and administrative costs are not generally worth it in my opinion.&#8221;</p>\n<p>The outage serves as a painful reminder of how dependent the web is on cloud storage providers and how few services have a backup plan for instances like these.</p>\n<p>At 12:52 PM PST Amazon released an update, promising improvements for customers within the hour: &#8220;We are seeing recovery for S3 object retrievals, listing and deletions. We continue to work on recovery for adding new objects to S3 and expect to start seeing improved error rates within the hour.&#8221; The ability to retrieve, list, and delete was fully recovered within half an hour and Amazon continues to work on fixing the ability to add new objects to S3.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 28 Feb 2017 21:54:14 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:26;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:42:"Donncha: Coming up in WP Super Cache 1.5.0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"https://odd.blog/?p=89500157";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:62:"https://odd.blog/2017/02/28/coming-up-in-wp-super-cache-1-5-0/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5618:"<p>The next version of WP Super Cache will be one with some big changes! There are many small bug fixes and improvements but the one I&#8217;m most excited about is moving the legacy cache files into the supercache directory.</p>\n<p>The legacy cache files were the files created by the old WP-Cache plugin upon which this plugin is based. They&#8217;re really useful as they store the headers sent from the server as well as the page contents. If you&#8217;re serving pages that aren&#8217;t regular html, such as JSON or XML you don&#8217;t want to tell the browser they&#8217;re text/html documents. This caching method is also used for anyone who is logged into your site, or left a comment.<br />\nThere is a problem however. They&#8217;re stored in one directory. If you have many thousands of visitors interacting with your site you may end up with a directory containing thousands of files. The names of the cache files are a hash of the URL, gzip support and browser cookies so one file can match one user, or one file can be used by thousands of anonymous users. In the event that someone left a comment on a popular post the plugin has to search through all those files looking for the pages cached for other users who were also looking at that page. On a busy server that can cause problems.</p>\n<p>So, in <a href="https://github.com/Automattic/wp-super-cache/pull/177">#177</a> I added code that moves the legacy cache files into the supercache directory. That means the files are stored in directories that reflect the URL of the page that was served which makes it very easy to delete the cached files belonging to that page as they&#8217;re all in the same directory!</p>\n<p>The new code will look in the old location for legacy files first as some sites will have a large collection of cached files, but any new cache files will be created in the supercache directory.</p>\n<p>Ian Dunn <a href="https://github.com/Automattic/wp-super-cache/pull/121">submitted code</a> to cache the REST API. It&#8217;s not yet complete but we&#8217;ll be able to build on the changes to the legacy cache to make caching the API more efficient than it would have been before.</p>\n<p>I really need people to help test this. The latest code is running on this site so I&#8217;m very confident in how well it works but just because it works on my odd little server doesn&#8217;t mean it will work right everywhere. If you want to give it a spin, visit <a href="https://github.com/Automattic/wp-super-cache">the plugin Github repository</a> and click on the &#8220;Clone or download&#8221; button. If you don&#8217;t know how to clone a Git respository just grab the zip file and install it on your server, overwriting the files in the plugins/wp-super-cache/ directory. If the changes to where cache files go doesn&#8217;t interest you, some of the changes in this list might:</p>\n<ul>\n<li><a href="https://github.com/Automattic/wp-super-cache/commit/b654bcf6d75655e386f22c2fcbad19272b0d75cd">Don’t output broken warning in robots.txt</li>\n<li><a href="https://github.com/Automattic/wp-super-cache/commit/8b63d5d97f246ba4d442e7b5d32a4d08fce4fd22">Use get_home_url() instead of siteurl because some sites have different homepages</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/176">Remove most calls to get_all_supercache_filenames()</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/145">Fix bottom border in admin</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/199">Use plugins_url() so https links work</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/55">Preload from the newest post</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/101">Stop caching of wp-admin visits sooner</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/177">Store legacy cache files in the supercache directories</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/100">Make the headers more informative to tell how a page was served</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/90">Properly serve 304 requests</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/188">Apply realpath to filenames because of Windows oddities</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/127">Don&#8217;t flush(), output buffers don&#8217;t like it</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/194">Add more file checks around wp_cache_rebuild_or_delete()</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/191">If HTTP_HOST is not defined then disable caching</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/190">Only show html comments on html pages</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/issues/184">Fix caching of mobile requests</a></li>\n<li><a href="https://github.com/Automattic/wp-super-cache/pull/61">Clear the cache for private posts</a></li>\n</ul>\n\n<p><strong>Related Posts</strong><ul><li> <a href="https://odd.blog/2008/10/24/wp-super-cache-084-the-garbage-collector/" rel="bookmark" title="Permanent Link: WP Super Cache 0.8.4, the garbage collector">WP Super Cache 0.8.4, the garbage collector</a></li><li> <a href="https://odd.blog/2009/01/09/wp-super-cache-087/" rel="bookmark" title="Permanent Link: WP Super Cache 0.8.7">WP Super Cache 0.8.7</a></li><li> <a href="https://odd.blog/2010/02/08/wp-super-cache-099/" rel="bookmark" title="Permanent Link: WP Super Cache 0.9.9">WP Super Cache 0.9.9</a></li></ul></p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 28 Feb 2017 15:05:34 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:7:"Donncha";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:27;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:70:"WPTavern: NextGEN Gallery Patches Critical SQL Injection Vulnerability";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66611";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:81:"https://wptavern.com/nextgen-gallery-patches-critical-sql-injection-vulnerability";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2804:"<p><a href="https://blog.sucuri.net/author/slavco/">Slavco Mihajloski</a>, security researcher at <a href="https://sucuri.net/">Sucuri</a>, <a href="https://blog.sucuri.net/2017/02/sql-injection-vulnerability-nextgen-gallery-wordpress.html">has discovered</a> a critical SQL injection vulnerability in <a href="https://wordpress.org/plugins/nextgen-gallery/">NextGEN Gallery</a>, a popular WordPress plugin that&#8217;s active on more than a million sites.</p>\n<p>Mihajloski gives the vulnerability a 9 out of 10 on Sucuri&#8217;s DREAD scale. Dread stands for Damage, Reproducibility, Exploitability, Affected Users, and Discoverability.</p>\n<p>Each category receives a score between 0 and 10. The <a href="https://blog.sucuri.net/2015/03/understanding-wordpress-plugin-vulnerabilities.html">DREAD score</a> is obtained by adding the totals from each category and then dividing by five. The higher the score, the more severe the vulnerability.</p>\n<p>The SQL injection vulnerability affects NextGEN Gallery versions 2.1.77 and below. Version 2.1.79 is patched and was released four days ago. Those who use NextGEN basic tagcloud gallery or allow visitors to submit posts to be reviewed by contributors are especially at risk.</p>\n<p>&#8220;This vulnerability allows an unauthenticated user to grab data from the victim’s website database, including sensitive user information,&#8221; Mihajloski said.</p>\n<p>&#8220;This issue existed because NextGEN Gallery allowed improperly sanitized user input in a WordPress prepared SQL query, which is basically the same as adding user input inside a raw SQL query. Using this attack vector, an attacker could leak hashed passwords and WordPress secret keys, in certain configurations.&#8221;</p>\n<p>Although 2.1.79 patches the vulnerability, the <a href="https://wordpress.org/plugins/nextgen-gallery/changelog/">plugin&#8217;s changelog</a> doesn&#8217;t indicate a critical security issue was fixed. Eric Danzer, Founder and CEO of Imagely, makers of NextGEN Gallery, <a href="https://twitter.com/ErickDanzer/status/836315264002232321">explained on Twitter</a> why it&#8217;s not mentioned in the changelog.</p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr"><a href="https://twitter.com/perezbox">@perezbox</a> <a href="https://twitter.com/jeffr0">@jeffr0</a> We just wanted updates underway before drawing attention. We''ll update changelog for accuracy in a subsequent release.</p>\n<p>&mdash; Erick Danzer (@ErickDanzer) <a href="https://twitter.com/ErickDanzer/status/836315264002232321">February 27, 2017</a></p></blockquote>\n<p></p>\n<p>Users are strongly encouraged to update <a href="https://wordpress.org/plugins/nextgen-gallery/">NextGEN Gallery</a> to version 2.1.79 as soon as possible.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 27 Feb 2017 23:05:31 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:28;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:121:"WPTavern: Linus Torvalds Shares Lessons from 25 Years of Open Source Project Maintainership, Decries Tech Innovation Hype";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66408";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:131:"https://wptavern.com/linus-torvalds-shares-lessons-from-25-years-of-open-source-project-maintainership-decries-tech-innovation-hype";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:6230:"<p><a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2017/02/linus-torvalds-open-source-summit.png?ssl=1"><img /></a></p>\n<p>Linux creator Linus Torvalds joined Jim Zemlin, executive director of the Linux Foundation, on stage at the <a href="http://events.linuxfoundation.org/events/open-source-leadership-summit" target="_blank">Open Source Leadership Summit</a> for a candid conversation on maintaining open source projects. After 25 years of maintaining the Linux kernal, Torvalds has developed a network of trust that enables the project to iterate quickly with its 2.5 month release cycle.</p>\n<p>The current pace of Linux development sees 10K lines of code added, 8K lines subtracted, and 1800 lines modified every single day. Torvalds described how Linux contributors learned to modularize the code and development model so they can accomplish more in parallel, while working independently. He used to read through all the patches but quickly found himself becoming a bottleneck to progress. Ensuring code quality on the project is no longer about micromanaging all the patches but about finding the people Torvalds can trust.</p>\n<p>&#8220;We have a very strong network and that&#8217;s why we can have 1,000 people involved in every release,&#8221; Torvalds said. &#8220;There&#8217;s this whole human potential there that we use very extensively to make sure the process works. And it&#8217;s taken 25 years to get to where we are on a process level, too.&#8221;</p>\n<p>Torvalds described how the project revolves around individual contributors building a trusted reputation with maintainers and how one moves from casual contributor status to become part of the network of trust.</p>\n<p>&#8220;When people move between companies, the trust does not stay with the company,&#8221; Torvalds said. &#8220;The trust stays with the person. Obviously people do not stay around forever. People come and go. One of the reasons people sometimes think it&#8217;s hard to get into the kernel, is because you think you can just come in and shoot off a patch and go away, but that&#8217;s not how it works. What really takes time is to shoot off a lot of small patches until you reach the point where the maintainers trust you and at that point you have become something more than the guy who sends patches. You&#8217;ve become part of the whole network of trust.&#8221;</p>\n<p>Increasing levels of trust among contributors allows maintainers to oversee a rapid pace of development. Ten years ago, when Torvalds wanted to move an 8-week release schedule, he said everyone knew he was pushing for something unrealistically short. They have been cranking out releases every 2.5 months since then and Torvalds said it &#8220;solved so many things we didn&#8217;t even know needed to be solved.&#8221; Linux maintainers found their way to a successful development model by experimenting until it clicked.</p>\n<p>&#8220;If you want to do something new, something that is really pushing the envelope, nobody can really say &#8216;This is the way to do it,''&#8221; Torvalds said. &#8220;What you need to do is a lot of trial and error. I often compare software development to biological processes where really it is evolution. It is not intelligent design. I&#8217;m there in the middle of the thing and I can tell you, it is absolutely not intelligent design. You have a lot of people with ideas of where things need to go and then you need to have a marketplace where you can try them out. And that&#8217;s what open source allows &#8211; all these different groups to go off, do their own thing, and then come back and say I did this, and it actually worked.&#8221;</p>\n<p>Zemlin asked him if he ever experienced an &#8220;a-ha moment&#8221; where he realized that Linux was much bigger than what he thought he started. Torvalds said that although a couple of moments have taken him by surprise, the biggest moment was six months after releasing it when it went past being a personal project. He suddenly didn&#8217;t even know the people sending him patches. Twenty five years later, it&#8217;s the people doing the work who still inspire him.</p>\n<p>&#8220;I&#8217;m a huge believer in the 99% perspiration, 1% inspiration thing,&#8221; Torvalds said. &#8220;The innovation that this industry talks about so much is bullshit. Anybody can innovate. Don&#8217;t do this big, &#8216;Think different&#8217; innovation thing. Screw that; it&#8217;s meaningless. 99% of it is &#8216;Get the work done.&#8217; That&#8217;s my least favorite part of the technology news cycle: the constant innovation and new ideas, &#8216;<em>This will revolutionize</em>,&#8217; all that hype &#8211; that&#8217;s not where the real work is. The real work is in the details.&#8221;</p>\n<p>Not all open source projects could be successful with the same model and leadership that Torvalds has brought to Linux development, but the kernel is arguably one of the most active and successful GPL-licensed projects. Zemlin noted that nearly 900 organizations participate in all the different Linux Foundation programs, creating code in almost every aspect of computing from mobile phones to cars to home appliances. It wouldn&#8217;t be possible without Torvalds&#8217; laser focus on continuing the work he started.</p>\n<p>&#8220;I&#8217;m obviously one of those people who likes to concentrate on one project,&#8221; Torvalds said. &#8220;I don&#8217;t like flitting from one idea to another. You need the people who just flutter about and come up with ideas, but they&#8217;re not the really useful ones. They end up being the ones who maybe give the ideas to the ones doing the work. What anybody should take away from this talk &#8211; the people who actually do the work are the ones you should really listen to. These days I don&#8217;t actually do the work anymore &#8211; I merge other people&#8217;s work. But I would like conferences, too, to be less about the visionary innovation thing and more about the day-to-day what are my problems and how do I want to solve them.&#8221;</p>\n<p>Check out the video below to watch the full session with Linus Torvalds and Jim Zemlin:</p>\n<div class="embed-wrap"></div>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 27 Feb 2017 20:15:24 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:29;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:84:"WPTavern: Learn How to Find and Exploit XSS Vulnerabilities with Google’s XSS Game";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66571";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:92:"https://wptavern.com/learn-how-to-find-and-exploit-xss-vulnerabilities-with-googles-xss-game";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3105:"<p>In 2016, Acunetix, a UK-based security firm, found that <a href="http://www.acunetix.com/blog/articles/33-websites-webapps-vulnerable-xss/" target="_blank">33% of websites and web apps are vulnerable to XSS</a>. This number is down 5% from the company&#8217;s findings for the previous year, but it&#8217;s still one of the most common vulnerabilities. In fact, every WordPress security release for the past year has included patches for <a href="https://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank">cross-site scripting</a> (XSS) vulnerabilities, including 4.5.2, 4.5.3, 4.6.1, 4.7.1, 4.7.2, and many other previous releases.</p>\n<p>Google has created a fun and educational <a href="https://xss-game.appspot.com/" target="_blank">XSS game</a> that teaches new bug hunters how to find and exploit XSS vulnerabilities. Each challenge teaches students how to inject a script to pop up an alert() within the training application. The first few levels are fairly easy and it gets progressively more difficult.</p>\n<p><a href="https://i2.wp.com/wptavern.com/wp-content/uploads/2017/02/xss-game-level-1.png?ssl=1"><img /></a></p>\n<p>It was designed for developers who work on web apps but do not specialize in security. Google&#8217;s goal with the game is to help developers get better at recognizing the vulnerabilities in their own code:</p>\n<blockquote><p>This security game consists of several levels resembling real-world applications which are vulnerable to XSS &#8211; your task will be to find the problem and attack the apps, similar to what an evil hacker might do. </p>\n<p>XSS bugs are common because they have a nasty habit of popping up wherever a webapp deals with untrusted input. Our motivation is to highlight common coding patterns which lead to XSS to help you spot them in your code.</p></blockquote>\n<p>The intro to the game tempts new recruits to hone their skills with promises to pay mercenaries up to <a href="https://www.google.com/about/appsecurity/reward-program/index.html#rewards" target="_blank">$7,500 for discovering XSS bugs</a> in the Google&#8217;s most sensitive products. It gives a nice introduction to common attack vectors for XSS vulnerabilities and congratulates winners with a cake and a <a href="http://Google''s application security resource" target="_blank">link to more in-depth XSS documentation</a> from Google&#8217;s collection of application security resources.</p>\n<p><a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2017/02/xss-game-cake-complete.png?ssl=1"><img /></a></p>\n<p>The <a href="https://xss-game.appspot.com/" target="_blank">XSS game</a> has been around for a few years and provides a fun way to start your XSS learning if you have a few minutes over the weekend. With the constant stream of security updates for WordPress core, plugins, and themes, it&#8217;s good to get a basic understanding of what many of these patches are for. After a little bit of study and practice, you may be able to find XSS vulnerabilities in applications and help make the internet more secure.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 25 Feb 2017 19:31:21 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:30;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:63:"Post Status: Running a successful regional agency, with Ben May";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"https://poststatus.com/?p=34480";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:66:"https://poststatus.com/running-successful-regional-agency-ben-may/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1657:"<p>Welcome to the Post Status <a href="https://poststatus.com/category/draft">Draft podcast</a>, which you can find <a href="https://itunes.apple.com/us/podcast/post-status-draft-wordpress/id976403008">on iTunes</a>, <a href="https://play.google.com/music/m/Ih5egfxskgcec4qadr3f4zfpzzm?t=Post_Status__Draft_WordPress_Podcast">Google Play</a>, <a href="http://www.stitcher.com/podcast/krogsgard/post-status-draft-wordpress-podcast">Stitcher</a>, and <a href="http://simplecast.fm/podcasts/1061/rss">via RSS</a> for your favorite podcatcher.</p>\n<p><span>In this episode, Brian interviews Ben May to talk about running <a href="https://thecode.co/">The Code Company</a>, a semi-remote agency based in Queensland, Australia. The Code Company works primarily with long term clients and repeat work, and they’ve grown from just Ben to a team of 11 almost entirely by referrals for new customers.</span></p>\n<p><a href="https://audio.simplecast.com/61169.mp3">https://audio.simplecast.com/61169.mp3</a><br />\n<a href="https://audio.simplecast.com/61169.mp3">Direct Download</a></p>\n<h3>Links</h3>\n<ul>\n<li><a href="https://thecode.co/">The Code Company</a></li>\n</ul>\n<h3>Sponsor: WooCommerce</h3>\n<p><span>This episode of the Draft podcast is sponsored by <a href="https://woocommerce.com/">WooCommerce</a>. WooCommerce makes the most widely used eCommerce platform on the web, and has the power and flexibility you need to power your store. For more information on how to run your store with WordPress and WooCommerce, check out <a href="https://woocommerce.com/">their website</a> and thank you to WooCommerce for being a Post Status partner. </span></p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 25 Feb 2017 18:41:29 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Katie Richards";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:31;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:71:"WPTavern: FOSSA Raises $2.2M to Automate Open Source License Compliance";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66487";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:81:"https://wptavern.com/fossa-raises-2-2m-to-automate-open-source-license-compliance";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4631:"<p>Kevin Wang and his team at <a href="http://fossa.io/" target="_blank">FOSSA</a> have carved out a niche for themselves in the open source product space with the launch of their license compliance and dependency analysis tool. The company <a href="https://medium.com/fossa/announcing-fossa-public-beta-funding-8cf56cf8ebc6#.3titvmvwe" target="_blank">announced a $2.2 million seed round</a> this week after completing a year-long private beta period with Fortune 500 companies. FOSSA continuously scans dependencies and offers reports at each commit to help companies meet the legal obligations of compliance as they are incorporating open source libraries.</p>\n<p>The <a href="http://fossa.io/pricing/" target="_blank">public beta</a> is now free and open to anyone, offering support for up to 5 public/private repos and scanning three levels deep with open source reports. A $499/repo per month commercial option is also available with unlimited scan depth and customizable open source reports.</p>\n<p>&#8220;It’s mind-boggling that in 2017, software companies don’t really know what’s in their code,&#8221; Wang said. &#8220;90% of it now comes from third parties like open source (OSS) codebases. Although it sounds trivial, it’s actually really difficult to keep track of what your developers use. Most of this code isn’t explicitly included — instead it’s brought in automatically by complex tool behavior or one of the million ways developers <a href="https://medium.com/fossa/you-cant-get-around-code-scanning-if-you-care-about-open-source-licenses-2db1fde43fb5#.pb9mtykaf" target="_blank">casually share code</a>.&#8221;</p>\n<p>FOSSA can detect license and policy violations and unlicensed dependencies before an expensive mistake is fully integrated into a project. The real-time feedback forces developers to consider how they are using the libraries they are building into their software.</p>\n<p><a href="https://i1.wp.com/wptavern.com/wp-content/uploads/2017/02/fossa-example.jpeg?ssl=1"><img /></a></p>\n<p>Competitors like <a href="https://www.whitesourcesoftware.com/" target="_blank">WhiteSource</a> and <a href="https://www.blackducksoftware.com" target="_blank">Black Duck Software</a>, which offer open source risk management tools, detect and display licenses for components and dependencies for applications but seem more focused on bugs and vulnerability reporting. FOSSA is solely focused on OSS license compliance and automating disclosure and attribution.</p>\n<p>Compliance is becoming increasingly difficult as developers can easily execute a few commands and import dozens of npm modules that inherit licensing obligations from a myriad of different sources. Even governments and large companies with plenty of resources struggle to keep track of all the open source requirements of the software they are using.</p>\n<p>In 2013, <a href="https://www.techdirt.com/articles/20131018/13291924928/healthcaregov-violates-open-source-license.shtml" target="_blank">Healthcare.gov violated an open source license</a> when it used the DataTables jQuery plugin without the required attribution. Last year, <a href="http://venturebeat.com/2016/05/10/oracle-vs-google-in-9-billion-retrial-over-use-of-java-in-android/" target="_blank">Google was embroiled in a court battle with Oracle</a> over the use of Java in Android.</p>\n<p>A tool like FOSSA could have helped Wix catch its <a href="https://wptavern.com/wix-removes-gpl-licensed-wordpress-code-from-mobile-app-forks-original-mit-library" target="_blank">violation of the GPL in 2016</a> when the company used GPL-licensed code from the WordPress mobile app and distributed it in its proprietary app. FOSSA aims to catch licensing issues before they become expensive problems for developers to rework and lawyers to settle.</p>\n<p>A few years before beginning work on FOSSA, Wang built <a href="https://tldrlegal.com/" target="_blank">tl;drLegal</a>, a site that explains software licenses in plain English. The free resource received backing from the Open Source Initiative and has been used by more than a million developers. Wang said he &#8220;sees FOSSA as an attempt to tackle similar problems in a commercial scenario.&#8221;</p>\n<p>FOSSA will be expanding its pricing options later this year. At the moment, the free beta and the $499/month commercial options leave a gaping hole that excludes smaller organizations. Wang replied to pricing questions on ProductHunt, saying that they are targeting enterprise customers first but plan to introduce more options for small teams and individuals.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 25 Feb 2017 00:21:39 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:32;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:92:"WPTavern: Discourse Creates Encouragement Fund to Pay Contributors for Mission Critical Work";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66145";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:103:"https://wptavern.com/discourse-creates-encouragement-fund-to-pay-contributors-for-mission-critical-work";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2486:"<p><a href="https://www.discourse.org">Discourse</a> is free, open-source discussion software created by Jeff Atwood in 2013.&nbsp;In addition to celebrating its fourth birthday, the team <a href="https://blog.discourse.org/2017/02/the-discourse-encouragement-fund/">announced</a> the Discourse Encouragement Fund. The fund allows the development team to pay contributors for critical work.</p>\n<p>In the course of a year, Discourse has paid 16 different developers a total of $17,000 to work on tasks. All of their work is open source and two of the contributors&nbsp;<a href="https://blog.discourse.org/2017/02/discourses-fourth-birthday/">joined the team</a> as full-time employees.</p>\n<p>Discourse&nbsp;shared its 7-step process for rewarding contributors and the one that&nbsp;sticks out to me is number four: &#8220;We choose who, what and when.&#8221;</p>\n<p>&#8220;At first we tried to put tasks &#8216;up for grabs&#8217;, but this method didn’t work too well,&#8221; Erlend Sogge Heggen, Community Advocate at Discourse said. &#8220;You end up with multiple takers and you have to pick one and let others down.&#8221;</p>\n<p>&#8220;Instead, we approach developers individually, one at a time. Since we’re an open source project we know fairly well who’s capable of what, so we’ll tap our top prospect, present the task and &#8216;bounty&#8217;, and get a yes or no.</p>\n<p>&#8220;If no, we move on to the next good prospect. If we run out of good prospects for a specific task, we’ll either do it ourselves or put it on hold.&#8221;</p>\n<p>Heggen says the program has worked well thus far and will continue indefinitely. &#8220;As much as we’d like to, we can’t put every one of our contributors on a steady payroll,&#8221; he said.</p>\n<p>&#8220;What we can do is remind them that the work they’re doing is valuable, in every sense of the word, and that there is money to be made from specializing in Discourse.&#8221;</p>\n<p>The program is funded by customers who purchase <a href="https://discourse.org/buy">hosting plans</a>, &#8220;The general idea is that paying customers help improve Discourse, both for themselves, and for the greater open source community at large,&#8221; Atwood said.</p>\n<p>Introducing money into an open source project can be <a href="http://david.heinemeierhansson.com/2013/the-perils-of-mixing-open-source-and-money.html">risky </a>but so far, Discourse has found a way to make it work.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 24 Feb 2017 19:20:08 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:33;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:53:"WPTavern: Cloudflare Memory Leak Exposes Private Data";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66488";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:64:"https://wptavern.com/cloudflare-memory-leak-exposes-private-data";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5730:"<p><a href="https://www.cloudflare.com/">Cloudflare</a>, a content distribution network used by many popular sites, <a href="https://blog.cloudflare.com/incident-report-on-memory-leak-caused-by-cloudflare-parser-bug/">published detailed information</a> about a security vulnerability that leaked user information, some of which was private, including passwords, private messages, etc. The vulnerability was <a href="https://bugs.chromium.org/p/project-zero/issues/detail?id=1139#c19">discovered</a> by security researcher <a href="https://twitter.com/taviso">Tavis Ormandy,</a> a member of Google&#8217;s <a href="https://googleprojectzero.blogspot.co.uk/">Project Zero</a> team.</p>\n<p>The issue stems from a memory leak in an HTML parser named cf-html that was created to replace an older parser based on <a href="https://en.wikipedia.org/wiki/Ragel">Ragel.</a></p>\n<p>&#8220;It turned out that the underlying bug that caused the memory leak had been present in our Ragel-based parser for many years but no memory was leaked because of the way the internal NGINX buffers were used,&#8221; John Graham-Cumming, <span class="st">Chief Technology Officer at Cloudflare</span> said. &#8220;Introducing cf-html subtly changed the buffering which enabled the leakage even though there were no problems in cf-html itself.&#8221;</p>\n<p>The earliest date information was leaked was September 22nd, 2016 when <a href="https://support.cloudflare.com/hc/en-us/articles/227227647-How-do-I-use-Automatic-HTTPS-Rewrites-">Automatic HTTP Rewrites</a> were enabled. This was the first of three features introduced that used the parser. The other two are <a href="https://support.cloudflare.com/hc/en-us/articles/200170016-What-is-Email-Address-Obfuscation-">email obfuscation</a> and <a href="https://support.cloudflare.com/hc/en-us/articles/200170036-What-does-Server-Side-Excludes-SSE-do-">Server-side Excludes</a>.</p>\n<p>The greatest period of impact was between February 13th and February 17th. The leaked information ended up in publicly available cached webpages. Cloudflare worked with major search engine providers to have the cached pages scrubbed before publicly announcing details of the bug.</p>\n<p>&#8220;With the help of Google, Yahoo, Bing and others, we found 770 unique URIs that had been cached and which contained leaked memory,&#8221; Graham-Cumming said. &#8220;Those 770 unique URIs covered 161 unique domains. The leaked memory has been purged with the help of the search engines. We also undertook other search expeditions looking for potentially leaked information on sites like Pastebin and did not find anything.&#8221;</p>\n<h2>1Password is Not Affected</h2>\n<p>Earlier reports indicated that 1Password was among the sites affected. Jeffrey Goldberg, a 1Password employee, <a href="https://blog.agilebits.com/2017/02/23/three-layers-of-encryption-keeps-you-safe-when-ssltls-fails/">assured users</a> that the Cloudflare data leak does not affect 1Password.</p>\n<p>&#8220;At the moment, we want to assure and remind everyone that we designed 1Password with the expectation that SSL/TLS can fail,&#8221; Goldberg said. &#8220;Indeed it is for incidents like this that we deliberately made this design.&#8221;</p>\n<p>&#8220;No secrets are transmitted between 1Password clients and 1Password.com when you sign in and use the service. Our sign-in uses <a href="https://en.wikipedia.org/wiki/Secure_Remote_Password_protocol">SRP</a>, which means that server and client prove their identity to each other without transmitting any secrets. This means that users of 1Password do not need to change their Master Passwords.&#8221;</p>\n<h2>Change Your Passwords</h2>\n<p><a href="https://twitter.com/thesquashsh">Nick Sweeting</a> has used a number of web scrapers to compile a list of sites that use Cloudflare. The list is available on <a href="https://github.com/pirate/sites-using-cloudflare">GitHub</a> and currently contains 4,287,625 domains that are possibly affected. Popular domains in the list include:</p>\n<ul>\n<li>authy.com</li>\n<li>coinbase.com</li>\n<li>digitalocean.com</li>\n<li>patreon.com</li>\n<li>bitpay.com</li>\n<li>news.ycombinator.com</li>\n<li>producthunt.com</li>\n<li>medium.com</li>\n<li>4chan.org</li>\n<li>yelp.com</li>\n<li>okcupid.com</li>\n</ul>\n<p>The bug also affects mobile apps as HTTP header data for apps such as Discord, FitBit, and Uber have been discovered in search engine caches. NowSecure <a href="https://www.nowsecure.com/blog/2017/02/23/cloudflare-cloudbleed-bugs-impact-mobile-apps/">published a list</a> that includes 200 iOS apps that use Cloudflare services.</p>\n<p>Users are strongly encouraged to change their passwords regardless if a site uses Cloudflare or not. Those who use Cloudflare should generate new API keys and consider forcing a password change to users.</p>\n<p>Two factor authentication should be enabled where possible so that the password is not the only credential needed to access an account. Mobile users should log out of mobile applications and log back in to create a new active token. To force all users on a WordPress site to logout and re-login, <a href="https://wpstudio.com/cloudflare-security-precaution-alert/">WPStudio recommends</a> changing the salt keys in wp-config.php.</p>\n<p>Although major search engines are actively scrubbing cached pages, the leaks have been occurring for at least four months. There&#8217;s no telling who may have already scraped those pages and archived the data. There&#8217;s also the possibility that someone discovered the vulnerability before Ormandy and has been parsing cached pages for months. This is why it&#8217;s important that at a minimum, you change your passwords.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 24 Feb 2017 19:03:25 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:34;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:86:"WPTavern: Google’s New Perspective Project Filters Online Comments Based on Toxicity";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66464";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:94:"https://wptavern.com/googles-new-perspective-project-filters-online-comments-based-on-toxicity";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5970:"<a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2017/02/mobile-reading.jpg?ssl=1"><img /></a>photo credit: <a href="https://stocksnap.io/photo/RY5J4XBYJV">Martino Pietropoli</a>\n<p>Online harassment is a hot topic right now, as Twitter&#8217;s perennial battle with trolls heats up, forcing the company to develop new features to combat abuse. Technology companies are scrambling to create solutions that will make their communities safer for users and now Google is taking on the challenge of online harassment as part of its <a href="https://jigsaw.google.com" target="_blank">Jigsaw</a> technology incubator. Jigsaw&#8217;s engineers and researchers tackle geopolitical problems like attacks on free speech, injustice, corruption, and violent extremism.</p>\n<p><a href="https://www.perspectiveapi.com/" target="_blank">Perspective</a> is Jigsaw&#8217;s latest project aimed at improving the comment sections of websites, which can become hotbeds of harassment when left unmoderated. It turns out that eliminating the darker aspects of human behavior, especially when combatting those operating under the cloak of online anonymity, has proven to be an exquisite challenge best suited to the bots.</p>\n<p>The Perspective project uses machine learning to identify and filter comments for toxicity. Its API scores comments based on &#8220;the perceived impact a comment might have on a conversation.&#8221; Publishers can then use that information to offer real-time feedback to commenters and speed up moderation. The <a href="https://www.perspectiveapi.com/" target="_blank">live demo</a> allows readers to filter the comments based on a sliding scale of toxicity that they are willing to engage.</p>\n<p><a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2017/02/google-jigsaw-perspective-project.png?ssl=1"><img /></a></p>\n<p>The Perspective site also includes a Writing Demo that delivers real-time feedback for the toxicity level as you type. The model defines toxic as &#8220;a rude, disrespectful, or unreasonable comment that is likely to make you leave a discussion.&#8221;</p>\n<h3>Developers Can Request Access to the Perspective API and Major Publications are Already Experimenting with It</h3>\n<p>Toxic commenting and trolls are especially rampant on news sites, requiring moderators to be constantly vigilant and ready to neutralize threats to civil discourse. This is why the New York Times employs 14 full-time moderators to manually review the 11,000 comments that come in each day. Despite the efforts of this dedicated team, commenting is only available on 10% of Times articles due to the moderation load.</p>\n<p>As a partner on this project, the New York Times <a href="http://www.nytco.com/the-times-is-partnering-with-jigsaw-to-expand-comment-capabilities/" target="_blank">open sourced 10 years of moderated comment archives</a> to help the Jigsaw team build the machine learning models that will improve conversations on the web. The publication is currently creating an open source moderation tool to expand community discussion to other areas of the Times.</p>\n<p>The Wikimedia Foundation is also <a href="https://meta.wikimedia.org/wiki/Research:Detox" target="_blank">collaborating with Jigsaw</a> to develop tools for automating detection of toxic comments and analyzing their impact in discussions at scale. These tools are aimed at mitigating the personal attacks levied at volunteer editors in an effort to improve overall community health.</p>\n<p>The Perspective project is still in its early days of research and development, but developers can <a href="https://groups.google.com/forum/#!forum/perspective-announce/join" target="_blank">sign up</a> to request an API key. Google will be open sourcing the experiments, models, and research data gained from testing machine learning as a tool for improving online discussion.</p>\n<p>As WordPress powers more than 27% of all websites, a plugin built with the Perspective API could have a major impact on raising the standard of discourse for a large segment of comment-enabled sites. Many publications that might otherwise value thoughtful discussion, have resorted to turning comments off entirely because of the burden of moderation.</p>\n<p>Those who rattle off the tired internet maxim that says &#8220;<em>Never read the comments</em>&#8221; speak to the pervasive toxicity that has invaded online discourse, but they also betray their own fragility in engaging commenters who sabotage discussions with incivility. Readers don&#8217;t always have the emotional energy to deal with rude comments that slipped through moderation. While some may find Reddit-style wild west commenting to be spirited and amusing, there are plenty of others who find it demoralizing.</p>\n<p>One thing I appreciate about the Perspective project&#8217;s demo is that its aim isn&#8217;t to edit or change the comments to be less toxic but rather it offers the reader a way to filter based on the individual&#8217;s comfort level. With clear warnings in place and a default view set on the safer side, the publication is no longer obligated to overly-censor comments for the lowest threshold of offense.</p>\n<p>The Perspective project is experimenting with using machine learning to wrangle the human factor of interacting online. It&#8217;s come to the point that moderating comments and weeding out toxicity has become overwhelming for those trying to run a publication. The most encouraging aspect of this experiment is that Google put engineers, designers, and researchers on this problem because <a href="https://wptavern.com/why-comments-still-matter" target="_blank">comments still matter</a>. This new technology affirms the importance of public discourse on the web and aims to preserve comments as a safe place for conversations. I&#8217;m interested to see what WordPress developers can build with the Perspective API once it is available.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 24 Feb 2017 04:17:34 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:35;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:69:"WPTavern: WordPress Community Summit 2017 Set for June 13-14 in Paris";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66439";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:80:"https://wptavern.com/wordpress-community-summit-2017-set-for-june-13-14-in-paris";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3561:"<p>WordPress contributor teams are getting ready for the next <a href="https://make.wordpress.org/core/2017/02/23/planning-for-community-summit-2017/" target="_blank">Community Summit</a>, which will be held in Paris leading up to WordCamp Europe on June 13-14. This is the first time the event will be held outside the United States, making it more accessible to European community members who may have been unable to attend previous summits.</p>\n<p>The summit provides an opportunity for those who contribute to WordPress and its surrounding community to tackle difficult topics that require in-person discussion or collaboration. This year the organizing team is <a href="https://wptavern.com/wordpress-community-team-proposes-new-selection-process-for-2017-summit-attendees" target="_blank">trying a new selection process for attendees</a>. Instead of the previous invitation-only system, contributor teams are identifying the challenging issues they want to discuss and then nominating attendees who will represent diverse viewpoints on these particular topics.</p>\n<p>For example, a few <a href="https://make.wordpress.org/core/2017/02/23/planning-for-community-summit-2017/" target="_blank">proposed topics for the core team</a> include discussions about the future of JavaScript in core, how to attract more JavaScript-first developers to build on WordPress, and technology version support policies (PHP, MySQL, browsers, etc.) Theme Review Team contributors have <a href="https://make.wordpress.org/themes/2017/02/18/community-submit-2017/" target="_blank">proposed</a> discussion on how to allow for more experimentation and ways to improve the leadership of the team and the theme author and reviewer experiences.</p>\n<p>Each of the 16 contributor teams tagged in the announcement has until March 3rd to create a list of topics and representatives, including contributors who are willing to help organize the event. An <a href="https://wceurope.polldaddy.com/s/community-summit-2017-call-for-non-active-contributors" target="_blank">application form</a> is open for those who represent other interests within the WordPress community but are not part of one of the contributor teams. The summit will be limited to 180 attendees (the capacity for the venue).</p>\n<p>The call for sponsors will be published next week, but promotional activities will not be incorporated into the event. The organizing team is also working on finding sponsors to cover travel expenses for contributors who have financial barriers to attending.</p>\n<p>&#8220;The idea of this event sponsorship is about supporting the project and the community,&#8221; summit organizer Rocio Valdivia said. &#8220;So, there aren’t levels of exposure associated with each price level other than the label that will show up in the make/summit p2 page for it and on the sidebar. We’ll add links to their sites, logos, and a huge thanks at event to all sponsors, regardless how much they’ve sponsored. The sponsorship levels are about the desire and financial ability of the companies to contribute to the summit, not about a marketing thing.&#8221;</p>\n<p>The summit is closed to the public and the press, but there is a decent level of transparency around the topics attendees plan to discuss if you peruse the make.wordpress.org blogs. If contributor teams publish notes from the discussions as they have in previous years, the wider community will be able to follow along to see if the summit precipitates meaningful progress for the project.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 23 Feb 2017 22:05:20 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:36;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:51:"Akismet: Akismet WordPress Plugin 3.3 Now Available";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://blog.akismet.com/?p=1923";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:65:"https://blog.akismet.com/2017/02/23/akismet-wordpress-plugin-3-3/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1366:"<p>Version 3.3 of <a href="http://wordpress.org/plugins/akismet/">the Akismet plugin for WordPress</a> is available.</p>\n<p><a href="https://akismet.files.wordpress.com/2017/02/akismet-3-3-dashboard.png"><img /></a> In addition to a handful of bug fixes, version 3.3 refreshes the Akismet settings page design and adds an improved first-run experience. Now, when you activate Akismet for the first time, it will offer to check your current Pending queue for spam, and for especially large pending queues, it will show a progress indicator.</p>\n<p>For full details on all of the changes since version 3.2, see <a href="https://plugins.trac.wordpress.org/log/akismet/trunk?rev=1602266&stop_rev=1501241&verbose=on">the changelog</a>.</p>\n<p>To upgrade, visit the Updates page of your WordPress dashboard and follow the instructions. If you need to download the plugin zip file directly, links to all versions are available in <a href="http://wordpress.org/plugins/akismet/">the WordPress plugins directory</a>.</p><br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/akismet.wordpress.com/1923/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/akismet.wordpress.com/1923/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=blog.akismet.com&blog=116920&post=1923&subd=akismet&ref=&feed=1" width="1" height="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 23 Feb 2017 18:08:16 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:17:"Christopher Finke";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:37;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:81:"WPTavern: WPWeekly Episode 264 – REST API, Disqus, and Happy Birthday Discourse";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:58:"https://wptavern.com?p=66421&preview=true&preview_id=66421";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:86:"https://wptavern.com/wpweekly-episode-264-rest-api-disqus-and-happy-birthday-discourse";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4422:"<p>In this episode, Marcus Couch and I discuss the news of the week. We introduce a new segment of the show called &#8220;What&#8217;s on WordPress.tv?&#8221; where we highlight three videos to check out. We also share details of <a href="https://central.wordcamp.org/schedule/">upcoming WordCamps </a>in the month of March.</p>\n<h2>Stories Discussed:</h2>\n<p><a href="https://halfelf.org/2017/case-rest-api/">A Case for REST API</a><br />\n<a href="https://wptavern.com/buddypress-2-8-boosts-minimum-php-requirement-adds-twenty-seventeen-companion-stylesheet">BuddyPress 2.8 Boosts Minimum PHP Requirement, Adds Twenty Seventeen Companion Stylesheet</a><br />\n<a href="https://wptavern.com/disqus-hits-sites-with-unwanted-advertising-plans-to-charge-large-publishers-a-monthly-fee-to-remove-ads">Disqus Hits Sites with Unwanted Advertising, Plans to Charge Large Publishers a Monthly Fee to Remove Ads</a><br />\n<a href="https://wptavern.com/how-to-check-if-installed-plugins-are-no-longer-in-the-plugin-directory">How to Check if Installed Plugins Are No Longer in the Plugin Directory</a><br />\n<a href="https://blog.discourse.org/2017/02/discourses-fourth-birthday/">Happy Fourth Birthday Discourse</a></p>\n<h2>What&#8217;s On WordPress.TV?</h2>\n<h3>WordCamp Manila 2016</h3>\n<p><a href="http://wordpress.tv/2017/02/12/andrew-dela-serna-how-we-work-in-automattic/">Andrew dela Serna: How We Work in Automattic</a></p>\n<p>Learn what it’s like to work at Automattic, the tools they use, our culture, the people, how to apply and what’s next for the company.</p>\n<h3>WordCamp Waukesha 2017</h3>\n<p><a href="http://wordpress.tv/2017/02/09/ryan-erwin-digital-marketing-strategy-and-seo/">Ryan Erwin: Digital Marketing, Strategy and SEO</a></p>\n<p>Ryan Erwin discussed digital marketing strategy for business as it relates to on and off page SEO, content marketing, and conversion optimization. He reviews how to plan, implement, and analyze your strategic initiatives.</p>\n<h3>WordPress Community Interview Series</h3>\n<p><a href="http://wordpress.tv/2017/02/20/wordpress-community-interview-with-isabelle-garcia/">WordPress Community Interview With Isabelle Garcia</a></p>\n<p>Isabelle Garcia is a front-end web developer and social media geek. She is a “Digital Nomad” and travels the world working remotely. She has no fixed base, no office. Isabel likes to frequent local libraries, not to borrow books but to take advantage of the quiet atmosphere.</p>\n<p>While other digital nomads meet at coffee shops or co-working spaces, she likes to spend entire days and even weekends in the common areas and desks of public libraries.</p>\n<h2>Plugins Picked By Marcus:</h2>\n<p><a href="https://wordpress.org/plugins/really-simple-click-to-call/">Really Simple Click To Call Bar</a> adds a customizable click-to-call bar to the bottom of the browser window on mobile devices. It enables users to easily call you from their phone and automatically adds events if you&#8217;re using Google Analytics Universal. Perfect for small businesses like restaurants, retail stores, or any lead generation that relies on phone calls.</p>\n<p><a href="https://wordpress.org/plugins/html-table/">Responsive tables</a> lets you create and display tables easily on your website with shortcodes. HTML tables can be used to display pricing, comparisons, DBMS tables and much more.</p>\n<p><a href="https://wordpress.org/plugins/wp-demo-buddy/">WP Demo Buddy</a> instantly creates a dedicated expiring Demo/Trial instance of WordPress with any WordPress Plugin and Theme to each of your website visitors. Your website visitors can test drive your plugins securely before they buy or test drive the plugins you review/sell on your website.</p>\n<h2>WPWeekly Meta:</h2>\n<p><strong>Next Episode:</strong> Wednesday, March 1st 3:00 P.M. Eastern</p>\n<p><strong>Subscribe To WPWeekly Via Itunes: </strong><a href="https://itunes.apple.com/us/podcast/wordpress-weekly/id694849738" target="_blank">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via RSS: </strong><a href="https://wptavern.com/feed/podcast" target="_blank">Click here to subscribe</a></p>\n<p><strong>Subscribe To WPWeekly Via Stitcher Radio: </strong><a href="http://www.stitcher.com/podcast/wordpress-weekly-podcast?refid=stpr" target="_blank">Click here to subscribe</a></p>\n<p><strong>Listen To Episode #264:</strong><br />\n</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 22 Feb 2017 22:29:58 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:38;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:97:"WPTavern: Zerif Lite Returns to WordPress.org after 5-Month Suspension and 63% Decline in Revenue";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=64347";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:107:"https://wptavern.com/zerif-lite-returns-to-wordpress-org-after-5-month-suspension-and-63-decline-in-revenue";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:7365:"<p><a href="https://i0.wp.com/wptavern.com/wp-content/uploads/2016/09/zerif-lite.png?ssl=1"><img /></a></p>\n<p>In October 2016, Zerif Lite was <a href="https://wptavern.com/zerif-lite-suspended-from-wordpress-theme-directory-300k-users-left-without-updates">suspended from the WordPress Themes Directory</a> after failure to comply with the Theme Review Team&#8217;s guidelines. The suspension left 300,000 users (including those using Zerif Lite child themes) without maintenance and security updates.</p>\n<p>After five months of fixes and several rounds of review, <a href="https://wordpress.org/themes/zerif-lite/" target="_blank">Zerif Lite</a> has returned to the directory with the same functionality but a significantly altered user experience. Users are now required to install a plugin for the features that were previously deemed to be &#8220;faux custom post types,&#8221; violations of the content vs. presentation guideline for WordPress.org-hosted themes. These include small custom content blocks that appear on the homepage for things like team info and testimonials.</p>\n<p>&#8220;We will work on making sure it is all clear for people, but I still don’t understand or agree with the requirement,&#8221; ThemeIsle CEO Ionut Neagu said. &#8220;I think <a href="http://torstenlandsiedel.de/2017/02/21/questions/" target="_blank">Torsten phrased it better</a>: &#8216;Why do the guidelines of the Theme Review Team forbid the usage of Shortcodes/CPTs/etc. due to problems when switching themes, if, in the meantime, the Plugin Review Team explicitly allows those plugins which only work for one theme, which brings the entire idea (function remains intact after switching themes) to absurdity?''&#8221;</p>\n<p>At the time of suspension, Neagu estimated that Zerif Lite&#8217;s unavailability on WordPress.org would diminish the company&#8217;s revenue by 50%.</p>\n<p>&#8220;What was interesting is that revenue continued to decrease for all those months and we are now at around $45k/month instead of $120k,&#8221; Neagu said. &#8220;That revenue won’t be back as the theme is live. A big part of success/sales before was that we had a great demo, a very easy-to-set-up theme, and ‘better’ upsells.&#8221;</p>\n<p>Neagu said the company has seen no significant increase in revenue during the first few days the theme has been back in the directory. His team has considered releasing the theme under a completely different name but is committed to supporting the current version for at least the next two years. Meanwhile, they have built newer themes like <a href="https://themeisle.com/themes/hestia/" target="_blank">Hestia</a> to be capable of importing Zerif content seamlessly into its design to avoid the lock-in effect.</p>\n<p>Neagu said the experience of losing so much revenue has not changed the company&#8217;s strategy for distribution. They will continue to add new themes to WordPress.org but Neagu said they would be lucky to add two per year, given the limitation of one theme per account and a 6-7 month waiting period in the queue.</p>\n<p>Zerif Lite&#8217;s suspension was a controversial decision. Many who commented on our first <a href="https://wptavern.com/zerif-lite-suspended-from-wordpress-theme-directory-300k-users-left-without-updates" target="_blank">post</a> about the issue were pleased to see the Theme Review Team finally throw the book at ThemeIsle after the company had been allowed to skirt the requirements for more than a year without resolving the issues. Others saw the situation as an opportunity to re-examine the directory&#8217;s requirements.</p>\n<p>&#8220;Perhaps the rules surrounding theme submission to the repo should be relaxed for everyone – limited only to security concerns perhaps, let the market sort out the rest,&#8221; <a href="https://twitter.com/bradley_kirby" target="_blank">Bradley Kirby</a>, author of the Wallace theme, said. &#8220;Is it possible that absolute data portability isn’t an expectation or desire from most end users? That they expect to do some manual porting of data when they change themes? That they prize other features like site design and built-in functionality over something like data portability?&#8221;</p>\n<p>Zerif Lite has been at the center of the Theme Review Team&#8217;s discussions regarding data portability for the past two years after the team began <a href="https://wptavern.com/wordpress-theme-review-team-is-cracking-down-on-violations-of-the-presentation-vs-functionality-guideline" target="_blank">cracking down on violations of the Presentation vs. Functionality guideline</a>. The spotlight shined on Zerif Lite during that discussion eventually culminated in its suspension, as Neagu was forced to comply or have his theme removed.</p>\n<p>&#8220;I think our goal should just be to provide the best experience for the users, not just to comply without thinking about what users want,&#8221; Neagu said. &#8220;At least this is my goal &#8211; to build the best products that will help people to build their sites.&#8221;</p>\n<h3>The Risks of Using WordPress.org as a Primary Distribution Channel</h3>\n<p>WordPress.org is arguably the most effective way for a theme company to reach mass quantities of users with a freemium theme. The directory lends a great deal of credibility to its listings because of the stringent guidelines and rigorous review process. Failure to comply with these guidelines ultimately ended up sinking ThemeIsle&#8217;s flagship theme and Neagu is not optimistic that the previous revenue will return.</p>\n<p>&#8220;During this whole time, a thing that caught me off guard was some of people’s comments wondering if it was even safe to use a theme that was removed from the repo in the first place,&#8221; Neagu said. &#8220;I mean, in the user’s mind, and understandably so, there must have been something wrong with the theme since it got removed, right?&#8221; He said this experience caused him to see things differently.</p>\n<p>&#8220;Being listed in the official repository doesn’t only get you downloads and/or sales, but also trust and credibility in the eyes of your potential users,&#8221; Neagu said. &#8220;Unfortunately, most of the users who install themes directly via their WP dashboards are not very experienced, and they have no reason to research the web a bit more to find out what happened to the theme they heard about. In other words, if someone types &#8216;zerif&#8217; into the search field in their dashboard and they find nothing, they just move on.&#8221;</p>\n<p>Neagu said that in spite of differences Themeisle has had with the Theme Review Team, the company will continue to contribute and be part of the community. The theme&#8217;s suspension, re-working, and re-installment is an interesting case of what can happen when a company&#8217;s sales strategy is at odds with WordPress.org&#8217;s requirements.</p>\n<p>&#8220;Our products are focused towards beginners, being super easy to setup with built-in demo content, so they are not niched products that we can distribute in different communities,&#8221; Neagu said.</p>\n<p>&#8220;It is obvious that relying on a third-party marketplace is the worst scenario, but WordPress.org is the default solution: if you want to reach a large mass of people, you need to be there.&#8221;</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 22 Feb 2017 21:47:29 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:39;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:48:"BuddyPress: BuddyPress 2.8.1 Maintenance Release";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:32:"https://buddypress.org/?p=264058";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:68:"https://buddypress.org/2017/02/buddypress-2-8-1-maintenance-release/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:536:"<p>BuddyPress 2.8.1 is now available. This maintenance release fixes four bugs, including two regressions in BuddyPress 2.8.0. See the <a href="https://buddypress.trac.wordpress.org/milestone/2.8.1">Trac milestone</a> or the <a href="https://codex.buddypress.org/releases/version-2.8.1/">official changelog</a> for more details.</p>\n<p>Version 2.8.1 is a recommended update for all BP installations. Update via the WordPress Dashboard, or download manually from <a href="https://wordpress.org/plugins/buddypress/">wordpress.org</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 22 Feb 2017 19:41:02 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"Boone Gorges";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:40;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:115:"WPTavern: WordPress Core Editor Team Publishes UI Prototype for “Gutenberg,” an Experimental Block Based Editor";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=65960";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:119:"https://wptavern.com/wordpress-core-editor-team-publishes-ui-prototype-for-gutenberg-an-experimental-block-based-editor";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3690:"<p>In the past few weeks, the WordPress Core Editor team, <a href="https://wptavern.com/matt-mullenweg-announces-tech-and-design-leads-for-new-focus-based-development-cycle">led by</a> Automattic employees Matías Ventura and Joen Asmussen, have been hard at work creating a new <a href="https://make.wordpress.org/core/2017/01/17/editor-technical-overview/">content creation experience</a>. The team recently <a href="https://wordpress.github.io/gutenberg/">published a UI prototype </a>for Gutenberg, an experimental block based editor. The editor displays content-specific toolbars when an element is selected and provides a way to move blocks up and down.</p>\n<img />Block Based Editor UI Prototype\n<p>While the goal is to reinvent WordPress&#8217; current editor, there&#8217;s no guarantee that the prototype will end up as the final product and is in a high state of flux.</p>\n<p>&#8220;The UI prototype exists mostly to serve as a non-static mockup,&#8221; Asmussen said. &#8220;It&#8217;s like a sandbox we&#8217;re building to test some of our mockups and assumptions, to see if they hold water or not. To that extent, it&#8217;s already been successful in informing us of things that worked well, and not so well.&#8221; The code that powers the editor is made up of about 90% JavaScript.</p>\n<p>One of the concerns in revamping the editor is accessibility. Joe Dolson <a href="https://make.wordpress.org/accessibility/2017/02/17/revising-the-wordpress-editor-gutenberg-and-accessibility/">highlighted this concern</a> in a post on the Make WordPress Accessible site. Dolson notes that the accessibility team will work in tandem with the editor team to make the new editor as accessible as possible.</p>\n<p>&#8220;From an accessibility perspective, this is both an incredible opportunity to build a powerful and flexible experience for all users and an enormous risk that we could end up reducing the effectiveness of the editor for users with disabilities, or require them to use a 2nd-class editor without these enhanced editing capabilities,&#8221; Dolson said.</p>\n<p>&#8220;We in the WordPress accessibility community embrace the challenge of creating a great new experience, and want to assure the community that we are going to do everything we can to make sure that any new editor experience is as accessible as we can possibly make it.&#8221;</p>\n<p>Although the prototype&#8217;s functionality is limited, the team is interested to hear about your experience and expectations with using the editor. Some questions to consider during testing include:</p>\n<ul>\n<li>Talk through each step, what does this do?</li>\n<li>What does this feel like?</li>\n<li>As you use it, what is missing you feel should be there?</li>\n</ul>\n<p>Many users have already <a href="https://make.wordpress.org/design/2017/02/09/initial-editor-blocks-prototype-editor-testing/">shared their experiences</a>, providing valuable insight that is fueling rapid improvements to the <a href="https://github.com/WordPress/gutenberg/">project</a> on<a href="https://github.com/WordPress/gutenberg/"> GitHub</a>.</p>\n<p>The best way to get involved and contribute to this project is to subscribe to the <a href="https://make.wordpress.org/design/">Make WordPress Design</a> blog and provide feedback by commenting on posts. You can also submit pull requests or issues on <a href="https://github.com/WordPress/gutenberg/">GitHub</a>. Weekly meetings dedicated to the Editor component are held on Wednesday at 19:00 CET on <a href="https://make.wordpress.org/chat/">Slack</a> in the <a href="https://make.wordpress.org/design/tag/core-editor/">#core-editor</a> channel.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 22 Feb 2017 18:31:57 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:41;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:34:"HeroPress: A Sense Of True Freedom";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:56:"https://heropress.com/?post_type=heropress-essays&p=1610";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:48:"https://heropress.com/essays/sense-true-freedom/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:9233:"<img width="960" height="480" src="http://20094-presscdn.pagely.netdna-cdn.com/wp-content/uploads/2017/02/022217-1024x512.jpg" class="attachment-large size-large wp-post-image" alt="Pull Quote: At any given time, I am who I want to be, & I''m right where I want to be." /><p>It’s 7:30 in the morning in Rio de Janeiro, Brazil. The hostel’s cat just came to say “Good morning” and I just finished my night shift on the WPMU DEV forum. It’s my third day in Rio after spending the last 40 days in Bogota, Colombia. Traveling is in my blood or at least, it is now.</p>\n<p>I’m a full-time digital nomad and I have been for over a year now.</p>\n<blockquote><p>I’m single, I’m female and because of WordPress, I can travel around the world and work at the same time.</p></blockquote>\n<p>I started using WordPress in 2009, but I like to think that everything started in 2011 when I attended my first WordCamp in Poland. I remember I was extremely shy, scared and bit lost on the first day of WordCamp.</p>\n<p>It was a different world to me or at least in contrast to what I had at home – a small city in South East Poland. It was different because for the first time in a long time since college, I felt like I fit in with everyone there. They were a right fit for me and so was that place.</p>\n<p>Since that first WordCamp, I also attended many more in Poland as well as in other countries. Later, I went on to be the lead organizer of WordPress meetups in Wrocław and two WordCamps in Poland. I was also a speaker for many Polish events and for one WordCamp Paris.</p>\n<p>If not for the WordPress community and the friends I met on that very first WordCamp, I wouldn’t have been able to achieve any of those accomplishments.</p>\n<blockquote><p>But how could I have become a full-time digital nomad, you ask?</p></blockquote>\n<p>In 2015, I was stuck. I had a great, steady job in Wrocław. I was working with WordPress and everything was perfect, at least, that’s what I thought at the time.</p>\n<p>I achieved almost everything that society around me was expecting: a partner, apartment, a great job and the next step would have been getting married and having kids. Suddenly, I was sinking.</p>\n<p>For a year, the only moments where I was truly happy was when I was attending WordCamps and WordPress meetups – when I was with my “tribe”, my friends.</p>\n<p>Then, in May of 2015, something incredible happened: one of my friends sent me a link to a list of 70 companies which offered positions working remotely. Three of them were related to WordPress: Automattic, OnTheGoSystems and Incsub.</p>\n<p>That same day, I feverishly filled out an application for a position as a Support Star at Incsub, the parent company to WPMU DEV.</p>\n<p>After a wait full of agonizing anticipation, I finally got the job and six months later, I bought a one-way ticket to Japan, then one to Australia.</p>\n<blockquote><p>This was just the start of my life as a digital nomad.</p></blockquote>\n<p>Working at WPMU DEV remotely with partial dedicated hours and the rest being flexible allowed me to move and work while traveling.</p>\n<p>The people I work with comprise the best team ever. My boss, Tim, is incredibly supportive and is willing to help when something bad happens. I didn’t need to be worried about my job when my plans suddenly made a turn for the worse, which did happen. When I had to fly back to Poland in the middle of the week due to family emergencies, it wasn’t a problem.</p>\n<p>I always felt safe in the WordPress community and now I’m grateful to also feel safe with the people I work with even though we’re spread out across the globe and across many cultures.</p>\n<p>Even though I’m confident in my choice of being a digital nomad now, that wasn’t always the case. This was especially true since I apparently managed to make quite the big scandal in my hometown because “good girls” don’t run away.</p>\n<p>To my dismay, I was constantly told, “Study hard and you will get a nice, steady job in an office with insurance and a guaranteed retirement.”</p>\n<p>How could I not want that? After all, that’s supposed to be the dream of every woman, right? That’s what I was constantly told, anyway.</p>\n<p>Luckily, my best friend (who I had met at a WordCamp!) was there for me and said, “Don’t let them get to you. You are far away and they can’t hurt you.”</p>\n<p>Since then, I stood with my decision to finally be free and happy.</p>\n<p>Growing up in small city and being interested in computers and IT was not easy to say the least. Those aren’t traditionally considered subjects that interest girls. It also became all the more difficult when I realized this was something I wanted to do and nothing else.</p>\n<p>There weren’t many people around me in my hometown who understood what I wanted to do and even fewer people who would support me. Unfortunately, this is still true. It became tougher when I was diagnosed with heavy bipolar disorder.</p>\n<blockquote><p>At that time, everything sucked. I was lost and hopeless.</p></blockquote>\n<p>Compounding my stress, it was around then that I realized I also suffered from the impostor syndrome – the belief that you don’t know enough about the industry you’re in to be capable of doing your job and that you never will despite anything you do.</p>\n<p>There was an ugly feeling that crept in: I wanted to be somewhere else and I want to be different.</p>\n<p>Fortunately, every time I attended a WordCamp or WordPress meetup, these thoughts would melt away because I felt completely supported.</p>\n<p>It didn’t matter that I’m a girl or that I’m delightfully weird. What did matter was that I was knowledgeable about WordPress, my skills were growing quickly and that I could contribute to the community using my organizational skills.</p>\n<p>During these meetings, I don’t ever remember someone assuming that I’m a graphic designer because I’m a girl and “girls know color.” There’s nothing wrong with being a graphic designer, but assuming someone is based solely on their gender – there’s definitely something wrong with that.</p>\n<p>In reality, I’m a theme developer and in the WordPress community, that wasn’t unusual.</p>\n<p>It helped me gain confidence in myself and my skills. With that confidence, I found courage to start a life where I’m no longer wanting to be somewhere else or be someone else.</p>\n<blockquote><p>At any given time, I am who I want to be and I’m right where I want to be.</p></blockquote>\n<p>Solo traveling isn’t always peaches and cream or sunshine, lollipops and rainbows everywhere, especially when I’m sick and inevitably alone. All things considered, I wouldn’t swap it out for what many would consider to be a “normal” life – whatever that is – and instead, I think it&#8217;s important for people to do what makes them happy and not just what others expect of them.</p>\n<p>As a digital nomad, I was able to go to WordCamps in Tokyo, Belgrade, the US, Singapore and Vienna. I have met many new people and I have collected incredible memories along the way.</p>\n<p>This year and in many more to come, while others may doubt my choices, I’ll be happy, traveling to more WordCamps and enjoying a sense of true freedom just because I can.</p>\n<div class="rtsocial-container rtsocial-container-align-right rtsocial-horizontal"><div class="rtsocial-twitter-horizontal"><div class="rtsocial-twitter-horizontal-button"><a title="Tweet: A Sense Of True Freedom" class="rtsocial-twitter-button" href="https://twitter.com/share?text=A%20Sense%20Of%20True%20Freedom&via=heropress&url=https%3A%2F%2Fheropress.com%2Fessays%2Fsense-true-freedom%2F" rel="nofollow" target="_blank"></a></div></div><div class="rtsocial-fb-horizontal fb-light"><div class="rtsocial-fb-horizontal-button"><a title="Like: A Sense Of True Freedom" class="rtsocial-fb-button rtsocial-fb-like-light" href="https://www.facebook.com/sharer.php?u=https%3A%2F%2Fheropress.com%2Fessays%2Fsense-true-freedom%2F" rel="nofollow" target="_blank"></a></div></div><div class="rtsocial-linkedin-horizontal"><div class="rtsocial-linkedin-horizontal-button"><a class="rtsocial-linkedin-button" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fheropress.com%2Fessays%2Fsense-true-freedom%2F&title=A+Sense+Of+True+Freedom" rel="nofollow" target="_blank" title="Share: A Sense Of True Freedom"></a></div></div><div class="rtsocial-pinterest-horizontal"><div class="rtsocial-pinterest-horizontal-button"><a class="rtsocial-pinterest-button" href="https://pinterest.com/pin/create/button/?url=https://heropress.com/essays/sense-true-freedom/&media=https://heropress.com/wp-content/uploads/2017/02/022217-150x150.jpg&description=A Sense Of True Freedom" rel="nofollow" target="_blank" title="Pin: A Sense Of True Freedom"></a></div></div><a rel="nofollow" class="perma-link" href="https://heropress.com/essays/sense-true-freedom/" title="A Sense Of True Freedom"></a></div><p>The post <a rel="nofollow" href="https://heropress.com/essays/sense-true-freedom/">A Sense Of True Freedom</a> appeared first on <a rel="nofollow" href="https://heropress.com">HeroPress</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 22 Feb 2017 12:00:21 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:16:"Kasia Świderska";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:42;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:66:"WPTavern: Solving the Mystery of How People Actually Use WordPress";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=65557";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:77:"https://wptavern.com/solving-the-mystery-of-how-people-actually-use-wordpress";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:9727:"<p>I’m in favor of <a href="https://wptavern.com/wordpress-telemetry-proposal-addresses-long-standing-privacy-concerns-as-gdpr-compliance-deadline-looms#comment-208658">WordPress collecting more anonymized usage data</a> that could help make informed decisions on changes or improvements to core, such as tracking changes to the WordPress user interface, which buttons or settings are used most often, etc.</p>\n<p>A good example of when this data could have come in handy is the recent <a href="https://wptavern.com/wordpress-4-7-removes-the-underline-and-justify-buttons-from-the-editor">removal of the justify and underline buttons</a> from the editor in WordPress 4.7. During <a href="https://core.trac.wordpress.org/ticket/27159#comment:82">the discussion</a> on whether they should be removed or not, a number of people questioned if there was any user data available that would indicate how much they’re used and help gauge the impact of removing them.</p>\n<p>The only data available to help make an informed decision was provided by Mel Choyce. Choyce <a href="https://core.trac.wordpress.org/ticket/27159#comment:29">shared statistics</a> from WordPress.com and its variety of editor interfaces that indicated Bold, Italic, and Links are used the most while Lists and Blockquotes are the second most used buttons.</p>\n<p>The Center and Left alignment buttons are used often, but the data doesn’t determine if people are using them to align text or images. Information on which headings are used most was not available. The team did not have any usage data specific to the WordPress core editor.</p>\n<p>In the ticket, Andrew Ozz, who maintains the TinyMCE component, <a href="https://core.trac.wordpress.org/ticket/27159#comment:103" rel="nofollow">chimed in</a> and agreed that good user data is needed.</p>\n<p>In an effort to obtain usage data before removing the buttons, Ozz <a href="https://core.trac.wordpress.org/ticket/27159#comment:104">created a small plugin</a> to perform testing with five existing and first-time users. Interestingly, he discovered that both types of users clicked on the kitchen sink button to display the second row of buttons and didn&#8217;t click the button to hide them again.</p>\n<p>Ozz also shared other results from his limited testing.</p>\n<blockquote><p>I know these test results are extremely limited and cannot be used when making a decision, but they are an indication of what &#8216;real&#8217; testing may reveal. In this case it shows that moving buttons to the bottom row will have no effect on the usage of these buttons as they will still be visible at all times.</p>\n<p>This super limited testing also indicated another (much bigger) problem: somebody mentioned this some time ago (think it was @mor10), around 20% of the WordPress users don’t even know there is a second editor toolbar, and some feel &#8216;pretty stupid&#8217; after discovering it. I think this is bad UX and something that can be fixed easily by having the second toolbar open by default, and fixing it is more important and will improve the UX for these 20% of users a lot.</p></blockquote>\n<p>Imagine how useful it would be for core developers or others if there was usage data like this on a grander scale that could fuel rapid improvements and help discover and eliminate pain points.</p>\n<p>Matt Mullenweg, co-creator of the WordPress project, has <a href="https://core.trac.wordpress.org/ticket/38418">closed the ticket</a> with the Telemetry Proposal as it&#8217;s not within the <a href="https://wptavern.com/state-of-the-word-2016-mullenweg-pushes-calypso-as-future-of-wordpress-interface-proposes-major-changes-to-release-cycle">three project focus areas</a> for 2017.</p>\n<p>&#8220;There is no part of current or potential WP development that is being held back by the lack of this existing, as there are easy and current ways to answer questions with data to the extent it would inform our decisions,&#8221; Mullenweg said.</p>\n<p>Morten Rand-Hendriksen <a href="https://core.trac.wordpress.org/ticket/38418#comment:11">responded to the closure</a> saying that the quantitative user testing falls squarely within the Customizer focus area.</p>\n<p>&#8220;I would argue since the release of the Customizer some years back, it has gone through a multi-year large-scale quantitative user test with incremental tweaks and improvements,&#8221; Rand-Hendriksen said.</p>\n<p>&#8220;This is in line with standard agile development. At this juncture, the Customizer can be considered mature, and moving a mature solution forward requires hard data on usage, use cases, and user needs. This goes beyond standard user testing to large-scale data collection, which is what this ticket aims at addressing.&#8221;</p>\n<h2>Perspective From a WordPress Release Lead</h2>\n<p>There are WordPress core developers who have shown interest in a similar system. At the start of the WordPress 4.7 development cycle, Drew Jaynes, who led the WordPress 4.2 release cycle, <a href="https://make.wordpress.org/core/2016/08/17/wordpress-4-7-whats-on-your-mind/#comment-30573">expressed interest</a> in creating an opt-in data collection system.</p>\n<p>The idea received positive feedback that included people offering to help. I asked Jaynes what his thoughts are on such a system and how it could benefit core development.</p>\n<p>&#8220;There&#8217;s some discussion about what form that collection should take initially, but I think there&#8217;s consensus that it should be opt-in, and take one of two forms (or a hybrid of the two): active (surveys in the admin) or passive (anonymized usage) data collection,&#8221; Jaynes said.</p>\n<p>&#8220;Either way, I think having this data available would benefit the entire community, regardless of the obvious practicable application within core development.</p>\n<p>&#8220;All of that data can and should be used to inform decision-making in WordPress going forward. The core team really needs to hit the reset button on the concept of the 80/20 rule, including what and whom it represents.</p>\n<p>&#8220;We should be building modern WordPress for the modern WordPress user, and resting on Matt&#8217;s instincts coupled with the core team&#8217;s experience is no longer enough to maintain positive forward momentum.&#8221;</p>\n<p>Jaynes cites the editor as an example of where having the data would be helpful and that without it, pursuing an idealized &#8216;modern editor&#8217; in WordPress is premature. The data could also help provide insight into improving the new user experience.</p>\n<p>&#8220;A common complaint is that the WordPress admin can be really overwhelming to new users,&#8221; Jaynes said. &#8220;Having real data about how frequently the various core screens are used could really inform decisions about maybe paring it down, or hiding some things over time that are used less and less.&#8221;</p>\n<p>While collecting data could help with making informed decisions, he doesn&#8217;t think it should stop the core team from experimentation.</p>\n<p>&#8220;I think having real, citable data could really reduce the amount of backlash we&#8217;ve seen with a few releases in the last couple of years,&#8221; Jaynes said. &#8220;Areas where core team decisions left some group of users feeling jilted.&#8221;</p>\n<p>&#8220;It&#8217;s worth mentioning that there&#8217;s absolutely value in allowing the core team to experiment, as long as we&#8217;re careful not to latch onto something that got merged as the only way we&#8217;ll ever need to solve that problem; that&#8217;s where we get into trouble.&#8221;</p>\n<h2>Who Are The 80/20 Users of WordPress?</h2>\n<p>The most striking statement in Rand-Hendriksen&#8217;s proposal is that WordPress development is occurring without having any idea who the 80% or 20% of users are.</p>\n<p>&#8220;During the development of WordPress 4.7, I was involved in several conversations centered around <em>assumed use</em> of features,&#8221; Rand-Hendriksen said.</p>\n<p>&#8220;The general argument was that based on the 80/20 rule, certain features should be added while others should be removed. I kept bringing up the well-known fact we don’t have a clue what features 80%, or even 20%, of WordPress users actually use so any claim of validity in the 80/20 rule is guesswork at best.&#8221;</p>\n<p>Collecting usage data is standard practice. Microsoft Windows, Mozilla Firefox, Chrome, iOS, and a number of other software projects have opt-in data collection systems that are used to improve the product. They also provide insight into how customers are using their products.</p>\n<p>WordPress development on the other hand relies on the support forums, data collected from WordPress.com, limited user testing, verbal feedback at WordCamps, and other small data points. Collecting usage data from WordPress could show trends and provide evidence for changes related to the <a href="https://wordpress.org/about/philosophy/">decisions not options philosophy</a> of WordPress development.</p>\n<p>Collecting usage data isn&#8217;t going to solve all of WordPress&#8217; woes but having it available to make more informed decisions is better than not having any data at all. Although an opt-in data collection system in WordPress won&#8217;t be a core focus any time soon, it&#8217;s encouraging to see the idea has merit and is something some core developers are interested in seeing become a reality.</p>\n<p>I&#8217;d gladly opt-in and share my usage data with WordPress.org as long as it was anonymized and displayed publicly in aggregate. Would you?</p>\nNote: There is a poll embedded within this post, please visit the site to participate in this post''s poll.\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 21 Feb 2017 02:07:48 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Jeff Chandler";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:43;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:99:"WPTavern: BuddyPress 2.8 Boosts Minimum PHP Requirement, Adds Twenty Seventeen Companion Stylesheet";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66090";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:109:"https://wptavern.com/buddypress-2-8-boosts-minimum-php-requirement-adds-twenty-seventeen-companion-stylesheet";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2774:"<p><a href="https://buddypress.org/2017/02/buddypress-2-8-0-san-matteo/" target="_blank">BuddyPress 2.8</a> “San Matteo,” was released last week, led by long-time BuddyPress contributor Slava Abakumov. The release was named for <a href="http://www.sanmatteopanuozzo.com/" target="_blank">San Matteo Panuozzo</a>, an NYC pizza restaurant that specializes in panuozzo, a more portable pizza-sandwich hybrid. Following suit with the previous release, 2.8 focuses on improvements for developers and site builders, the project&#8217;s new target audience as of 2016.</p>\n<p>As part of an effort to modernize the plugin&#8217;s codebase and prepare it for better integration with the BP REST API project, this release <a href="https://codex.buddypress.org/getting-started/buddypress-2-8-will-require-php-5-3/" target="_blank">boosts the minimum PHP requirement to 5.3</a>. In BuddyPress versions 2.7+, the plugin will display a notice in the dashboard if it detects that the server doesn&#8217;t meet the minimum requirements for running 2.8. The change is not likely to affect many BuddyPress sites as only a small sliver (5.7%) of WordPress sites are running on PHP 5.2.</p>\n<p>This release also adds a companion stylesheet for <a href="https://wordpress.org/themes/twentyseventeen/" target="_blank">Twenty Seventeen</a>. This stylesheet is important for providing a good first impression of BuddyPress for those who are trying try out the plugin with WordPress&#8217; latest default theme. A <a href="https://codex.buddypress.org/themes/bp-theme-compatibility-and-the-wordpress-default-themes/twenty-seventeen-theme/" target="_blank">new BP codex page</a> gives sample code for changing Twenty Seventeen&#8217;s default two-column layout to be a full-width layout.</p>\n<p><a href="https://i1.wp.com/wptavern.com/wp-content/uploads/2017/02/buddypress-twenty-seventeen.png?ssl=1"><img /></a></p>\n<p>The 2.8 release brings improvements to the “Activate Pending Accounts” screen, making it easier for site managers to confirm or reject new registrants. Clicking on the username of a pending account will now display profile data that the user entered at signup.</p>\n<p>Other improvements for developers include the following:</p>\n<ul>\n<li>New filters and actions for the Messages component</li>\n<li>Support for List-Unsubscribe header in emails</li>\n<li>More flexible Group search</li>\n<li>New filter enables choice of which PHPMailer should be used when sending BuddyPress emails</li>\n</ul>\n<p>BuddyPress 2.8 was made possible by 44 volunteer contributors. For a full list of all the changes in this release, check out the official <a href="https://codex.buddypress.org/releases/version-2-8-0/" target="_blank">2.8.0 changelog</a>.</p>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 21 Feb 2017 00:33:34 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:44;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:67:"WPTavern: Composing a WordPress Development Environment with Docker";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66335";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:78:"https://wptavern.com/composing-a-wordpress-development-environment-with-docker";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:6432:"<p><a href="https://i2.wp.com/wptavern.com/wp-content/uploads/2015/03/petersuhm.jpeg?ssl=1"><img /></a>This post was contributed by guest author <a href="http://petersuhm.com/" target="_blank">Peter Suhm</a>. Peter is a web developer from the Land of the Danes. He is the creator of <a href="https://wptavern.com/wp-pusher-aims-to-provide-pain-free-deployment-of-wordpress-themes-and-plugins-from-github" target="_blank">WP Pusher</a> and a huge travel addict, bringing his work along with him as he goes.<br />\n&nbsp;</p>\n<hr />\n<p>In the last few years, a wave of virtualization technologies have swept through our WordPress development environments. The one that&#8217;s sounded the most promising to me has been Docker: lightweight and flexible. Yet, until recently, getting Docker up and running was an overwhelming task &#8211; especially on a non-Linux machine. If you managed to get it up and running in a virtual machine (using Vagrant or similar), getting port-forwarding to work would make you give up and just use Vagrant instead.</p>\n<p>Now it&#8217;s different.</p>\n<p>With (a stable) Docker for Mac and Windows and <a href="https://docs.docker.com/compose/" target="_blank">Docker Compose</a> at hand, getting Docker up and running is easy and pain-free. With Docker Compose you can tell Docker exactly what you want your WordPress development environment to look like and it will take care of it.</p>\n<h3>What is Docker?</h3>\n<p>Docker is a technology that makes it really simple to create isolated containers for your applications and websites to run in. These containers can be combined and modified to fit the needs of your applications. Docker is utilizing the Linux Containers technology (LXC) where multiple isolated environments can share the same Linux kernel &#8211; making it very lightweight compared to something like Vagrant.</p>\n<p>The Docker ecosystem is built around containers. In the Docker Hub, you can find an endless number of containers that other people have built or you can build your own using a Dockerfile. When building your own, you can start from scratch using the base Ubuntu image or extend someone else&#8217;s image.</p>\n<p>You can share local directories with your containers and link the networks, so they can talk to each other &#8211; just like you know it from other virtualization technologies. However, this is where it gets complicated which leads me to Docker Compose:</p>\n<h3>What is Docker Compose?</h3>\n<p>Docker Compose is what makes Docker available to mortals like you and me. As the name implies, Docker Compose is a tool for composing Docker containers. That means defining your services (containers), setting up the network between them, sharing local directories with them, and a few more things.</p>\n<p>With Docker Compose you create a simple file in the root of your project that describes the setup required by your application/website. For a WordPress theme that might mean a container to run WordPress, a container to run MySQL and a container to run Gulp or Grunt. This can very easily be defined in a docker-compose.yml file that can then be shared with your team members. This means that you can now share your WordPress theme, including an isolated WordPress environment to run it in. Hurray for virtualization!</p>\n<h3>Why use Docker?</h3>\n<p>There are a few reasons why Docker is an attractive technology for me. Here are the most important requirements I have for my development environment and how Docker solves them:</p>\n<ul>\n<li><strong>Clean Mac:</strong> In an ideal world, I prefer not to install anything related to my development environment directly on my Mac. I work on so many different projects that this gets unmanageable. When one thing works, another doesn&#8217;t. I also travel a lot and should something happen to my computer, I want to be able to set up a new machine in minutes.</li>\n<li><strong>Shareable:</strong> I often work in teams, so sharing my development environment with teammates is crucial. This is possible with Vagrant, but it&#8217;s still very tricky to keep environments in sync across teams.</li>\n<li><strong>Lightweight:</strong> This is important, especially when on the road. Try running a few Vagrant boxes compared to a few Docker containers and see what I mean.</li>\n<li><strong>Extendable:</strong> Extending Docker is very easy. For example, I could extend the official WordPress container and build it with WP Pusher pre-installed, since I (obviously) always use it.</li>\n<li><strong>Mirror production:</strong> My development environment needs to be as close to production as possible. With Docker this is easy, since Docker can be used in production as well.</li>\n</ul>\n<h3>My Docker development environment</h3>\n<p>This is the very simple Docker setup I use for development of my WP Pusher plugin: A WordPress and a MySQL container. Both of them use the official Docker Hub images, so setting it up is very easy.</p>\n<p>My <code>docker-compose.yml</code> file looks like this:</p>\n<p></p>\n<p>It describes two services: a MySQL 5.7 database and WordPress running on PHP 5.6 and Apache. The database is using a volume on my local machine, so data will be persisted every time I shut off the container. My current directory (in this case a plugin) is mounted into the <code>wp-content/plugins</code> directory. This allows me to work on my plugin in a completely isolated WordPress environment &#8211; without installing anything, besides Docker, on my Mac. The WordPress container forwards port 80 to my local machine, so I can access it as &#8220;localhost&#8221; in my browser.</p>\n<p>If you want to try it for yourself, and have Docker installed on your machine, just add the file to your plugin (or theme) and run:</p>\n<p><code>$ docker-compose up -d</code></p>\n<p>In order to see which containers are running, just run:</p>\n<p><code>$ docker ps</code></p>\n<p>This a very simple setup that is easy to extend and build upon.</p>\n<p>I hope this post made you curious about Docker and WordPress. Thanks for reading along!</p>\n<h3>Links</h3>\n<ul>\n<li><a href="https://docs.docker.com/compose/" target="_blank">Docker Compose</a></li>\n<li><a href="https://hub.docker.com/" target="_blank">Docker Hub</a></li>\n<li><a href="https://blog.wppusher.com/the-easiest-way-to-use-docker-for-wordpress-development/" target="_blank">My Docker setup for WP Pusher</a></li>\n</ul>\n<div id="epoch-width-sniffer"></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 20 Feb 2017 18:23:39 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Sarah Gooding";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:45;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:115:"WPTavern: Disqus Hits Sites with Unwanted Advertising, Plans to Charge Large Publishers a Monthly Fee to Remove Ads";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"https://wptavern.com/?p=66098";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:125:"https://wptavern.com/disqus-hits-sites-with-unwanted-advertising-plans-to-charge-large-publishers-a-monthly-fee-to-remove-ads";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:7974:"<p>When Disqus <a href="https://blog.disqus.com/our-plans-for-2017" target="_blank">announced</a> it would be releasing new, subscription-based versions later this year, users didn&#8217;t expect to have the new advertising model injected into their sites without notice. Disqus CEO Daniel Ha said the company would release finalized pricing and provide more details well in advance of its planned March release, but users are reporting that the advertising has already been forced into their comments without warning.</p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr">Why did <a href="https://twitter.com/disqus">@disqus</a> just add a bunch of ads to my site without my permission? <a href="https://t.co/CzXTTuGs67">https://t.co/CzXTTuGs67</a> <a href="https://t.co/y2QbFFzM8U">pic.twitter.com/y2QbFFzM8U</a></p>\n<p>&mdash; Harry Campbell (@TheRideShareGuy) <a href="https://twitter.com/TheRideShareGuy/status/826921387273052160">February 1, 2017</a></p></blockquote>\n<p></p>\n<p>&#8220;We are one of the lucky 5% who now has to pay if we don&#8217;t want really irrelevant and horribly spammy links just plopped on our site with zero warning,&#8221; BabyCenter Social Media Manager Dina Vernon Freeman said. &#8220;Unless our users (mainly millennial parents) should care about overpaying for dentures! We&#8217;re looking for other platforms ASAP.&#8221;</p>\n<p>Brian O&#8217;Neill, who manages Slugger O&#8217;Toole, a site with more than 70,000 readers, was also hit with unwanted advertising on his site.</p>\n<p>&#8220;Disqus has started to put ads into our comments section of our site without even telling us,&#8221; O&#8217;Neill said in a <a href="https://sluggerotoole.com/2017/02/02/bear-with-us-as-we-try-to-remove-those-terrible-disqus-ads-from-the-comments-area/" target="_blank">post</a> explaining the new ads to the site&#8217;s readers. &#8220;As you can imagine I am extremely annoyed at this – I hate crappy online ads as much as you do. Supposedly we can remove the ads if we pay them $10 a month, but as yet there is no mechanism on their site to do this.&#8221; O&#8217;Neill said he is also exploring alternative commenting systems if he is unable to remove the advertising.</p>\n<p>Disqus responded to user complaints with a post to clarify that <a href="https://blog.disqus.com/advertising-will-remain-optional-for-over-95-of-sites-on-disqus" target="_blank">advertising will remain optional for more than 95% of the sites on Disqus</a>.</p>\n<p>&#8220;Larger, commercial, sites that elect to use the free version of Disqus will be supported by configurable advertising and have the option to earn revenue through the Reveal program,&#8221; Disqus Marketing Manager Mario Paganini said. &#8220;For small, non-commercial sites, advertising will be optional. These sites will be able to use Disqus’ ads-optional subscription, free of charge.&#8221;</p>\n<p>Publishers asked in the comments when the option to pay to remove ads will become available, as an option to pay isn&#8217;t currently in place.</p>\n<p>&#8220;Larger sites will be able to run a paid subscription version of Disqus that includes the ability to remove ads along with additional features,&#8221; Paganini said. &#8220;We are aiming to have this available in the next couple of months. We will be making periodic updates on our blog and talking to publishers in the meantime.&#8221;</p>\n<p>Disqus is moving to focus on its larger publishers but has already attracted angry criticism from publishers that were not properly informed of the changes. Over the years the company has experimented with different ways of monetizing the commenting platform, often frustrating users in the process of making important changes.</p>\n<p>In 2014, Disqus began experimenting with advertising in the form of &#8220;Sponsored Comments&#8221; that users could not turn off without contacting support. This move drew <a href="https://ma.tt/2014/11/disqus-spam-ads/" target="_blank">criticism from WordPress co-founder Matt Mullenweg</a> who essentially called out the ads as little more than comment spam. After a negative reaction from its community, Disqus quietly discontinued the Sponsored Comments and scrubbed the <a href="https://blog.disqus.com/heads-up-were-testing-a-new-form-of-advertising" target="_blank">announcement post</a> from the internet.</p>\n<h3>Disqus Delivers Low-Quality Ads</h3>\n<p>Disqus has struggled to land on an effective advertising model that will convince users to get on board. Its <a href="https://help.disqus.com/customer/portal/articles/2069645-reveal-f-a-q-" target="_blank">Reveal advertising program</a> is notorious for serving low-quality ads and has inspired little confidence in users who have tried it. The following is one of the tamer examples:</p>\n<p><a href="https://i1.wp.com/wptavern.com/wp-content/uploads/2017/02/disqus-ads.png?ssl=1"><img /></a></p>\n<p>&#8220;I think if you had somewhat decent advertising you might convince people that it&#8217;s worth it, but I had to yank it from one of my sites because it was all &#8216;Ron Paul wants you to buy gold!&#8217; and &#8217;22 times the photos showed too much!''&#8221; Paul King, an author who writes for multiple publications, commented on Disqus&#8217; most recent advertising announcement. &#8220;Just put in a tier of non-spam advertising that&#8217;s actually relevant or charge based on comments or something.&#8221;</p>\n<p>Twitter is filled with complaints from users who are dissatisfied with the questionable quality of Disqus&#8217; advertising. Many are searching for alternatives.</p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr"><a href="https://twitter.com/disqus">@disqus</a> We''ve disabled ads straight away (they are literally ALL scams) &#8211; if you force those ads on us, we''re dropping you like a hot potato</p>\n<p>&mdash; That''s Nonsense (@thatsnonsense) <a href="https://twitter.com/thatsnonsense/status/828739990486208512">February 6, 2017</a></p></blockquote>\n<p></p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr">Why <a href="https://twitter.com/disqus">@disqus</a> think it''s acceptable to serve disgusting, misogynistic ads (OR ANY ADS) on people''s blogs without asking is beyond me.</p>\n<p>&mdash; Rosie (@RosieLondoner) <a href="https://twitter.com/RosieLondoner/status/828642646478426112">February 6, 2017</a></p></blockquote>\n<p></p>\n<blockquote class="twitter-tweet">\n<p lang="en" dir="ltr">I''m removing <a href="https://twitter.com/hashtag/disqus?src=hash">#disqus</a> from <a href="https://t.co/PSlovlA6Tm">https://t.co/PSlovlA6Tm</a> since they''ve suddenly turned on (notably creepy) ads with no warning.</p>\n<p>&mdash; James Britt <img src="https://s.w.org/images/core/emoji/2.2.1/72x72/1f3a7.png" alt="', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(8415, '_transient_timeout_feed_mod_867bd5c64f85878d03a060509cd2f92c', '1489094308', 'no'),
(8416, '_transient_feed_mod_867bd5c64f85878d03a060509cd2f92c', '1489051108', 'no'),
(8417, '_transient_timeout_plugin_slugs', '1489137508', 'no'),
(8418, '_transient_plugin_slugs', 'a:2:{i:0;s:19:"akismet/akismet.php";i:1;s:9:"hello.php";}', 'no'),
(8419, '_transient_timeout_dash_de3249c4736ad3bd2cd29147c4a0d43e', '1489094308', 'no'),
(8420, '_transient_dash_de3249c4736ad3bd2cd29147c4a0d43e', '', 'no'),
(8421, '_transient_timeout_dash_aa95765b5cc111c56d5993d476b1c2f0', '1489094308', 'no'),
(8422, '_transient_dash_aa95765b5cc111c56d5993d476b1c2f0', '<div class="rss-widget"><ul><li><a class=''rsswidget'' href=''https://wptavern.com/google-launches-invisible-recaptcha'' title=''Three years ago Google introduced its new reCAPTCHA v2 API, replacing distorted text challenges with a simple “I’m not a robot” checkbox for validating users. This was a welcome improvement over the fuzzy text in a box that frustrated and infuriated real humans. reCAPTCHA v1 reCAPTCHA v2 photo credit: Google Online Security Blog reCAPTCHA v1 is no longer sup [&hellip;]''>WPTavern: Google Launches Invisible reCAPTCHA</a></li><li><a class=''rsswidget'' href=''https://wptavern.com/wpweekly-episode-266-clef-is-shutting-down-configuring-user-avatars-and-wpcampus-2017'' title=''In this episode, Marcus Couch and I discuss the stories that are making headlines including, Clef shutting down, WordPress 4.7.3, and WordPress.com’s new add-on for Chrome. I shared two lessons I recently learned from managing a site that has open registration and uses BuddyPress. We also share details of WPCampus 2017. Stories Discussed: WordPress 4.7.3 Pat [&hellip;]''>WPTavern: WPWeekly Episode 266 – Clef Is Shutting Down, Configuring User Avatars, and WPCampus 2017</a></li><li><a class=''rsswidget'' href=''https://wptavern.com/google-is-retiring-its-adsense-for-wordpress-plugin-in-may-2017'' title=''Google announced that it is retiring its official Adsense plugin, previously known as the Google Publisher plugin. For the past three years it has allowed WordPress users to easily add Adsense ads to their sites, enable mobile-specific ad layouts, and manage ads with a point-and-click interface. “After reviewing the AdSense Plugin for WordPress, we’ve decide [&hellip;]''>WPTavern: Google is Retiring Its Adsense for WordPress Plugin in May 2017</a></li><li><a class=''rsswidget'' href=''https://ma.tt/2017/03/wordpress-collaborative-editing/'' title=''I’m really excited about the new Google Docs integration that just launched — basically it builds a beautiful bridge between what is probably the best collaborative document editor on the planet right now, Google’s, and let’s you one-click bring a document there into a WordPress draft with all the formatting, links, and everything brought over. There’s even  [&hellip;]''>Matt: WordPress Collaborative Editing</a></li><li><a class=''rsswidget'' href=''https://heropress.com/essays/coming-home/'' title=''When I was 17, I attended the school for graphical design and printing. I remember one time a teacher yelling at me: ‘With an attitude like that, you won’t get very far in life’. I don’t know why this pops into my mind at the very moment I started to writing this piece for HeroPress. I guess I always wanted to do things my way. I have had pretty strong thoug [&hellip;]''>HeroPress: Coming Home</a></li></ul></div>', 'no'),
(8423, '_transient_timeout_8fc9b0aada92316d3a038be70496f9ff', '1489054763', 'no'),
(8424, '_transient_8fc9b0aada92316d3a038be70496f9ff', '<div class="gk-nsp mobile_layout horizontal" data-cols="2" data-rows="1" data-links="" data-autoanim="off" data-autoanimint="5000" data-autoanimhover="on"><div class="gk-nsp-arts"><div class="gk-nsp-arts-scroll gk-nsp-pages-3"><div class="gk-nsp-arts-page gk-nsp-cols-3"><div class="gk-nsp-art gk-nsp-cols-2" ><h3 class="gk-nsp-header"><a href="http://wp1/?p=739" title="Custom Post Fields">Custom Post Fields</a></h3><p class="gk-nsp-text">This post contains an example of the Custom Post Fields.\r\n\r\n&nbsp;</p><p class="gk-nsp-info"><span class="gk-nsp-date">02 Sep 2012</span>  <a href="http://wp1/?cat=18" class="gk-nsp-category">Theme Features</a>  <a href="http://wp1/?author=1" class="gk-nsp-author">admin</a> <a href="http://wp1/?p=739#comments">No comments</a></p><a href="http://wp1/?p=739" class="readon btn" title="Read more">Read more</a></div><div class="gk-nsp-art gk-nsp-cols-2" ><h3 class="gk-nsp-header"><a href="http://wp1/?p=609" title="Image Post">Image Post</a></h3><p class="gk-nsp-text">This is an example of the Image Post Format:\r\n\r\n[caption id="attachment_610" align="aligncenter" width="313"] Web Responsive Design is fully supported by the&hellip;</p><p class="gk-nsp-info"><span class="gk-nsp-date">11 Aug 2012</span>  <a href="http://wp1/?cat=80" class="gk-nsp-category">Post Formats</a>  <a href="http://wp1/?author=1" class="gk-nsp-author">admin</a> <a href="http://wp1/?p=609#comments">No comments</a></p><a href="http://wp1/?p=609" class="readon btn" title="Read more">Read more</a></div></div><div class="gk-nsp-arts-page gk-nsp-cols-3"><div class="gk-nsp-art gk-nsp-cols-2" ><h3 class="gk-nsp-header"><a href="http://wp1/?p=607" title="Aside Post">Aside Post</a></h3><p class="gk-nsp-text">This is an example of the Aside Post Format, which can be used to show less important posts.\r\n\r\nCum sociis natoque&hellip;</p><p class="gk-nsp-info"><span class="gk-nsp-date">11 Aug 2012</span>  <a href="http://wp1/?cat=80" class="gk-nsp-category">Post Formats</a>  <a href="http://wp1/?author=1" class="gk-nsp-author">admin</a> <a href="http://wp1/?p=607#comments">No comments</a></p><a href="http://wp1/?p=607" class="readon btn" title="Read more">Read more</a></div><div class="gk-nsp-art gk-nsp-cols-2" ><h3 class="gk-nsp-header"><a href="http://wp1/?p=603" title="Quote Post">Quote Post</a></h3><p class="gk-nsp-text">This is an example of the Quote Post Format:\r\n\r\n[quote style="1" author="Amanda Turner"]Thank you for the great customer service! I appreciated&hellip;</p><p class="gk-nsp-info"><span class="gk-nsp-date">11 Aug 2012</span>  <a href="http://wp1/?cat=80" class="gk-nsp-category">Post Formats</a>  <a href="http://wp1/?author=1" class="gk-nsp-author">admin</a> <a href="http://wp1/?p=603#comments">No comments</a></p><a href="http://wp1/?p=603" class="readon btn" title="Read more">Read more</a></div></div><div class="gk-nsp-arts-page gk-nsp-cols-3"><div class="gk-nsp-art gk-nsp-cols-2" ><h3 class="gk-nsp-header"><a href="http://wp1/?p=599" title="Link Post">Link Post</a></h3><p class="gk-nsp-text">This is an example of the Link Post Format:\r\n\r\nGavickPro Website\r\n\r\nGavickPro Documentation</p><p class="gk-nsp-info"><span class="gk-nsp-date">11 Aug 2012</span>  <a href="http://wp1/?cat=80" class="gk-nsp-category">Post Formats</a>  <a href="http://wp1/?author=1" class="gk-nsp-author">admin</a> <a href="http://wp1/?p=599#comments">No comments</a></p><a href="http://wp1/?p=599" class="readon btn" title="Read more">Read more</a></div><div class="gk-nsp-art gk-nsp-cols-2" ><h3 class="gk-nsp-header"><a href="http://wp1/?p=595" title="Video Post">Video Post</a></h3><p class="gk-nsp-text">This is an example of the Video Post Format:\r\n\r\nhttp://www.vimeo.com/22126094\r\n\r\n[notice]Tip: for Vimeo videos please remember about using the HTTP (not HTTPS)&hellip;</p><p class="gk-nsp-info"><span class="gk-nsp-date">11 Aug 2012</span>  <a href="http://wp1/?cat=80" class="gk-nsp-category">Post Formats</a>  <a href="http://wp1/?author=1" class="gk-nsp-author">admin</a> <a href="http://wp1/?p=595#comments">No comments</a></p><a href="http://wp1/?p=595" class="readon btn" title="Read more">Read more</a></div></div></div><div class="gk-nsp-arts-nav"><ul class="gk-nsp-pagination"><li>1</li><li>2</li><li>3</li></ul></div></div></div>', 'no'),
(8425, 'category_children', 'a:0:{}', 'yes'),
(8426, '_transient_timeout_327ffbdbc97eac846af600a92bd32998', '1489055030', 'no'),
(8427, '_transient_327ffbdbc97eac846af600a92bd32998', '<div class="gk-nsp horizontal" data-cols="2" data-rows="1" data-links="2" data-autoanim="on" data-autoanimint="5000" data-autoanimhover="on"><div class="gk-nsp-arts"><div class="gk-nsp-arts-scroll gk-nsp-pages-2"><div class="gk-nsp-arts-page gk-nsp-cols-2"><div class="gk-nsp-art gk-nsp-cols-2" ><h3 class="gk-nsp-header"><a href="http://wp1/?p=739" title="Custom Post Fields">Custom Post Fields</a></h3><p class="gk-nsp-text">This post contains an example of the Custom Post Fields.\r\n\r\n&nbsp;</p><p class="gk-nsp-info"><span class="gk-nsp-date">02 Sep 2012</span>  <a href="http://wp1/?cat=18" class="gk-nsp-category">Theme Features</a>  <a href="http://wp1/?author=1" class="gk-nsp-author">admin</a> <a href="http://wp1/?p=739#comments">No comments</a></p><a href="http://wp1/?p=739" class="readon btn" title="Read more">Read more</a></div><div class="gk-nsp-art gk-nsp-cols-2" ><h3 class="gk-nsp-header"><a href="http://wp1/?p=609" title="Image Post">Image Post</a></h3><p class="gk-nsp-text">This is an example of the Image Post Format:\r\n\r\n[caption id="attachment_610" align="aligncenter" width="313"] Web Responsive Design is fully supported by the&hellip;</p><p class="gk-nsp-info"><span class="gk-nsp-date">11 Aug 2012</span>  <a href="http://wp1/?cat=80" class="gk-nsp-category">Post Formats</a>  <a href="http://wp1/?author=1" class="gk-nsp-author">admin</a> <a href="http://wp1/?p=609#comments">No comments</a></p><a href="http://wp1/?p=609" class="readon btn" title="Read more">Read more</a></div></div><div class="gk-nsp-arts-page gk-nsp-cols-2"><div class="gk-nsp-art gk-nsp-cols-2" ><h3 class="gk-nsp-header"><a href="http://wp1/?p=607" title="Aside Post">Aside Post</a></h3><p class="gk-nsp-text">This is an example of the Aside Post Format, which can be used to show less important posts.\r\n\r\nCum sociis natoque&hellip;</p><p class="gk-nsp-info"><span class="gk-nsp-date">11 Aug 2012</span>  <a href="http://wp1/?cat=80" class="gk-nsp-category">Post Formats</a>  <a href="http://wp1/?author=1" class="gk-nsp-author">admin</a> <a href="http://wp1/?p=607#comments">No comments</a></p><a href="http://wp1/?p=607" class="readon btn" title="Read more">Read more</a></div><div class="gk-nsp-art gk-nsp-cols-2" ><h3 class="gk-nsp-header"><a href="http://wp1/?p=603" title="Quote Post">Quote Post</a></h3><p class="gk-nsp-text">This is an example of the Quote Post Format:\r\n\r\n[quote style="1" author="Amanda Turner"]Thank you for the great customer service! I appreciated&hellip;</p><p class="gk-nsp-info"><span class="gk-nsp-date">11 Aug 2012</span>  <a href="http://wp1/?cat=80" class="gk-nsp-category">Post Formats</a>  <a href="http://wp1/?author=1" class="gk-nsp-author">admin</a> <a href="http://wp1/?p=603#comments">No comments</a></p><a href="http://wp1/?p=603" class="readon btn" title="Read more">Read more</a></div></div></div><div class="gk-nsp-arts-nav"><ul class="gk-nsp-pagination"><li>1</li><li>2</li></ul><div class="gk-nsp-prev">&laquo;</div><div class="gk-nsp-next">&raquo;</div></div></div><div class="gk-nsp-links"><div class="gk-nsp-links-scroll gk-nsp-pages-2"><ul class="gk-nsp-list gk-nsp-cols-2"><li><h4 class="gk-nsp-link-header"><a href="http://wp1/?p=599" title="Link Post">Link Post</a></h4><p class="gk-nsp-link-text">This is an example of the Link Post Format:\r\n\r\nGavickPro Website\r\n\r\nGavickPro Documentation</p></li><li><h4 class="gk-nsp-link-header"><a href="http://wp1/?p=595" title="Video Post">Video Post</a></h4><p class="gk-nsp-link-text">This is an example of the Video Post Format:\r\n\r\nhttp://www.vimeo.com/22126094\r\n\r\n[notice]Tip: for Vimeo videos please remember about using the HTTP (not HTTPS)&hellip;</p></li></ul><ul class="gk-nsp-list gk-nsp-cols-2"><li><h4 class="gk-nsp-link-header"><a href="http://wp1/?p=427" title="Option files">Option files</a></h4><p class="gk-nsp-link-text">Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a&hellip;</p></li><li><h4 class="gk-nsp-link-header"><a href="http://wp1/?p=424" title="Social API settings">Social API settings</a></h4><p class="gk-nsp-link-text">A section of options connected with Social API includes five groups of options:\r\n\r\n	options connected with sharing at Facebook\r\n	options connected with&hellip;</p></li></ul></div></div><div class="gk-nsp-links-nav"><ul class="gk-nsp-pagination"><li>1</li><li>2</li></ul><div class="gk-nsp-prev">&laquo;</div><div class="gk-nsp-next">&raquo;</div></div></div>', 'no'),
(8434, '_site_transient_timeout_theme_roots', '1489414102', 'yes'),
(8435, '_site_transient_theme_roots', 'a:5:{s:18:"MeetGavernWP-Child";s:7:"/themes";s:12:"MeetGavernWP";s:7:"/themes";s:12:"twentyeleven";s:7:"/themes";s:9:"twentyten";s:7:"/themes";s:12:"twentytwelve";s:7:"/themes";}', 'yes');

-- --------------------------------------------------------

--
-- Table structure for table `wp_postmeta`
--

CREATE TABLE IF NOT EXISTS `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1328 ;

--
-- Dumping data for table `wp_postmeta`
--

INSERT INTO `wp_postmeta` (`meta_id`, `post_id`, `meta_key`, `meta_value`) VALUES
(13, 13, '_wp_attached_file', '2011/08/logo_gavick_bigger.jpg'),
(14, 13, '_wp_attachment_metadata', 'a:5:{s:5:"width";s:2:"16";s:6:"height";s:2:"16";s:14:"hwstring_small";s:22:"height=''16'' width=''16''";s:4:"file";s:30:"2011/08/logo_gavick_bigger.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(48, 56, '_edit_last', '1'),
(49, 56, '_edit_lock', '1344792258:1'),
(50, 56, '_wp_page_template', 'template.login.php'),
(51, 59, '_menu_item_type', 'post_type'),
(52, 59, '_menu_item_menu_item_parent', '581'),
(53, 59, '_menu_item_object_id', '56'),
(54, 59, '_menu_item_object', 'page'),
(55, 59, '_menu_item_target', ''),
(56, 59, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(57, 59, '_menu_item_xfn', ''),
(58, 59, '_menu_item_url', ''),
(87, 74, '_edit_last', '1'),
(88, 74, '_edit_lock', '1344792253:1'),
(89, 74, '_wp_page_template', 'template.contact.php'),
(90, 76, '_menu_item_type', 'post_type'),
(91, 76, '_menu_item_menu_item_parent', '581'),
(92, 76, '_menu_item_object_id', '74'),
(93, 76, '_menu_item_object', 'page'),
(94, 76, '_menu_item_target', ''),
(95, 76, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(96, 76, '_menu_item_xfn', ''),
(97, 76, '_menu_item_url', ''),
(140, 107, '_edit_last', '1'),
(141, 107, '_edit_lock', '1361777608:1'),
(142, 107, '_wp_page_template', 'template.archive.php'),
(143, 109, '_menu_item_type', 'post_type'),
(144, 109, '_menu_item_menu_item_parent', '581'),
(145, 109, '_menu_item_object_id', '107'),
(146, 109, '_menu_item_object', 'page'),
(147, 109, '_menu_item_target', ''),
(148, 109, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(149, 109, '_menu_item_xfn', ''),
(150, 109, '_menu_item_url', ''),
(152, 112, '_edit_last', '1'),
(153, 112, '_edit_lock', '1360098702:1'),
(154, 112, '_wp_page_template', 'template.tagcloud.php'),
(155, 115, '_menu_item_type', 'post_type'),
(156, 115, '_menu_item_menu_item_parent', '581'),
(157, 115, '_menu_item_object_id', '112'),
(158, 115, '_menu_item_object', 'page'),
(159, 115, '_menu_item_target', ''),
(160, 115, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(161, 115, '_menu_item_xfn', ''),
(162, 115, '_menu_item_url', ''),
(172, 121, '_edit_last', '1'),
(173, 121, '_edit_lock', '1359974666:1'),
(174, 121, '_wp_page_template', 'template.gallery.php'),
(175, 123, '_menu_item_type', 'post_type'),
(176, 123, '_menu_item_menu_item_parent', '581'),
(177, 123, '_menu_item_object_id', '121'),
(178, 123, '_menu_item_object', 'page'),
(179, 123, '_menu_item_target', ''),
(180, 123, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(181, 123, '_menu_item_xfn', ''),
(182, 123, '_menu_item_url', ''),
(186, 127, '_menu_item_type', 'custom'),
(187, 127, '_menu_item_menu_item_parent', '0'),
(188, 127, '_menu_item_object_id', '127'),
(189, 127, '_menu_item_object', 'custom'),
(190, 127, '_menu_item_target', ''),
(191, 127, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(192, 127, '_menu_item_xfn', ''),
(193, 127, '_menu_item_url', 'http://wp1/'),
(196, 131, '_edit_last', '1'),
(197, 131, '_edit_lock', '1489051063:1'),
(198, 131, '_wp_page_template', 'template.fullwidth.php'),
(287, 207, '_edit_last', '1'),
(288, 207, '_edit_lock', '1360770164:1'),
(293, 207, '_encloseme', '1'),
(294, 207, '_encloseme', '1'),
(295, 207, '_encloseme', '1'),
(302, 207, '_encloseme', '1'),
(304, 207, '_encloseme', '1'),
(400, 207, '_encloseme', '1'),
(495, 330, '_edit_last', '1'),
(496, 330, '_edit_lock', '1344794245:1'),
(497, 330, '_encloseme', '1'),
(498, 332, '_edit_last', '1'),
(499, 332, '_edit_lock', '1344974819:1'),
(500, 332, '_encloseme', '1'),
(504, 332, '_encloseme', '1'),
(508, 335, '_edit_last', '1'),
(509, 335, '_edit_lock', '1344794280:1'),
(510, 335, '_encloseme', '1'),
(511, 338, '_edit_last', '1'),
(512, 338, '_edit_lock', '1344794379:1'),
(513, 338, '_encloseme', '1'),
(514, 341, '_edit_last', '1'),
(515, 341, '_edit_lock', '1344795367:1'),
(516, 341, '_encloseme', '1'),
(517, 338, '_encloseme', '1'),
(518, 335, '_encloseme', '1'),
(519, 332, '_encloseme', '1'),
(523, 330, '_encloseme', '1'),
(524, 207, '_encloseme', '1'),
(525, 349, '_edit_last', '1'),
(526, 349, '_edit_lock', '1344794521:1'),
(527, 349, '_encloseme', '1'),
(528, 351, '_edit_last', '1'),
(529, 351, '_edit_lock', '1344794541:1'),
(530, 351, '_encloseme', '1'),
(531, 353, '_edit_last', '1'),
(532, 353, '_edit_lock', '1344794034:1'),
(533, 353, '_encloseme', '1'),
(534, 356, '_edit_last', '1'),
(535, 356, '_edit_lock', '1344795002:1'),
(536, 356, '_encloseme', '1'),
(537, 359, '_edit_last', '1'),
(538, 359, '_edit_lock', '1344794006:1'),
(539, 359, '_encloseme', '1'),
(540, 361, '_edit_last', '1'),
(541, 361, '_edit_lock', '1344794627:1'),
(542, 361, '_encloseme', '1'),
(543, 364, '_edit_last', '1'),
(544, 364, '_edit_lock', '1344794648:1'),
(545, 364, '_encloseme', '1'),
(546, 367, '_edit_last', '1'),
(547, 367, '_edit_lock', '1344794707:1'),
(548, 367, '_encloseme', '1'),
(549, 370, '_edit_last', '1'),
(550, 370, '_edit_lock', '1344793960:1'),
(551, 371, '_wp_attached_file', '2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg'),
(552, 371, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"258";s:6:"height";s:3:"200";s:14:"hwstring_small";s:23:"height=''96'' width=''123''";s:4:"file";s:54:"2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:54:"Widgets-‹-Meet-Gavern-WP-—-WordPress-1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(553, 372, '_wp_attached_file', '2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg'),
(554, 372, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"240";s:6:"height";s:3:"203";s:14:"hwstring_small";s:23:"height=''96'' width=''113''";s:4:"file";s:56:"2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:56:"Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(555, 373, '_wp_attached_file', '2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg'),
(556, 373, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"242";s:6:"height";s:3:"216";s:14:"hwstring_small";s:23:"height=''96'' width=''107''";s:4:"file";s:54:"2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:54:"Widgets-‹-Meet-Gavern-WP-—-WordPress-2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(557, 374, '_wp_attached_file', '2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg'),
(558, 374, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"233";s:6:"height";s:2:"77";s:14:"hwstring_small";s:23:"height=''42'' width=''128''";s:4:"file";s:54:"2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:53:"Widgets-‹-Meet-Gavern-WP-—-WordPress-3-150x77.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"77";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(559, 375, '_wp_attached_file', '2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg'),
(560, 375, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"230";s:6:"height";s:3:"100";s:14:"hwstring_small";s:23:"height=''55'' width=''128''";s:4:"file";s:54:"2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:54:"Widgets-‹-Meet-Gavern-WP-—-WordPress-4-150x100.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"100";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(561, 370, '_encloseme', '1'),
(562, 377, '_edit_last', '1'),
(563, 377, '_edit_lock', '1344794761:1'),
(564, 377, '_encloseme', '1'),
(567, 380, '_edit_last', '1'),
(568, 380, '_edit_lock', '1344794967:1'),
(569, 380, '_encloseme', '1'),
(570, 382, '_edit_last', '1'),
(571, 382, '_edit_lock', '1344794986:1'),
(572, 382, '_encloseme', '1'),
(573, 384, '_edit_last', '1'),
(574, 384, '_edit_lock', '1344796607:1'),
(575, 384, '_encloseme', '1'),
(576, 386, '_edit_last', '1'),
(577, 386, '_edit_lock', '1344796309:1'),
(582, 386, '_encloseme', '1'),
(583, 207, '_encloseme', '1'),
(584, 207, '_encloseme', '1'),
(585, 392, '_edit_last', '1'),
(586, 392, '_edit_lock', '1344796849:1'),
(587, 392, '_encloseme', '1'),
(588, 394, '_edit_last', '1'),
(589, 394, '_edit_lock', '1344795966:1'),
(590, 394, '_encloseme', '1'),
(591, 397, '_edit_last', '1'),
(592, 397, '_edit_lock', '1344795698:1'),
(593, 397, '_encloseme', '1'),
(594, 397, '_encloseme', '1'),
(595, 401, '_edit_last', '1'),
(596, 401, '_edit_lock', '1344796448:1'),
(597, 401, '_encloseme', '1'),
(598, 404, '_edit_last', '1'),
(599, 404, '_edit_lock', '1344796063:1'),
(600, 404, '_encloseme', '1'),
(601, 207, '_encloseme', '1'),
(602, 408, '_edit_last', '1'),
(603, 408, '_edit_lock', '1351418720:1'),
(604, 408, '_encloseme', '1'),
(605, 410, '_edit_last', '1'),
(606, 410, '_edit_lock', '1344844603:1'),
(607, 410, '_encloseme', '1'),
(608, 413, '_edit_last', '1'),
(609, 413, '_edit_lock', '1344795337:1'),
(610, 413, '_encloseme', '1'),
(611, 416, '_edit_last', '1'),
(612, 416, '_edit_lock', '1344793866:1'),
(613, 416, 'gavern-post-desc', ''),
(614, 416, 'gavern-post-keywords', ''),
(615, 416, '_encloseme', '1'),
(616, 419, '_edit_last', '1'),
(617, 419, '_edit_lock', '1353417052:1'),
(618, 419, 'gavern-post-desc', ''),
(619, 419, 'gavern-post-keywords', ''),
(620, 419, '_encloseme', '1'),
(621, 422, '_edit_last', '1'),
(622, 422, '_edit_lock', '1344795502:1'),
(623, 422, 'gavern-post-desc', ''),
(624, 422, 'gavern-post-keywords', ''),
(625, 422, '_encloseme', '1'),
(626, 424, '_edit_last', '1'),
(627, 424, '_edit_lock', '1344792731:1'),
(628, 424, 'gavern-post-desc', ''),
(629, 424, 'gavern-post-keywords', ''),
(630, 424, '_encloseme', '1'),
(631, 427, '_edit_last', '1'),
(632, 427, '_edit_lock', '1348665792:1'),
(633, 427, 'gavern-post-desc', ''),
(634, 427, 'gavern-post-keywords', ''),
(635, 427, '_encloseme', '1'),
(640, 410, 'gavern-post-desc', ''),
(641, 410, 'gavern-post-keywords', ''),
(642, 410, '_encloseme', '1'),
(643, 330, 'gavern-post-desc', ''),
(644, 330, 'gavern-post-keywords', ''),
(645, 330, '_encloseme', '1'),
(646, 332, 'gavern-post-desc', ''),
(647, 332, 'gavern-post-keywords', ''),
(648, 332, '_encloseme', '1'),
(652, 335, 'gavern-post-desc', ''),
(653, 335, 'gavern-post-keywords', ''),
(654, 335, '_encloseme', '1'),
(655, 338, 'gavern-post-desc', ''),
(656, 338, 'gavern-post-keywords', ''),
(657, 338, '_encloseme', '1'),
(658, 338, '_encloseme', '1'),
(659, 341, 'gavern-post-desc', ''),
(660, 341, 'gavern-post-keywords', ''),
(661, 341, '_encloseme', '1'),
(662, 341, '_encloseme', '1'),
(663, 349, 'gavern-post-desc', ''),
(664, 349, 'gavern-post-keywords', ''),
(665, 349, '_encloseme', '1'),
(666, 351, 'gavern-post-desc', ''),
(667, 351, 'gavern-post-keywords', ''),
(668, 351, '_encloseme', '1'),
(669, 353, 'gavern-post-desc', ''),
(670, 353, 'gavern-post-keywords', ''),
(671, 353, '_encloseme', '1'),
(672, 356, 'gavern-post-desc', ''),
(673, 356, 'gavern-post-keywords', ''),
(674, 356, '_encloseme', '1'),
(675, 356, '_encloseme', '1'),
(676, 359, 'gavern-post-desc', ''),
(677, 359, 'gavern-post-keywords', ''),
(678, 359, '_encloseme', '1'),
(679, 359, '_encloseme', '1'),
(680, 361, 'gavern-post-desc', ''),
(681, 361, 'gavern-post-keywords', ''),
(682, 361, '_encloseme', '1'),
(683, 364, 'gavern-post-desc', ''),
(684, 364, 'gavern-post-keywords', ''),
(685, 364, '_encloseme', '1'),
(686, 364, '_encloseme', '1'),
(687, 367, 'gavern-post-desc', ''),
(688, 367, 'gavern-post-keywords', ''),
(689, 367, '_encloseme', '1'),
(690, 367, '_encloseme', '1'),
(691, 367, '_encloseme', '1'),
(692, 367, '_encloseme', '1'),
(693, 370, 'gavern-post-desc', ''),
(694, 370, 'gavern-post-keywords', ''),
(695, 370, '_encloseme', '1'),
(696, 370, '_encloseme', '1'),
(697, 370, '_encloseme', '1'),
(698, 370, '_encloseme', '1'),
(699, 370, '_encloseme', '1'),
(700, 377, 'gavern-post-desc', ''),
(701, 377, 'gavern-post-keywords', ''),
(702, 377, '_encloseme', '1'),
(703, 380, 'gavern-post-desc', ''),
(704, 380, 'gavern-post-keywords', ''),
(705, 380, '_encloseme', '1'),
(706, 382, 'gavern-post-desc', ''),
(707, 382, 'gavern-post-keywords', ''),
(708, 382, '_encloseme', '1'),
(709, 382, '_encloseme', '1'),
(710, 384, 'gavern-post-desc', ''),
(711, 384, 'gavern-post-keywords', ''),
(712, 384, '_encloseme', '1'),
(713, 384, '_encloseme', '1'),
(714, 384, '_encloseme', '1'),
(715, 384, '_encloseme', '1'),
(716, 384, '_encloseme', '1'),
(717, 386, 'gavern-post-desc', ''),
(718, 386, 'gavern-post-keywords', ''),
(719, 386, '_encloseme', '1'),
(720, 386, '_encloseme', '1'),
(721, 386, '_encloseme', '1'),
(722, 380, '_encloseme', '1'),
(723, 380, '_encloseme', '1'),
(724, 380, '_encloseme', '1'),
(725, 422, '_encloseme', '1'),
(726, 422, '_encloseme', '1'),
(727, 422, '_encloseme', '1'),
(728, 422, '_encloseme', '1'),
(729, 422, '_encloseme', '1'),
(730, 422, '_encloseme', '1'),
(731, 427, '_encloseme', '1'),
(732, 427, '_encloseme', '1'),
(733, 427, '_encloseme', '1'),
(734, 427, '_encloseme', '1'),
(735, 427, '_encloseme', '1'),
(736, 427, '_encloseme', '1'),
(737, 427, '_encloseme', '1'),
(743, 506, '_edit_last', '1'),
(744, 506, '_edit_lock', '1355568690:1'),
(745, 506, '_wp_page_template', 'default'),
(746, 508, '_menu_item_type', 'post_type'),
(747, 508, '_menu_item_menu_item_parent', '0'),
(748, 508, '_menu_item_object_id', '506'),
(749, 508, '_menu_item_object', 'page'),
(750, 508, '_menu_item_target', ''),
(751, 508, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(752, 508, '_menu_item_xfn', ''),
(753, 508, '_menu_item_url', ''),
(755, 509, '_edit_last', '1'),
(756, 509, '_edit_lock', '1344792222:1'),
(757, 510, '_wp_attached_file', '2012/07/widget_areas.png'),
(758, 510, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"752";s:6:"height";s:3:"646";s:14:"hwstring_small";s:23:"height=''96'' width=''111''";s:4:"file";s:24:"2012/07/widget_areas.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"widget_areas-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"widget_areas-300x257.png";s:5:"width";s:3:"300";s:6:"height";s:3:"257";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(759, 510, '_wp_attachment_image_alt', 'Widget areas'),
(760, 509, '_wp_page_template', 'default'),
(761, 513, '_menu_item_type', 'post_type'),
(762, 513, '_menu_item_menu_item_parent', '0'),
(763, 513, '_menu_item_object_id', '509'),
(764, 513, '_menu_item_object', 'page'),
(765, 513, '_menu_item_target', ''),
(766, 513, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(767, 513, '_menu_item_xfn', ''),
(768, 513, '_menu_item_url', ''),
(770, 394, 'gavern-post-desc', ''),
(771, 394, 'gavern-post-keywords', ''),
(772, 394, '_encloseme', '1'),
(773, 394, '_encloseme', '1'),
(774, 394, '_encloseme', '1'),
(775, 424, '_encloseme', '1'),
(776, 424, '_encloseme', '1'),
(777, 419, '_encloseme', '1'),
(778, 419, '_encloseme', '1'),
(779, 416, '_encloseme', '1'),
(780, 416, '_encloseme', '1'),
(781, 416, '_encloseme', '1'),
(782, 416, '_encloseme', '1'),
(783, 416, '_encloseme', '1'),
(784, 416, '_encloseme', '1'),
(785, 416, '_encloseme', '1'),
(786, 413, 'gavern-post-desc', ''),
(787, 413, 'gavern-post-keywords', ''),
(788, 413, '_encloseme', '1'),
(789, 410, '_encloseme', '1'),
(790, 207, 'gavern-post-desc', ''),
(791, 207, 'gavern-post-keywords', ''),
(792, 207, '_encloseme', '1'),
(795, 207, '_encloseme', '1'),
(796, 207, '_encloseme', '1'),
(797, 207, '_encloseme', '1'),
(798, 207, '_encloseme', '1'),
(799, 207, '_encloseme', '1'),
(800, 410, '_encloseme', '1'),
(801, 410, '_encloseme', '1'),
(802, 408, 'gavern-post-desc', ''),
(803, 408, 'gavern-post-keywords', ''),
(804, 408, '_encloseme', '1'),
(805, 404, 'gavern-post-desc', ''),
(806, 404, 'gavern-post-keywords', ''),
(807, 404, '_encloseme', '1'),
(808, 404, '_encloseme', '1'),
(809, 401, 'gavern-post-desc', ''),
(810, 401, 'gavern-post-keywords', ''),
(811, 401, '_encloseme', '1'),
(812, 207, '_encloseme', '1'),
(813, 207, '_encloseme', '1'),
(814, 207, '_encloseme', '1'),
(815, 397, 'gavern-post-desc', ''),
(816, 397, 'gavern-post-keywords', ''),
(817, 397, '_encloseme', '1'),
(818, 392, 'gavern-post-desc', ''),
(819, 392, 'gavern-post-keywords', ''),
(820, 392, '_encloseme', '1'),
(821, 207, '_encloseme', '1'),
(822, 380, '_encloseme', '1'),
(823, 207, '_encloseme', '1'),
(824, 401, '_encloseme', '1'),
(825, 207, '_encloseme', '1'),
(826, 207, '_encloseme', '1'),
(827, 207, '_encloseme', '1'),
(828, 207, '_encloseme', '1'),
(829, 207, '_encloseme', '1'),
(830, 386, '_encloseme', '1'),
(831, 386, '_encloseme', '1'),
(832, 386, '_encloseme', '1'),
(833, 394, '_encloseme', '1'),
(834, 394, '_encloseme', '1'),
(835, 401, '_encloseme', '1'),
(836, 401, '_encloseme', '1'),
(837, 401, '_encloseme', '1'),
(838, 207, '_encloseme', '1'),
(839, 207, '_encloseme', '1'),
(840, 338, '_encloseme', '1'),
(841, 207, '_encloseme', '1'),
(842, 207, '_encloseme', '1'),
(843, 581, '_menu_item_type', 'custom'),
(844, 581, '_menu_item_menu_item_parent', '0'),
(845, 581, '_menu_item_object_id', '581'),
(846, 581, '_menu_item_object', 'custom'),
(847, 581, '_menu_item_target', ''),
(848, 581, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(849, 581, '_menu_item_xfn', ''),
(850, 581, '_menu_item_url', '#page-styles'),
(870, 584, '_menu_item_type', 'post_type'),
(871, 584, '_menu_item_menu_item_parent', '0'),
(872, 584, '_menu_item_object_id', '207'),
(873, 584, '_menu_item_object', 'post'),
(874, 584, '_menu_item_target', ''),
(875, 584, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(876, 584, '_menu_item_xfn', ''),
(877, 584, '_menu_item_url', ''),
(879, 585, '_menu_item_type', 'custom'),
(880, 585, '_menu_item_menu_item_parent', '0'),
(881, 585, '_menu_item_object_id', '585'),
(882, 585, '_menu_item_object', 'custom'),
(883, 585, '_menu_item_target', ''),
(884, 585, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(885, 585, '_menu_item_xfn', ''),
(886, 585, '_menu_item_url', '#framework'),
(888, 586, '_menu_item_type', 'taxonomy'),
(889, 586, '_menu_item_menu_item_parent', '585'),
(890, 586, '_menu_item_object_id', '57'),
(891, 586, '_menu_item_object', 'category'),
(892, 586, '_menu_item_target', ''),
(893, 586, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(894, 586, '_menu_item_xfn', ''),
(895, 586, '_menu_item_url', ''),
(897, 587, '_menu_item_type', 'taxonomy'),
(898, 587, '_menu_item_menu_item_parent', '585'),
(899, 587, '_menu_item_object_id', '25'),
(900, 587, '_menu_item_object', 'category'),
(901, 587, '_menu_item_target', ''),
(902, 587, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(903, 587, '_menu_item_xfn', ''),
(904, 587, '_menu_item_url', ''),
(906, 588, '_menu_item_type', 'taxonomy'),
(907, 588, '_menu_item_menu_item_parent', '585'),
(908, 588, '_menu_item_object_id', '18'),
(909, 588, '_menu_item_object', 'category'),
(910, 588, '_menu_item_target', ''),
(911, 588, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(912, 588, '_menu_item_xfn', ''),
(913, 588, '_menu_item_url', ''),
(933, 207, '_encloseme', '1'),
(934, 427, '_encloseme', '1'),
(935, 427, '_encloseme', '1'),
(936, 349, '_encloseme', '1'),
(937, 595, '_edit_last', '1'),
(938, 595, '_edit_lock', '1347123025:1'),
(939, 595, 'gavern-post-desc', ''),
(940, 595, 'gavern-post-keywords', ''),
(941, 595, '_encloseme', '1'),
(943, 595, '_encloseme', '1'),
(945, 595, '_encloseme', '1'),
(947, 599, '_edit_last', '1'),
(948, 599, '_edit_lock', '1353520865:1'),
(949, 600, '_menu_item_type', 'taxonomy'),
(950, 600, '_menu_item_menu_item_parent', '0'),
(951, 600, '_menu_item_object_id', '80'),
(952, 600, '_menu_item_object', 'category'),
(953, 600, '_menu_item_target', ''),
(954, 600, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(955, 600, '_menu_item_xfn', ''),
(956, 600, '_menu_item_url', ''),
(958, 599, 'gavern-post-desc', ''),
(959, 599, 'gavern-post-keywords', ''),
(960, 599, '_encloseme', '1'),
(961, 595, '_encloseme', '1'),
(962, 595, '_oembed_dd06075941f69daefc154ebcb3a413c8', '<iframe src="http://player.vimeo.com/video/22126094" width="500" height="213" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'),
(963, 603, '_edit_last', '1'),
(964, 603, '_edit_lock', '1347123072:1'),
(965, 603, 'gavern-post-desc', ''),
(966, 603, 'gavern-post-keywords', ''),
(967, 603, '_encloseme', '1'),
(968, 603, '_encloseme', '1'),
(969, 603, '_encloseme', '1'),
(970, 607, '_edit_last', '1'),
(971, 607, '_edit_lock', '1356304614:1'),
(972, 607, 'gavern-post-desc', ''),
(973, 607, 'gavern-post-keywords', ''),
(974, 607, '_encloseme', '1'),
(975, 609, '_edit_last', '1'),
(976, 609, '_edit_lock', '1361742868:1'),
(977, 610, '_wp_attached_file', '2012/08/responsive.png'),
(978, 610, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"313";s:6:"height";s:3:"167";s:14:"hwstring_small";s:23:"height=''68'' width=''128''";s:4:"file";s:22:"2012/08/responsive.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"responsive-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"responsive-300x160.png";s:5:"width";s:3:"300";s:6:"height";s:3:"160";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(979, 610, '_wp_attachment_image_alt', 'Web Responsive Design'),
(980, 609, 'gavern-post-desc', ''),
(981, 609, 'gavern-post-keywords', ''),
(982, 609, '_encloseme', '1'),
(989, 632, '_menu_item_type', 'post_type'),
(990, 632, '_menu_item_menu_item_parent', '581'),
(991, 632, '_menu_item_object_id', '131'),
(992, 632, '_menu_item_object', 'page'),
(993, 632, '_menu_item_target', ''),
(994, 632, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(995, 632, '_menu_item_xfn', ''),
(996, 632, '_menu_item_url', ''),
(1040, 416, '_encloseme', '1'),
(1041, 416, '_encloseme', '1'),
(1042, 427, '_encloseme', '1'),
(1043, 654, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-1.jpg'),
(1044, 654, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"231";s:6:"height";s:3:"485";s:14:"hwstring_small";s:22:"height=''96'' width=''45''";s:4:"file";s:59:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-1-142x300.jpg";s:5:"width";s:3:"142";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1045, 427, '_encloseme', '1'),
(1046, 656, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-2.jpg'),
(1047, 656, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"704";s:6:"height";s:3:"268";s:14:"hwstring_small";s:23:"height=''48'' width=''128''";s:4:"file";s:59:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-2.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-2-300x114.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"114";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1048, 424, '_encloseme', '1'),
(1051, 659, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-3.jpg'),
(1052, 659, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"595";s:6:"height";s:3:"571";s:14:"hwstring_small";s:23:"height=''96'' width=''100''";s:4:"file";s:59:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-3.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-3-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-3-300x287.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"287";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1053, 660, '_wp_attached_file', '2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg'),
(1054, 660, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"732";s:6:"height";s:3:"609";s:14:"hwstring_small";s:23:"height=''96'' width=''115''";s:4:"file";s:56:"2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:56:"Edit-Post-‹-Meet-Gavern-WP-—-WordPress-1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:56:"Edit-Post-‹-Meet-Gavern-WP-—-WordPress-1-300x249.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"249";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1055, 422, '_encloseme', '1'),
(1056, 427, '_encloseme', '1'),
(1057, 419, '_encloseme', '1'),
(1058, 664, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-4.jpg'),
(1059, 664, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"541";s:6:"height";s:3:"404";s:14:"hwstring_small";s:23:"height=''96'' width=''128''";s:4:"file";s:59:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-4.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-4-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-4-300x224.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"224";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1060, 665, '_wp_attached_file', '2012/07/Main-front-end-features-»-Free-WordPress-template.jpg'),
(1061, 665, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"706";s:6:"height";s:3:"123";s:14:"hwstring_small";s:23:"height=''22'' width=''128''";s:4:"file";s:62:"2012/07/Main-front-end-features-»-Free-WordPress-template.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:62:"Main-front-end-features-»-Free-WordPress-template-150x123.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"123";}s:6:"medium";a:3:{s:4:"file";s:61:"Main-front-end-features-»-Free-WordPress-template-300x52.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"52";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1062, 416, '_encloseme', '1'),
(1063, 370, '_encloseme', '1'),
(1064, 359, '_encloseme', '1'),
(1065, 353, '_encloseme', '1'),
(1066, 341, '_encloseme', '1'),
(1067, 332, '_encloseme', '1'),
(1068, 332, '_oembed_7cda5a108293ec240f403bbba5098e01', '<iframe width="500" height="281" src="http://www.youtube.com/embed/MdrC7kYTAX4?fs=1&feature=oembed" frameborder="0" allowfullscreen></iframe>'),
(1069, 332, '_oembed_055db18730750998c1bcc01ef3d1743b', '<blockquote class="twitter-tweet" width="500" lang="pl"><p>What is your favorite demo toolbar? <a href="http://t.co/tkN72PH5" title="http://bit.ly/demo_toolbar">bit.ly/demo_toolbar</a> <a href="http://t.co/RAXXHm4L" title="http://fb.me/1NuSjW3kb">fb.me/1NuSjW3kb</a></p>&mdash; GavickPro (@gavickpro) <a href="https://twitter.com/gavickpro/status/221189052983025666" data-datetime="2012-07-06T10:29:14+00:00">lipiec 6, 2012</a></blockquote><script src="//platform.twitter.com/widgets.js" charset="utf-8"></script>'),
(1070, 332, '_oembed_f9bc74e1e3446567c95fa9cd82064396', '<a href="http://www.flickr.com/photos/synectic/5489943396/"><img src="http://farm6.staticflickr.com/5171/5489943396_fe3742a0a0_n.jpg" alt="Gavick Calendar 2011 - March" width="320" height="200" /></a>'),
(1071, 207, '_encloseme', '1'),
(1072, 330, '_encloseme', '1'),
(1073, 335, '_encloseme', '1'),
(1074, 338, '_encloseme', '1'),
(1075, 349, '_encloseme', '1'),
(1076, 349, '_encloseme', '1'),
(1077, 351, '_encloseme', '1'),
(1078, 361, '_encloseme', '1'),
(1079, 364, '_encloseme', '1'),
(1080, 367, '_encloseme', '1'),
(1081, 377, '_encloseme', '1'),
(1082, 683, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-5.jpg'),
(1083, 683, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"217";s:6:"height";s:3:"206";s:14:"hwstring_small";s:23:"height=''96'' width=''101''";s:4:"file";s:59:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-5.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-5-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1084, 380, '_encloseme', '1'),
(1085, 685, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-6.jpg'),
(1086, 685, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"202";s:6:"height";s:3:"171";s:14:"hwstring_small";s:23:"height=''96'' width=''113''";s:4:"file";s:59:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-6.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-6-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1087, 382, '_encloseme', '1'),
(1088, 356, '_encloseme', '1'),
(1089, 688, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-7.jpg'),
(1090, 688, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"575";s:6:"height";s:3:"617";s:14:"hwstring_small";s:22:"height=''96'' width=''89''";s:4:"file";s:59:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-7.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-7-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-7-279x300.jpg";s:5:"width";s:3:"279";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1091, 689, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-8.jpg'),
(1092, 689, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"579";s:6:"height";s:3:"234";s:14:"hwstring_small";s:23:"height=''51'' width=''128''";s:4:"file";s:59:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-8.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-8-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-8-300x121.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"121";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1093, 690, '_wp_attached_file', '2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-2.jpg'),
(1094, 690, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"814";s:6:"height";s:3:"315";s:14:"hwstring_small";s:23:"height=''49'' width=''128''";s:4:"file";s:56:"2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-2.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:56:"Edit-Post-‹-Meet-Gavern-WP-—-WordPress-2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:56:"Edit-Post-‹-Meet-Gavern-WP-—-WordPress-2-300x116.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"116";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1095, 413, '_encloseme', '1'),
(1096, 692, '_wp_attached_file', '2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-3.jpg'),
(1097, 692, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"810";s:6:"height";s:3:"554";s:14:"hwstring_small";s:23:"height=''87'' width=''128''";s:4:"file";s:56:"2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-3.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:56:"Edit-Post-‹-Meet-Gavern-WP-—-WordPress-3-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:56:"Edit-Post-‹-Meet-Gavern-WP-—-WordPress-3-300x205.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"205";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1098, 422, '_encloseme', '1'),
(1099, 408, '_encloseme', '1'),
(1100, 695, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-9.jpg'),
(1101, 695, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"555";s:6:"height";s:3:"223";s:14:"hwstring_small";s:23:"height=''51'' width=''128''";s:4:"file";s:59:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-9.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-9-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-9-300x120.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"120";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1102, 397, '_encloseme', '1'),
(1103, 697, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-10.jpg'),
(1104, 697, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"686";s:6:"height";s:3:"341";s:14:"hwstring_small";s:23:"height=''63'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-10.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-10-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-10-300x149.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"149";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1105, 698, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-11.jpg'),
(1106, 698, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"716";s:6:"height";s:3:"185";s:14:"hwstring_small";s:23:"height=''33'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-11.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-11-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-11-300x77.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"77";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1107, 699, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-12.jpg'),
(1108, 699, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"545";s:6:"height";s:2:"96";s:14:"hwstring_small";s:23:"height=''22'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-12.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-12-150x96.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"96";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-12-300x52.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"52";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1109, 700, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-13.jpg'),
(1110, 700, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"558";s:6:"height";s:3:"199";s:14:"hwstring_small";s:23:"height=''45'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-13.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-13-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-13-300x106.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"106";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1111, 394, '_encloseme', '1'),
(1112, 702, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-14.jpg'),
(1113, 702, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"571";s:6:"height";s:3:"355";s:14:"hwstring_small";s:23:"height=''79'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-14.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-14-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-14-300x186.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"186";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1114, 404, '_encloseme', '1'),
(1115, 404, '_encloseme', '1'),
(1116, 705, '_wp_attached_file', '2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-4.jpg'),
(1117, 705, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"474";s:6:"height";s:3:"118";s:14:"hwstring_small";s:23:"height=''31'' width=''128''";s:4:"file";s:56:"2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-4.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:56:"Edit-Post-‹-Meet-Gavern-WP-—-WordPress-4-150x118.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"118";}s:6:"medium";a:3:{s:4:"file";s:55:"Edit-Post-‹-Meet-Gavern-WP-—-WordPress-4-300x74.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"74";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1118, 706, '_wp_attached_file', '2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-5.jpg'),
(1119, 706, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"265";s:6:"height";s:3:"353";s:14:"hwstring_small";s:22:"height=''96'' width=''72''";s:4:"file";s:56:"2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-5.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:56:"Edit-Post-‹-Meet-Gavern-WP-—-WordPress-5-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:56:"Edit-Post-‹-Meet-Gavern-WP-—-WordPress-5-225x300.jpg";s:5:"width";s:3:"225";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1120, 386, '_encloseme', '1'),
(1121, 386, '_encloseme', '1'),
(1122, 709, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-15.jpg'),
(1123, 709, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"548";s:6:"height";s:3:"539";s:14:"hwstring_small";s:22:"height=''96'' width=''97''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-15.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-15-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-15-300x295.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"295";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1124, 710, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-16.jpg'),
(1125, 710, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"537";s:6:"height";s:2:"99";s:14:"hwstring_small";s:23:"height=''23'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-16.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-16-150x99.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"99";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-16-300x55.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"55";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1126, 401, '_encloseme', '1'),
(1127, 712, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-17.jpg'),
(1128, 712, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"178";s:6:"height";s:3:"161";s:14:"hwstring_small";s:23:"height=''96'' width=''106''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-17.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-17-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1129, 713, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-18.jpg'),
(1130, 713, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"681";s:6:"height";s:3:"519";s:14:"hwstring_small";s:23:"height=''96'' width=''125''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-18.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-18-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-18-300x228.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"228";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1131, 384, '_encloseme', '1'),
(1132, 715, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-19.jpg'),
(1133, 715, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"711";s:6:"height";s:3:"335";s:14:"hwstring_small";s:23:"height=''60'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-19.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-19-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-19-300x141.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"141";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1134, 716, '_wp_attached_file', '2012/07/Meet-Gavern-WP-›-Log-In.jpg'),
(1135, 716, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"379";s:6:"height";s:3:"459";s:14:"hwstring_small";s:22:"height=''96'' width=''79''";s:4:"file";s:37:"2012/07/Meet-Gavern-WP-›-Log-In.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"Meet-Gavern-WP-›-Log-In-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"Meet-Gavern-WP-›-Log-In-247x300.jpg";s:5:"width";s:3:"247";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1136, 717, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-20.jpg'),
(1137, 717, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"172";s:6:"height";s:2:"68";s:14:"hwstring_small";s:23:"height=''50'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-20.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-20-150x68.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"68";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1138, 392, '_encloseme', '1'),
(1139, 410, '_encloseme', '1'),
(1140, 720, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-21.jpg'),
(1141, 720, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"641";s:6:"height";s:3:"489";s:14:"hwstring_small";s:23:"height=''96'' width=''125''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-21.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-21-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-21-300x228.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"228";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1142, 721, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-22.jpg'),
(1143, 721, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"546";s:6:"height";s:2:"92";s:14:"hwstring_small";s:23:"height=''21'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-22.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-22-150x92.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"92";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-22-300x50.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"50";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1144, 722, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-23.jpg');
INSERT INTO `wp_postmeta` (`meta_id`, `post_id`, `meta_key`, `meta_value`) VALUES
(1145, 722, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"582";s:6:"height";s:2:"83";s:14:"hwstring_small";s:23:"height=''18'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-23.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-23-150x83.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"83";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-23-300x42.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"42";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1146, 723, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-24.jpg'),
(1147, 723, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"605";s:6:"height";s:2:"95";s:14:"hwstring_small";s:23:"height=''20'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-24.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-24-150x95.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"95";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-24-300x47.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"47";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1148, 724, '_wp_attached_file', '2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-26.jpg'),
(1149, 724, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"652";s:6:"height";s:3:"147";s:14:"hwstring_small";s:23:"height=''28'' width=''128''";s:4:"file";s:60:"2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-26.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:60:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-26-150x147.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"147";}s:6:"medium";a:3:{s:4:"file";s:59:"MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-26-300x67.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"67";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1150, 410, '_encloseme', '1'),
(1151, 726, '_wp_attached_file', '2012/08/dec_wallpaper.jpeg'),
(1152, 726, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"580";s:6:"height";s:3:"210";s:14:"hwstring_small";s:23:"height=''46'' width=''128''";s:4:"file";s:26:"2012/08/dec_wallpaper.jpeg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"dec_wallpaper-150x150.jpeg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"dec_wallpaper-300x108.jpeg";s:5:"width";s:3:"300";s:6:"height";s:3:"108";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1153, 727, '_wp_attached_file', '2012/08/nov_wallpaper.jpeg'),
(1154, 727, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"580";s:6:"height";s:3:"210";s:14:"hwstring_small";s:23:"height=''46'' width=''128''";s:4:"file";s:26:"2012/08/nov_wallpaper.jpeg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"nov_wallpaper-150x150.jpeg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"nov_wallpaper-300x108.jpeg";s:5:"width";s:3:"300";s:6:"height";s:3:"108";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1155, 728, '_wp_attached_file', '2012/08/oct_wallpaper.jpeg'),
(1156, 728, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"580";s:6:"height";s:3:"210";s:14:"hwstring_small";s:23:"height=''46'' width=''128''";s:4:"file";s:26:"2012/08/oct_wallpaper.jpeg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"oct_wallpaper-150x150.jpeg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"oct_wallpaper-300x108.jpeg";s:5:"width";s:3:"300";s:6:"height";s:3:"108";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1157, 726, '_wp_attachment_image_alt', 'December wallpaper'),
(1158, 727, '_wp_attachment_image_alt', 'November wallpaper'),
(1159, 728, '_wp_attachment_image_alt', 'October wallpaper'),
(1160, 730, '_edit_last', '1'),
(1161, 730, '_edit_lock', '1345966288:1'),
(1162, 739, '_edit_last', '1'),
(1163, 739, '_edit_lock', '1361284566:1'),
(1164, 739, 'Post note', 'Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Nulla vitae elit libero, a pharetra augue. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.'),
(1165, 739, 'Post last updated by', 'Dziudek'),
(1166, 739, 'Post will be removed on', 'Next Monday'),
(1169, 739, '_encloseme', '1'),
(1170, 207, '_encloseme', '1'),
(1171, 742, '_edit_last', '1'),
(1172, 742, '_wp_page_template', 'template.latest.php'),
(1173, 742, '_edit_lock', '1353449672:1'),
(1174, 744, '_menu_item_type', 'post_type'),
(1175, 744, '_menu_item_menu_item_parent', '581'),
(1176, 744, '_menu_item_object_id', '742'),
(1177, 744, '_menu_item_object', 'page'),
(1178, 744, '_menu_item_target', ''),
(1179, 744, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(1180, 744, '_menu_item_xfn', ''),
(1181, 744, '_menu_item_url', ''),
(1183, 207, '_encloseme', '1'),
(1184, 746, '_wp_attached_file', '2012/09/favicon.ico'),
(1185, 746, '_wp_attachment_metadata', 'a:0:{}'),
(1186, 207, '_encloseme', '1'),
(1187, 207, '_encloseme', '1'),
(1189, 207, '_encloseme', '1'),
(1197, 419, '_encloseme', '1'),
(1198, 419, '_encloseme', '1'),
(1199, 419, '_encloseme', '1'),
(1200, 756, '_edit_last', '1'),
(1201, 756, '_edit_lock', '1358953593:1'),
(1202, 756, '_wp_page_template', 'default'),
(1203, 758, '_edit_last', '1'),
(1204, 758, '_edit_lock', '1353422195:1'),
(1205, 759, '_wp_attached_file', '2012/11/comments2.jpg'),
(1206, 759, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"265";s:6:"height";s:3:"247";s:14:"hwstring_small";s:23:"height=''96'' width=''102''";s:4:"file";s:21:"2012/11/comments2.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"comments2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1207, 760, '_wp_attached_file', '2012/11/comments1.jpg'),
(1208, 760, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"317";s:6:"height";s:3:"520";s:14:"hwstring_small";s:22:"height=''96'' width=''58''";s:4:"file";s:21:"2012/11/comments1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"comments1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"comments1-182x300.jpg";s:5:"width";s:3:"182";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1209, 758, '_wp_page_template', 'default'),
(1210, 765, '_edit_last', '1'),
(1211, 765, '_edit_lock', '1353422384:1'),
(1212, 766, '_wp_attached_file', '2012/11/nsp2.jpeg'),
(1213, 766, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"681";s:6:"height";s:3:"623";s:14:"hwstring_small";s:23:"height=''96'' width=''104''";s:4:"file";s:17:"2012/11/nsp2.jpeg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"nsp2-150x150.jpeg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"nsp2-300x274.jpeg";s:5:"width";s:3:"300";s:6:"height";s:3:"274";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1214, 767, '_wp_attached_file', '2012/11/nsp1.jpg'),
(1215, 767, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"800";s:6:"height";s:3:"468";s:14:"hwstring_small";s:23:"height=''74'' width=''128''";s:4:"file";s:16:"2012/11/nsp1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"nsp1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:16:"nsp1-300x175.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"175";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1216, 765, '_wp_page_template', 'default'),
(1217, 770, '_edit_last', '1'),
(1218, 770, '_edit_lock', '1353422532:1'),
(1219, 771, '_wp_attached_file', '2012/11/social_icons.jpg'),
(1220, 771, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:2:"66";s:6:"height";s:3:"197";s:14:"hwstring_small";s:22:"height=''96'' width=''32''";s:4:"file";s:24:"2012/11/social_icons.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"social_icons-66x150.jpg";s:5:"width";s:2:"66";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1221, 772, '_wp_attached_file', '2012/11/social1.jpg'),
(1222, 772, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"266";s:6:"height";s:3:"306";s:14:"hwstring_small";s:22:"height=''96'' width=''83''";s:4:"file";s:19:"2012/11/social1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"social1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"social1-260x300.jpg";s:5:"width";s:3:"260";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1223, 770, '_wp_page_template', 'default'),
(1224, 774, '_edit_last', '1'),
(1225, 774, '_edit_lock', '1353422668:1'),
(1226, 775, '_wp_attached_file', '2012/11/tabs3.jpg'),
(1227, 775, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"299";s:6:"height";s:3:"260";s:14:"hwstring_small";s:23:"height=''96'' width=''110''";s:4:"file";s:17:"2012/11/tabs3.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"tabs3-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1228, 776, '_wp_attached_file', '2012/11/tabs2.jpg'),
(1229, 776, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"263";s:6:"height";s:3:"310";s:14:"hwstring_small";s:22:"height=''96'' width=''81''";s:4:"file";s:17:"2012/11/tabs2.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"tabs2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"tabs2-254x300.jpg";s:5:"width";s:3:"254";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1230, 777, '_wp_attached_file', '2012/11/tabs1.jpg'),
(1231, 777, '_wp_attachment_metadata', 'a:6:{s:5:"width";s:3:"316";s:6:"height";s:3:"288";s:14:"hwstring_small";s:23:"height=''96'' width=''105''";s:4:"file";s:17:"2012/11/tabs1.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"tabs1-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"tabs1-300x273.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"273";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}'),
(1232, 774, '_wp_page_template', 'default'),
(1233, 780, '_menu_item_type', 'post_type'),
(1234, 780, '_menu_item_menu_item_parent', '585'),
(1235, 780, '_menu_item_object_id', '756'),
(1236, 780, '_menu_item_object', 'page'),
(1237, 780, '_menu_item_target', ''),
(1238, 780, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(1239, 780, '_menu_item_xfn', ''),
(1240, 780, '_menu_item_url', ''),
(1242, 781, '_menu_item_type', 'post_type'),
(1243, 781, '_menu_item_menu_item_parent', '780'),
(1244, 781, '_menu_item_object_id', '774'),
(1245, 781, '_menu_item_object', 'page'),
(1246, 781, '_menu_item_target', ''),
(1247, 781, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(1248, 781, '_menu_item_xfn', ''),
(1249, 781, '_menu_item_url', ''),
(1251, 782, '_menu_item_type', 'post_type'),
(1252, 782, '_menu_item_menu_item_parent', '780'),
(1253, 782, '_menu_item_object_id', '770'),
(1254, 782, '_menu_item_object', 'page'),
(1255, 782, '_menu_item_target', ''),
(1256, 782, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(1257, 782, '_menu_item_xfn', ''),
(1258, 782, '_menu_item_url', ''),
(1260, 783, '_menu_item_type', 'post_type'),
(1261, 783, '_menu_item_menu_item_parent', '780'),
(1262, 783, '_menu_item_object_id', '765'),
(1263, 783, '_menu_item_object', 'page'),
(1264, 783, '_menu_item_target', ''),
(1265, 783, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(1266, 783, '_menu_item_xfn', ''),
(1267, 783, '_menu_item_url', ''),
(1269, 784, '_menu_item_type', 'post_type'),
(1270, 784, '_menu_item_menu_item_parent', '780'),
(1271, 784, '_menu_item_object_id', '758'),
(1272, 784, '_menu_item_object', 'page'),
(1273, 784, '_menu_item_target', ''),
(1274, 784, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(1275, 784, '_menu_item_xfn', ''),
(1276, 784, '_menu_item_url', ''),
(1282, 599, '_encloseme', '1'),
(1283, 599, '_encloseme', '1'),
(1291, 595, '_oembed_f54e6b7e3cf6f9c25803002b6650fba5', '<iframe src="http://player.vimeo.com/video/22126094" width="500" height="213" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>'),
(1293, 609, '_encloseme', '1'),
(1294, 609, '_encloseme', '1'),
(1295, 607, '_encloseme', '1'),
(1296, 607, '_encloseme', '1'),
(1297, 607, '_encloseme', '1'),
(1298, 607, '_encloseme', '1'),
(1299, 607, '_encloseme', '1'),
(1301, 332, '_oembed_dc3b7dfd18538548184c78091b1bd939', '<iframe width="500" height="281" src="http://www.youtube.com/embed/MdrC7kYTAX4?feature=oembed" frameborder="0" allowfullscreen></iframe>'),
(1302, 332, '_oembed_3420f2aa0c8eca520ca48e43a0c67d03', '<blockquote class="twitter-tweet" width="500" lang="pl"><p>What is your favorite demo toolbar? <a href="http://t.co/tkN72PH5" title="http://bit.ly/demo_toolbar">bit.ly/demo_toolbar</a> <a href="http://t.co/RAXXHm4L" title="http://fb.me/1NuSjW3kb">fb.me/1NuSjW3kb</a></p>&mdash; GavickPro (@gavickpro) <a href="https://twitter.com/gavickpro/status/221189052983025666" data-datetime="2012-07-06T10:29:14+00:00">lipiec 6, 2012</a></blockquote><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>'),
(1303, 332, '_oembed_647e28c8af9655c5cb3dc69838783e64', '<a href="http://www.flickr.com/photos/synectic/5489943396/"><img src="http://farm6.staticflickr.com/5171/5489943396_fe3742a0a0_n.jpg" alt="Gavick Calendar 2011 - March" width="320" height="200" /></a>'),
(1304, 121, 'gavern-post-desc', ''),
(1305, 121, 'gavern-post-keywords', ''),
(1306, 777, '_edit_lock', '1359225689:1'),
(1308, 739, '_encloseme', '1'),
(1309, 739, 'gavern-post-desc', ''),
(1310, 739, 'gavern-post-keywords', ''),
(1311, 739, '_encloseme', '1'),
(1312, 728, '_edit_lock', '1359974114:1'),
(1313, 727, '_edit_lock', '1359974136:1'),
(1314, 726, '_edit_lock', '1359974146:1'),
(1315, 739, '_encloseme', '1'),
(1316, 739, '_encloseme', '1'),
(1317, 739, '_encloseme', '1'),
(1318, 739, '_encloseme', '1'),
(1319, 739, 'gavern-post-params-title', 'Y'),
(1320, 739, '_encloseme', '1'),
(1321, 739, '_encloseme', '1'),
(1325, 609, 'gavern-post-params-title', 'Y'),
(1326, 609, '_encloseme', '1'),
(1327, 609, '_encloseme', '1');

-- --------------------------------------------------------

--
-- Table structure for table `wp_posts`
--

CREATE TABLE IF NOT EXISTS `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(20) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=818 ;

--
-- Dumping data for table `wp_posts`
--

INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(13, 1, '2011-08-12 13:08:03', '2011-08-12 13:08:03', 'It is a simple description', 'Bigger Gavick Logo', 'It is a simple caption', 'inherit', 'open', 'open', '', 'logo_gavick_bigger', '', '', '2011-08-12 13:08:03', '2011-08-12 13:08:03', '', 0, 'http://wp1/wp-content/uploads/2011/08/logo_gavick_bigger.jpg', 0, 'attachment', 'image/jpeg', 0),
(56, 1, '2011-12-27 00:25:03', '2011-12-27 00:25:03', 'It is an example login page where the login form is displayed.', 'Login page', '', 'publish', 'open', 'closed', '', 'login-page', '', '', '2012-08-11 09:39:33', '2012-08-11 09:39:33', '', 0, 'http://wp1/?page_id=56', 0, 'page', '', 0),
(57, 1, '2011-12-27 00:25:00', '2011-12-27 00:25:00', '', 'Login test', '', 'inherit', 'open', 'open', '', '56-revision', '', '', '2011-12-27 00:25:00', '2011-12-27 00:25:00', '', 56, 'http://wp1/?p=57', 0, 'revision', '', 0),
(59, 1, '2011-12-29 11:33:10', '2011-12-29 11:33:10', ' ', '', '', 'publish', 'open', 'open', '', '59', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=59', 8, 'nav_menu_item', '', 0),
(72, 1, '2012-01-18 14:52:34', '2012-01-18 14:52:34', 'Lorem ipsum ;)', 'Login test', '', 'inherit', 'open', 'open', '', '56-autosave', '', '', '2012-01-18 14:52:34', '2012-01-18 14:52:34', '', 56, 'http://wp1/?p=72', 0, 'revision', '', 0),
(74, 1, '2012-01-18 20:36:26', '2012-01-18 20:36:26', 'Hello, feel free to write us your opinion/suggestions about our theme ;-)', 'Contact page', '', 'publish', 'open', 'open', '', 'contact-page', '', '', '2012-08-12 17:26:05', '2012-08-12 17:26:05', '', 0, 'http://wp1/?page_id=74', 0, 'page', '', 0),
(75, 1, '2012-01-18 20:36:01', '2012-01-18 20:36:01', '', 'Contact us', '', 'inherit', 'open', 'open', '', '74-revision', '', '', '2012-01-18 20:36:01', '2012-01-18 20:36:01', '', 74, 'http://wp1/?p=75', 0, 'revision', '', 0),
(76, 1, '2012-01-18 20:37:05', '2012-01-18 20:37:05', ' ', '', '', 'publish', 'open', 'open', '', '76', '', '', '2012-11-20 14:47:02', '2012-11-20 14:47:02', '', 0, 'http://wp1/?p=76', 4, 'nav_menu_item', '', 0),
(107, 1, '2012-05-15 14:14:40', '2012-05-15 14:14:40', 'It is an example page with archive links.', 'Archive Page', '', 'publish', 'open', 'closed', '', 'archive-page', '', '', '2013-01-06 18:15:58', '2013-01-06 18:15:58', '', 0, 'http://wp1/?page_id=107', 0, 'page', '', 0),
(109, 1, '2012-05-15 14:14:56', '2012-05-15 14:14:56', ' ', '', '', 'publish', 'open', 'open', '', '109', '', '', '2012-11-20 14:47:02', '2012-11-20 14:47:02', '', 0, 'http://wp1/?p=109', 3, 'nav_menu_item', '', 0),
(112, 1, '2012-05-24 12:32:40', '2012-05-24 12:32:40', 'It is an example of the template tag cloud.', 'Tag cloud page', '', 'publish', 'open', 'closed', '', 'tag-cloud-page', '', '', '2012-08-11 09:39:57', '2012-08-11 09:39:57', '', 0, 'http://wp1/?page_id=112', 0, 'page', '', 0),
(113, 1, '2012-05-24 12:32:11', '2012-05-24 12:32:11', '', 'Tag cloud', '', 'inherit', 'open', 'open', '', '112-revision', '', '', '2012-05-24 12:32:11', '2012-05-24 12:32:11', '', 112, 'http://wp1/?p=113', 0, 'revision', '', 0),
(114, 1, '2013-02-05 21:04:54', '2013-02-05 21:04:54', 'It is an example of the template tag cloud.', 'Tag cloud page', '', 'inherit', 'open', 'open', '', '112-autosave', '', '', '2013-02-05 21:04:54', '2013-02-05 21:04:54', '', 112, 'http://wp1/?p=114', 0, 'revision', '', 0),
(115, 1, '2012-05-24 12:34:02', '2012-05-24 12:34:02', ' ', '', '', 'publish', 'open', 'open', '', '115', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=115', 9, 'nav_menu_item', '', 0),
(121, 1, '2012-05-24 20:00:40', '2012-05-24 20:00:40', 'It is an example gallery page.\r\n\r\n[notice]<strong>Tip:</strong> to create the gallery please use attachments from the Media library.[/notice]', 'Gallery page', '', 'publish', 'open', 'closed', '', 'gallery-page', '', '', '2013-01-24 12:06:38', '2013-01-24 12:06:38', '', 0, 'http://wp1/?page_id=121', 0, 'page', '', 0),
(123, 1, '2012-05-24 20:00:50', '2012-05-24 20:00:50', ' ', '', '', 'publish', 'open', 'open', '', '123', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=123', 6, 'nav_menu_item', '', 0),
(124, 1, '2011-12-27 00:25:03', '2011-12-27 00:25:03', 'Lorem ipsum ;)', 'Login test', '', 'inherit', 'open', 'open', '', '56-revision-2', '', '', '2011-12-27 00:25:03', '2011-12-27 00:25:03', '', 56, 'http://wp1/?p=124', 0, 'revision', '', 0),
(125, 1, '2012-01-18 20:36:26', '2012-01-18 20:36:26', 'Hello Mate :) Feel free to write us your opinion about our amazing template :)', 'Contact us', '', 'inherit', 'open', 'open', '', '74-revision-2', '', '', '2012-01-18 20:36:26', '2012-01-18 20:36:26', '', 74, 'http://wp1/?p=125', 0, 'revision', '', 0),
(127, 1, '2012-06-06 12:19:54', '2012-06-06 12:19:54', '', 'Home', '', 'publish', 'open', 'open', '', 'home', '', '', '2012-11-20 14:47:02', '2012-11-20 14:47:02', '', 0, 'http://wp1/?p=127', 1, 'nav_menu_item', '', 0),
(130, 1, '2013-01-06 18:20:29', '2013-01-06 18:20:29', 'It is an example page with archive links.', 'Archive Page', '', 'inherit', 'open', 'open', '', '107-autosave', '', '', '2013-01-06 18:20:29', '2013-01-06 18:20:29', '', 107, 'http://wp1/?p=130', 0, 'revision', '', 0),
(131, 1, '2012-06-11 14:01:53', '2012-06-11 14:01:53', 'It is an example full width page - there is no sidebar.\r\n\r\nDonec id elit non mi porta gravida at eget metus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Donec sed odio dui. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Donec id elit non mi porta gravida at eget metus. Nulla vitae elit libero, a pharetra augue. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla sed consectetur. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Maecenas sed diam eget risus varius blandit sit amet non magna. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit. Vestibulum id ligula porta felis euismod semper. Donec id elit non mi porta gravida at eget metus. Donec ullamcorper nulla non metus auctor fringilla. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Curabitur blandit tempus porttitor. Donec sed odio dui. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Curabitur blandit tempus porttitor. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras mattis consectetur purus sit amet fermentum. Curabitur blandit tempus porttitor. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nulla vitae elit libero, a pharetra augue. Donec ullamcorper nulla non metus auctor fringilla. Sed posuere consectetur est at lobortis. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec sed odio dui. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Sed posuere consectetur est at lobortis. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Lorem ipsum dolor sit amet, consectetur adipiscing elit.', 'Full width page', '', 'publish', 'open', 'closed', '', 'full-width-page', '', '', '2012-08-11 09:38:13', '2012-08-11 09:38:13', '', 0, 'http://wp1/?page_id=131', 0, 'page', '', 0),
(132, 1, '2012-06-11 14:01:44', '2012-06-11 14:01:44', '', 'Full width', '', 'inherit', 'open', 'open', '', '131-revision', '', '', '2012-06-11 14:01:44', '2012-06-11 14:01:44', '', 131, 'http://wp1/?p=132', 0, 'revision', '', 0),
(133, 1, '2012-06-12 13:56:24', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-12 13:56:24', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=133', 0, 'post', '', 0),
(137, 1, '2012-06-14 12:30:38', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-14 12:30:38', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=137', 0, 'post', '', 0),
(183, 1, '2012-06-25 11:06:29', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:06:29', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=183', 0, 'post', '', 0),
(184, 1, '2012-06-25 11:08:09', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:08:09', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=184', 0, 'post', '', 0),
(185, 1, '2012-06-25 11:08:37', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:08:37', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=185', 0, 'post', '', 0),
(186, 1, '2012-06-25 11:09:24', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:09:24', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=186', 0, 'post', '', 0),
(187, 1, '2012-06-25 11:10:51', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:10:51', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=187', 0, 'post', '', 0),
(188, 1, '2012-06-25 11:11:18', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:11:18', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=188', 0, 'post', '', 0),
(189, 1, '2012-06-25 11:11:42', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:11:42', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=189', 0, 'post', '', 0),
(190, 1, '2012-06-25 11:15:30', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:15:30', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=190', 0, 'post', '', 0),
(191, 1, '2012-06-25 11:16:20', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:16:20', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=191', 0, 'post', '', 0),
(192, 1, '2012-06-25 11:23:21', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:23:21', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=192', 0, 'post', '', 0),
(193, 1, '2012-06-25 11:24:02', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:24:02', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=193', 0, 'post', '', 0),
(194, 1, '2012-06-25 11:28:15', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:28:15', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=194', 0, 'post', '', 0),
(195, 1, '2012-06-25 11:28:42', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:28:42', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=195', 0, 'post', '', 0),
(196, 1, '2012-06-25 11:28:53', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:28:53', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=196', 0, 'post', '', 0),
(197, 1, '2012-06-25 11:29:30', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:29:30', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=197', 0, 'post', '', 0),
(198, 1, '2012-06-25 11:29:40', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:29:40', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=198', 0, 'post', '', 0),
(199, 1, '2012-06-25 11:29:57', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:29:57', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=199', 0, 'post', '', 0),
(200, 1, '2012-06-25 11:30:17', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:30:17', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=200', 0, 'post', '', 0),
(201, 1, '2012-06-25 11:31:12', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:31:12', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=201', 0, 'post', '', 0),
(202, 1, '2012-06-25 11:31:20', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:31:20', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=202', 0, 'post', '', 0),
(203, 1, '2012-06-25 11:31:28', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:31:28', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=203', 0, 'post', '', 0),
(204, 1, '2012-06-25 11:31:33', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:31:33', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=204', 0, 'post', '', 0),
(205, 1, '2012-06-25 11:32:37', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:32:37', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=205', 0, 'post', '', 0),
(206, 1, '2012-06-25 11:33:43', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-25 11:33:43', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=206', 0, 'post', '', 0),
(207, 1, '2012-06-25 11:42:54', '2012-06-25 11:42:54', 'GavernWP allows to access a lot of additional typography elements created with <a title="Shortcode API" href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> use. The use is very simple thanks to <a title="Typography button" href="http://demo.gavick.com/wordpress/meetgavernwp/back-end-features/typography-button/" target="_blank">an additional button</a> in a posts editor. A typography description from a programistic side has been divided into two parts, namely: <a title="Typography API" href="http://demo.gavick.com/wordpress/meetgavernwp/template-api/typography-api/">front-end</a> and <a title="Typography API – back-end" href="http://demo.gavick.com/wordpress/meetgavernwp/back-end-api/typography-api-back-end/">back-end</a>.\r\n\r\nBelow, there are all elements available in theme''s typography. Typography elements can be divided into three main groups:\r\n<ul>\r\n	<li>typography elements,</li>\r\n	<li>interactive elements,</li>\r\n	<li>elements prepared especially for a particular theme.</li>\r\n</ul>\r\n<h2>Warnings / Infos / Notices / Errors</h2>\r\nThese elements are used for highlighting text fragments together with their importance / type of information by using appropriate colors.\r\n\r\n[warning]Warning text example using Shortcodes[/warning]\r\n\r\n[info]Info text example using Shortcodes[/info]\r\n\r\n[notice]Notice text example using Shortcodes[/notice]\r\n\r\n[error]Error text example using Shortcodes[/error]\r\n<h2>Labels</h2>\r\nLabels are useful for marking the importance of the text fragment or a word given. In the case of longer texts, we recommend to use elements from <em>Warnings / Infos / Notices</em> group.\r\n\r\nThis is a paragraph with the [label style="1"]labeled text[/label] using the first style.\r\n\r\nThis is a paragraph with the [label style="2"]labeled text[/label] using the second style.\r\n\r\nThis is a paragraph with the [label style="3"]labeled text[/label] using the third style.\r\n\r\nThis is a paragraph with the [label style="4"]labeled text[/label] using the fourth style.\r\n\r\nThis is a paragraph with the [label style="5"]labeled text[/label] using the fifth style.\r\n\r\nThis is a paragraph with the [label style="6"]labeled text[/label] using the sixth style.\r\n<h2>Badges</h2>\r\nBadges in their look are similar to Labels, however, you may use them mainly for highlighting shorter texts, e.g. numerical values.\r\n\r\nThis is a paragraph with the badge [badge style="1"]12[/badge] using the first style.\r\n\r\nThis is a paragraph with the badge [badge style="2"]12[/badge] using the second style.\r\n\r\nThis is a paragraph with the badge [badge style="3"]12[/badge] using the third style.\r\n\r\nThis is a paragraph with the badge [badge style="4"]12[/badge] using the fourth style.\r\n\r\nThis is a paragraph with the badge [badge style="5"]12[/badge] using the fifth style.\r\n\r\nThis is a paragraph with the badge [badge style="6"]12[/badge] using the sixth style.\r\n<h2>Code listings</h2>\r\nWe recommend to use an element creating code listings in one out of three styles available for presenting source codes:\r\n\r\n[code style="1"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n\r\n[code style="2"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n\r\n[code style="3"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n<h2>Text blocks</h2>\r\nText blocks are useful for generating an element highlighting a particular part of an  entry:\r\n\r\n[textblock style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[numblock num="01" style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="02" style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="03" style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="04" style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\nFusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. [floated align="left"]Lorem ipsum dolor sit amet[/floated]\r\n\r\nFusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. [floated align="right"]Lorem ipsum dolor sit amet[/floated]\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. [floated align="center"]Lorem ipsum dolor sit amet[/floated] Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\r\n<h2>Quote and Citations</h2>\r\nQuotes elements are useful for highlighting the author of a sentence given:\r\n\r\n[quote style="1" author="Author"]The content of the quote in style 1[/quote]\r\n\r\n[quote style="2" author="Author"]The content of the quote in style 2[/quote]\r\n\r\n[quote style="3" author="Author"]The content of the quote in style 3[/quote]\r\n\r\n[quote style="4" author="Author"]The content of the quote in style 4[/quote]\r\n\r\n[quote style="5" author="Author"]The content of the quote in style 5[/quote]\r\n<h2>Dropcap</h2>\r\nElements creating the first letter highlighted:\r\n\r\n[dropcap style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n\r\n[dropcap style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n\r\n[dropcap style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n<h2>Lists</h2>\r\nOrdered and unordered lists:\r\n<div class="gk-columns" data-column-count="4">\r\n<div>[olist style="1"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="2"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="3"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="4"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n</div>\r\n<div class="gk-columns" data-column-count="4">\r\n<div>[ulist style="1"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="2"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="3"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="4"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n</div>\r\n<h2>Buttons</h2>\r\nButtons in many different variations:\r\n\r\n[button style="1"]Your text[/button] [button style="2"]Your text[/button] [button style="3"]Your text[/button] [button style="4"]Your text[/button] [button style="5"]Your text[/button] [button style="6"]Your text[/button] [button style="7"]Your text[/button]\r\n\r\nThe same buttons as links:\r\n\r\n[button style="1" url="#"]Your text[/button] [button style="2" url="#"]Your text[/button] [button style="3" url="#"]Your text[/button] [button style="4" url="#"]Your text[/button] [button style="5" url="#"]Your text[/button] [button style="6" url="#"]Your text[/button] [button style="7" url="#"]Your text[/button]\r\n\r\n<h2>Legends</h2>\r\nElements with legend useful while creating text blocks in a frame provided with an appropriate title.\r\n\r\n[legend title="Legend style 1" style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 2" style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 3" style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 4" style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 5" style="5"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n<h2>Raw text</h2>\r\nAn element useful for generating text without formatting:\r\n\r\n[raw]Your text[/raw]\r\n<h2>Tooltips</h2>\r\nTooltips may occur in two forms: a link to a different website with a tooltip or a text connected with the text:\r\n\r\n[tip label="Default style" style="1" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Blue style" style="2" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Red style" style="3" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Green style" style="4" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Yellow style" style="5" href="URL"]Text of the tooltip[/tip]\r\n<h2>Other typography elements</h2>\r\nElements which could not be groupped to other categories.\r\n\r\nColumns allow to place text in multicolumn layout:\r\n\r\n[columns]\r\n[column]Content for the first column[/column]\r\n[column]Content for the second column[/column]\r\n[column]Content for the third column[/column]\r\n[/columns]\r\n\r\nYou can also adjust the columns width using the <strong>width</strong> attribute:\r\n\r\n[columns width="50,25,25"]\r\n[column]Content for the first column[/column]\r\n[column]Content for the second column[/column]\r\n[column]Content for the third column[/column]\r\n[/columns]\r\n\r\nToggle text - elements useful for creating blocks with text to toggle:\r\n\r\n[toggle header="Header text"]Cras mattis consectetur purus sit amet fermentum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Maecenas sed diam eget risus varius blandit sit amet non magna. Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit sit amet non magna. Maecenas sed diam eget risus varius blandit sit amet non magna. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Sed posuere consectetur est at lobortis.[/toggle]\r\n\r\n[toggle header="Header text" open="true"]Cras mattis consectetur purus sit amet fermentum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Maecenas sed diam eget risus varius blandit sit amet non magna. Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit sit amet non magna. Maecenas sed diam eget risus varius blandit sit amet non magna. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Sed posuere consectetur est at lobortis.[/toggle]\r\n\r\nShortcode pageurl allows to place an address to a blog:\r\n\r\n[pageurl]\r\n\r\nA link to a RSS channel:\r\n\r\n[rss href="URL"]Link text[/rss]\r\n\r\nA link to a PDF document:\r\n\r\n[pdf url="URL"]Text of the link[/pdf]\r\n\r\nA private note in an entry, visible for an author only:\r\n\r\n[note]Your private note[/note]\r\n\r\nMail illegible for bots creating data bases for spammers:\r\n\r\n[mail]email.to@obfuscate.com[/mail]\r\n\r\nContent visible for logged in users only:\r\n<div class="gk-members"><strong>Members only</strong>Content for the members only</div>\r\nRelated posts:\r\n\r\n[related limit="5"]', 'Typography', '', 'publish', 'open', 'open', '', 'typography', '', '', '2012-10-05 12:35:13', '2012-10-05 12:35:13', '', 0, 'http://wp1/?p=207', 0, 'post', '', 0),
(213, 1, '2012-09-10 09:40:36', '2012-09-10 09:40:36', 'GavernWP allows to access a lot of additional typography elements created with <a title="Shortcode API" href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> use. The use is very simple thanks to <a title="Typography button" href="http://demo.gavick.com/wordpress/meetgavernwp/back-end-features/typography-button/" target="_blank">an additional button</a> in a posts editor. A typography description from a programistic side has been divided into two parts, namely: <a title="Typography API" href="http://wp1/template-api/typography-api/">front-end</a> and <a title="Typography API – back-end" href="http://wp1/back-end-api/typography-api-back-end/">back-end</a>.\n\nBelow, there are all elements available in theme''s typography. Typography elements can be divided into three main groups:\n<ul>\n	<li>typography elements,</li>\n	<li>interactive elements,</li>\n	<li>elements prepared especially for a particular theme.</li>\n</ul>\n<h2>Warnings / Infos / Notices / Errors</h2>\nThese elements are used for highlighting text fragments together with their importance / type of information by using appropriate colors.\n\n[warning]Warning text example using Shortcodes[/warning]\n\n[info]Info text example using Shortcodes[/info]\n\n[notice]Notice text example using Shortcodes[/notice]\n\n[error]Error text example using Shortcodes[/error]\n<h2>Labels</h2>\nLabels are useful for marking the importance of the text fragment or a word given. In the case of longer texts, we recommend to use elements from <em>Warnings / Infos / Notices</em> group.\n\nThis is a paragraph with the [label style="1"]labeled text[/label] using the first style.\n\nThis is a paragraph with the [label style="2"]labeled text[/label] using the second style.\n\nThis is a paragraph with the [label style="3"]labeled text[/label] using the third style.\n\nThis is a paragraph with the [label style="4"]labeled text[/label] using the fourth style.\n\nThis is a paragraph with the [label style="5"]labeled text[/label] using the fifth style.\n\nThis is a paragraph with the [label style="6"]labeled text[/label] using the sixth style.\n<h2>Badges</h2>\nBadges in their look are similar to Labels, however, you may use them mainly for highlighting shorter texts, e.g. numerical values.\n\nThis is a paragraph with the badge [badge style="1"]12[/badge] using the first style.\n\nThis is a paragraph with the badge [badge style="2"]12[/badge] using the second style.\n\nThis is a paragraph with the badge [badge style="3"]12[/badge] using the third style.\n\nThis is a paragraph with the badge [badge style="4"]12[/badge] using the fourth style.\n\nThis is a paragraph with the badge [badge style="5"]12[/badge] using the fifth style.\n\nThis is a paragraph with the badge [badge style="6"]12[/badge] using the sixth style.\n<h2>Code listings</h2>\nWe recommend to use an element creating code listings in one out of three styles available for presenting source codes:\n\n[code style="1"]function helloWorld() {\n\nalert(''Hello World!'');\n\n}[/code]\n\n[code style="2"]function helloWorld() {\n\nalert(''Hello World!'');\n\n}[/code]\n\n[code style="3"]function helloWorld() {\n\nalert(''Hello World!'');\n\n}[/code]\n<h2>Text blocks</h2>\nText blocks are useful for generating an element highlighting a particular part of an  entry:\n\n[textblock style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\n\n[textblock style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\n\n[textblock style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\n\n[textblock style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\n\n[numblock num="01" style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\n\n[numblock num="02" style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\n\n[numblock num="03" style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\n\n[numblock num="04" style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\n\nFusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. [floated align="left"]Lorem ipsum dolor sit amet[/floated]\n\nFusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. [floated align="right"]Lorem ipsum dolor sit amet[/floated]\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. [floated align="center"]Lorem ipsum dolor sit amet[/floated] Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\n<h2>Quote and Citations</h2>\nQuotes elements are useful for highlighting the author of a sentence given:\n\n[quote style="1" author="Author"]The content of the quote in style 1[/quote]\n\n[quote style="2" author="Author"]The content of the quote in style 2[/quote]\n\n[quote style="3" author="Author"]The content of the quote in style 3[/quote]\n\n[quote style="4" author="Author"]The content of the quote in style 4[/quote]\n\n[quote style="5" author="Author"]The content of the quote in style 5[/quote]\n<h2>Dropcap</h2>\nElements creating the first letter highlighted:\n\n[dropcap style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\n\n[dropcap style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\n\n[dropcap style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\n<h2>Lists</h2>\nOrdered and unordered lists:\n<div class="gk-columns" data-column-count="4">\n<div>[olist style="1"]\nitem1\nitem2\nitem3\n[/olist]</div>\n<div>[olist style="2"]\nitem1\nitem2\nitem3\n[/olist]</div>\n<div>[olist style="3"]\nitem1\nitem2\nitem3\n[/olist]</div>\n<div>[olist style="4"]\nitem1\nitem2\nitem3\n[/olist]</div>\n</div>\n<div class="gk-columns" data-column-count="4">\n<div>[ulist style="1"]\nitem1\nitem2\nitem3\n[/ulist]</div>\n<div>[ulist style="2"]\nitem1\nitem2\nitem3\n[/ulist]</div>\n<div>[ulist style="3"]\nitem1\nitem2\nitem3\n[/ulist]</div>\n<div>[ulist style="4"]\nitem1\nitem2\nitem3\n[/ulist]</div>\n</div>\n<h2>Buttons</h2>\nButtons in many different variations:\n\n[button style="1"]Your text[/button] [button style="2"]Your text[/button] [button style="3"]Your text[/button] [button style="4"]Your text[/button] [button style="5"]Your text[/button] [button style="6"]Your text[/button] [button style="7"]Your text[/button]\n<h2>Legends</h2>\nElements with legend useful while creating text blocks in a frame provided with an appropriate title.\n\n[legend title="Legend style 1" style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\n\n[legend title="Legend style 2" style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\n\n[legend title="Legend style 3" style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\n\n[legend title="Legend style 4" style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\n\n[legend title="Legend style 5" style="5"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\n<h2>Raw text</h2>\nAn element useful for generating text without formatting:\n\n[raw]Your text[/raw]\n<h2>Tooltips</h2>\nTooltips may occur in two forms: a link to a different website with a tooltip or a text connected with the text:\n\n[tip label="Default style" style="1" href="URL"]Text of the tooltip[/tip]\n\n[tip label="Blue style" style="2" href="URL"]Text of the tooltip[/tip]\n\n[tip label="Red style" style="3" href="URL"]Text of the tooltip[/tip]\n\n[tip label="Green style" style="4" href="URL"]Text of the tooltip[/tip]\n\n[tip label="Yellow style" style="5" href="URL"]Text of the tooltip[/tip]\n<h2>Other typography elements</h2>\nElements which could not be groupped to other categories.\n\nColumns allow to place text in multicolumn layout:\n\n[columns]\n[column]Content for the first column[/column]\n[column]Content for the second column[/column]\n[column]Content for the third column[/column]\n[/columns]\n\nToggle text - elements useful for creating blocks with text to toggle:\n\n[toggle header="Header text"]Cras mattis consectetur purus sit amet fermentum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Maecenas sed diam eget risus varius blandit sit amet non magna. Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit sit amet non magna. Maecenas sed diam eget risus varius blandit sit amet non magna. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Sed posuere consectetur est at lobortis.[/toggle]\n\n[toggle header="Header text" open="true"]Cras mattis consectetur purus sit amet fermentum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Maecenas sed diam eget risus varius blandit sit amet non magna. Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit sit amet non magna. Maecenas sed diam eget risus varius blandit sit amet non magna. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Sed posuere consectetur est at lobortis.[/toggle]\n\nShortcode pageurl allows to place an address to a blog:\n\n[pageurl]\n\nA link to a RSS channel:\n\n[rss href="URL"]Link text[/rss]\n\nA link to a PDF document:\n\n[pdf url="URL"]Text of the link[/pdf]\n\nA private note in an entry, visible for an author only:\n\n[note]Your private note[/note]\n\nMail illegible for bots creating data bases for spammers:\n\n[mail]email.to@obfuscate.com[/mail]\n\nContent visible for logged in users only:\n<div class="gk-members"><strong>Members only</strong>Content for the members only</div>\nRelated posts:\n\n[related limit="5"]', 'Typography', '', 'inherit', 'open', 'open', '', '207-autosave', '', '', '2012-09-10 09:40:36', '2012-09-10 09:40:36', '', 207, 'http://wp1/uncategorized/207-autosave/', 0, 'revision', '', 0),
(246, 1, '2012-06-26 21:48:56', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-06-26 21:48:56', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=246', 0, 'post', '', 0),
(330, 1, '2012-07-08 09:30:56', '2012-07-08 09:30:56', 'Gavern Framework has a quite extensive files structure. It is similar to a standard structure of majority of the themes, however, because of many functionalities, there are some new elements.\r\n\r\n<!--more-->\r\n\r\nThe overall outline of files structure is presented below:\r\n<ol>\r\n	<li><strong>theme''s catalog</strong>\r\n<small>It includes all basic files and catalogs for a theme. It is worth seeing that Custom Pages templats have a <strong>theme.</strong> prefix at the beginning of their names which helps to find them in files structure.</small>\r\n<ol>\r\n	<li><strong>css</strong>\r\n<small>There are all CSS theme''s files in it. They are described in details in an entry about framework''s CSS code.\r\n</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>To have everything ordered, CSS files connected with an administration panel were placed in this catalog.\r\n</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>fonts</strong>\r\n<small>This catalog is used for storing files with additional fonts. You have to remember that each font must have its own catalog including a stylesheet.css file. More information about fonts service can be found in an entry about <strong>Fonts</strong> in an administration panel.<strong></strong>\r\n</small></li>\r\n	<li><strong>gavern</strong>\r\n<small>A catalog including the base of whole GavernWP framework work.\r\n</small>\r\n<ol>\r\n	<li><strong>classes</strong>\r\n<small>Files with supporting classes used in framework''s code.\r\n</small></li>\r\n	<li><strong>config</strong>\r\n<small>Files including framework''s configuration. It has to be remembered that there are additional catalogs used for making transalations.\r\n</small></li>\r\n	<li><strong>form_elements</strong>\r\n<small>It includes a main file with a code which generates basic form elements in an administration panel, as well as, catalogs with elements created by a user.\r\n</small></li>\r\n	<li><strong>helpers</strong>\r\n<small>A collection of classes connected with specific framework''s tasks, e.g. with generating layout fragments.\r\n</small></li>\r\n	<li><strong>layouts</strong>\r\n<small>Files used for generating HTML code of an administration panel.\r\n</small></li>\r\n	<li><strong>options</strong>\r\n<small>Files which store options of particular sections of theme''s administration panel. Similarly to <strong>config</strong> catalog; there are also additional catalogs used for making translations.<strong></strong>\r\n</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>images</strong>\r\n<small>Graphic files used with a theme\r\n</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>Files connected with an administration panel.\r\n</small></li>\r\n	<li><strong>headers</strong>\r\n<small>Default header''s images.\r\n</small></li>\r\n	<li><strong>post_formats</strong>\r\n<small>Images connected with entries formats.\r\n</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>js</strong>\r\n<small>JavaScript scripts files used in a thme\r\n</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>Likewise in <strong>css</strong> and <strong>images</strong> catalogs there are files included used in an administration panel.<strong></strong><strong></strong>\r\n</small></li>\r\n	<li><strong>templates</strong>\r\n<small>Additional JavaScript files used by some Custom Pages.\r\n</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>languages</strong>\r\n<small>Main files used for creating translations.\r\n</small></li>\r\n	<li><strong>layouts</strong>\r\n<small>Files used for generating subpages; they include elements which are used very often; e.g. a head section.\r\n</small></li>\r\n</ol>\r\n</li>\r\n</ol>\r\n&nbsp;', 'Framework structure', '', 'publish', 'open', 'open', '', 'framework-structure-2', '', '', '2012-08-12 17:59:18', '2012-08-12 17:59:18', '', 0, 'http://wp1/?p=330', 0, 'post', '', 0),
(331, 1, '2012-07-08 09:30:14', '2012-07-08 09:30:14', 'Framework GavernWP posiada dość rozbudowaną strukturę plików. Jest ona w dużej mierze podobna do standardowej struktury większości szablonów jednak z racji wielu funkcjonalności pojawiają się w niej nowe elementy.\n\n<!--more-->\n\nOgólney zarys struktury plików prezentuje się następująco:\n<ol>\n	<li>katalog szablonu\n<small>Zawiera on wszystkie podstawowe pliki i katalogi dla szablonu. Warto zauważyć, że szablony Custom Pages posiadają na poczatku nazwy prefiks <strong>template.</strong>, który ułatwia ich odnalezienie w strukturze plików.</small>\n<ol>\n	<li>css\n<small>Znajdują się w nim wszystkie pliki CSS szablonu. Zostały one dokładniej omówione we wpisie dotyczącym kodu CSS frameworka.</small>\n<ol>\n	<li>back-end\n<small>Dla większego porządku pliki CSS dotyczące panelu administracyjnego zostały umieszczone w tym katalogu.</small></li>\n</ol>\n</li>\n	<li>fonts\n<small>Katalog ten jest przeznaczony do przechowywania plików z dodatkowymi fontami. Należy pamiętać by każdy font posiadał swój katalog zawierający plik stylesheet.css. Więcej o obsłudze fontów zostało napisane we wpisie dotyczącym sekcji <strong>Fonts</strong> w panelu administracyjnym.</small></li>\n	<li>gavern\n<small>Katalog zawierający podstawę działania całego frameworka GavernWP.</small>\n<ol>\n	<li>classes\n<small>Pliki z klasami pomocniczymi, używanymi w kodzie frameworka.</small></li>\n	<li><strong>config</strong>\n<small>Pliki zawierające konfigurację frameworka. Należy pamiętać o tym, że stosowane są dodatkowe katalogi wykorzystywane do wykonywania tłumaczeń</small></li>\n	<li><strong>form_elements</strong>\n<small>Poza głównym plikiem zawierającym kod generujący podstawowe elementy formularzy w panelu administracyjnym, zawiera on katalogi z elementami stworzonymi przez użytkownika.</small></li>\n	<li><strong>helpers</strong>\n<small>Zbiór klas związanych z konkretnymi zadaniami frameworka np. generowaniem fragmentów layoutu.</small></li>\n	<li><strong>layouts</strong>\n<small>Pliki wykorzystywane do generowania kodu HTML panelu administracyjnego.</small></li>\n	<li><strong>options</strong>\n<small>Pliki przechowujące opcje poszczególnych sekcji panelu administracyjnego szablonu. Podobnie jak katalog <strong>config</strong> - tutaj także stosowane są dodatkowe katalogi wykorzystywane do wykonywania tłumaczeń.</small></li>\n</ol>\n</li>\n	<li><strong>images</strong>\n<small>Pliki graficzne wykorzystywane przez szablon</small>\n<ol>\n	<li><strong>back-end</strong>\n<small>Pliki związane z panelem administracyjnym</small></li>\n	<li><strong>headers</strong>\n<small>Domyślne grafiki headera</small></li>\n	<li><strong>post_formats</strong>\n<small>Grafiki związane z formatami wpisów.</small></li>\n</ol>\n</li>\n	<li><strong>js</strong>\n<small>Pliki skryptów JavaScript wykorzystywane w szablonie</small>\n<ol>\n	<li><strong>back-end</strong>\n<small>Podobnie jak w katalogach <strong>css</strong> oraz <strong>images</strong> zawarte są tutaj pliki wykorzystywane w panelu administracyjnym</small></li>\n	<li><strong>templates</strong>\n<small>Dodatkowe pliki JavaScript wykorzystywane przez niektóre Custom Pages</small></li>\n</ol>\n</li>\n	<li><strong>languages</strong>\n<small>Główne pliki wykorzystywane do tworzenia tłumaczeń</small></li>\n	<li><strong>layouts</strong>\n<small>Pliki wykorzystywane do generowania podstron - zawierają elementy, które są wielokrotnie wykorzystywane - np. sekcja head.</small></li>\n</ol>\n</li>\n</ol>', 'Framework structure', '', 'inherit', 'open', 'open', '', '330-revision', '', '', '2012-07-08 09:30:14', '2012-07-08 09:30:14', '', 330, 'http://wp1/uncategorized/330-revision/', 0, 'revision', '', 0),
(332, 1, '2012-07-08 09:38:19', '2012-07-08 09:38:19', 'oEmbeds is an important facility used while creating posts. Thanks to it, a user may embed in an entry easily, e.g. a movie from You Tube service by giving just a link to the movie - Wordpress will generate a movie from this link automatically.\r\n\r\nA few examples are presented below:\r\n\r\nYouTube\r\n\r\nhttp://www.youtube.com/watch?v=MdrC7kYTAX4\r\n\r\nTwitter\r\n\r\nhttps://twitter.com/gavickpro/status/221189052983025666\r\n\r\nFlickr\r\n\r\nhttp://www.flickr.com/photos/synectic/5489943396/', 'oEmbeds', '', 'publish', 'open', 'open', '', 'oembeds-2', '', '', '2012-08-12 17:56:37', '2012-08-12 17:56:37', '', 0, 'http://wp1/?p=332', 0, 'post', '', 0),
(333, 1, '2012-07-08 09:37:39', '2012-07-08 09:37:39', 'oEmbeds to ważne udogodnienie wykorzystywane przy tworzeniu postów. Dzięki nim użytkownik w łatwy sposób może osadzić we wpisie np. film z serwisu YouTube podając jedynie link do filmu - Wordpress automatycznie wygeneruje z takiego linka film.\n\nPrzykłady prezentujemy poniżej:\n\nhttp://www.youtube.com/watch?v=MdrC7kYTAX4\n\nhttps://twitter.com/gavickpro/status/221189052983025666\n\n&nbsp;', 'oEmbeds', '', 'inherit', 'open', 'open', '', '332-revision', '', '', '2012-07-08 09:37:39', '2012-07-08 09:37:39', '', 332, 'http://wp1/uncategorized/332-revision/', 0, 'revision', '', 0),
(334, 1, '2012-07-08 09:38:19', '2012-07-08 09:38:19', 'oEmbeds to ważne udogodnienie wykorzystywane przy tworzeniu postów. Dzięki nim użytkownik w łatwy sposób może osadzić we wpisie np. film z serwisu YouTube podając jedynie link do filmu - Wordpress automatycznie wygeneruje z takiego linka film.\r\n\r\nPrzykłady prezentujemy poniżej:\r\n\r\nhttp://www.youtube.com/watch?v=MdrC7kYTAX4\r\n\r\nhttps://twitter.com/gavickpro/status/221189052983025666\r\n\r\nhttp://www.flickr.com/photos/synectic/5489943396/', 'oEmbeds', '', 'inherit', 'open', 'open', '', '332-revision-2', '', '', '2012-07-08 09:38:19', '2012-07-08 09:38:19', '', 332, 'http://wp1/uncategorized/332-revision-2/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(335, 1, '2012-07-08 09:53:55', '2012-07-08 09:53:55', 'GavernWP has full support for making translations. Because of differences being a result of using JSON files for generating theme''s options, a theme''s translation should be done in three places:\r\n<ol>\r\n	<li>with files use from a languages catalog</li>\r\n	<li>by creating a catalog of a language given in a config catalog</li>\r\n	<li>by creating a catalog of a language given in an options catalog</li>\r\n</ol>\r\nThe first stage is a standard operation described in details in Wordpress documentation. Let''s focus on the two remaining stages then:\r\n\r\nGenerally, there is <strong>en_US</strong> catalog created in <strong>config</strong> and <strong>options</strong> catalogs which includes JSON configuration files in an English language. So, in order to translate a theme to a different language , you have to copy this catalog and change its name to a respective language used in your installation, e.g. <strong>pl_PL</strong>. Then, you have to change all phrases from the English language to your language.\r\n\r\nNOTE! You must not change the names of keys in JSON files, the same as, proper names because they are used for proper work and reading values.\r\n\r\ne.g. in a widgets.json file for a fragment:\r\n\r\n[code]{\r\n"name": "Top widgets",\r\n"id": "top",\r\n"description": "Widgets area on under the header of website",\r\n"before_widget": "&lt;div id=\\"%1$s\\" class=\\"box%2$s\\"&gt;",\r\n"after_widget": "&lt;/div&gt;",\r\n"before_title": "&lt;h3 class=\\"box-title\\"&gt;",\r\n"after_title": "&lt;/h3&gt;"\r\n},[/code]\r\n\r\nchange the following phrases only:\r\n<ul>\r\n	<li>"Top widgets"</li>\r\n	<li>"Widgets area on under the header of website"</li>\r\n</ul>\r\nAfter this operation, you will see sentences in your mother tongue in an administration panel.\r\n\r\nIt''s worth remembering that in the case when GavernWP will not find a catalog corresponding to the language set in configuration, there will be files used from <strong>en_US</strong> catalogs.', 'Translations', '', 'publish', 'open', 'open', '', 'translations', '', '', '2012-08-12 17:59:51', '2012-08-12 17:59:51', '', 0, 'http://wp1/?p=335', 0, 'post', '', 0),
(336, 1, '2012-07-08 09:53:22', '2012-07-08 09:53:22', 'GavernWP posiada pełne wsparcie dla wykonywania tłumaczeń. Z racji pewnych różnic wynikających z wykorzystania plików JSON do generowania opcji szablonu tłumaczenie szablonu powinno odbywać się w trzech miejscach:\n<ol>\n	<li>z użyciem plików z katalogu lanugages</li>\n	<li>poprzez stworzenie katalogu danego języka w katalogu config</li>\n	<li>poprzez stworzenie katalogu danego języka w katalogu options</li>\n</ol>\nPierwszy etap jest standardową operacją opisaną dokładnie w dokumentacji Wordpressa. Skupmy się zatem na pozostałych dwóch etapach:\n\nStandardowo w katalogach <strong>config</strong> i <strong>options</strong> stworzony jest katalog <strong>en_US</strong>, który zawiera pliki konfiguracyjne JSON w języku angielskim. Aby więc przetłumaczyć szablon na inny język należy skopiować ten katalog i zmienić mu nazwę na odpowiadającą językowi używanemu w naszej instalacji np. <strong>pl_PL</strong>. Następnie należy zmienić wszystkie frazy anglojęzyczne na te w naszym języku.\n\nUWAGA! Nie wolno zmieniać nazw kluczy w plikach JSON jak też nazw własnych, gdyż są one wykorzystywane do poprawnego działania i odczytywania wartości.\n\nPrzykładowo w pliku widgets.json dla fragmentu:\n\n[code]{\n"name": "Top widgets",\n"id": "top",\n"description": "Widgets area on under the header of website",\n"before_widget": "&lt;div id=\\"%1$s\\" class=\\"box%2$s\\"&gt;",\n"after_widget": "&lt;/div&gt;",\n"before_title": "&lt;h3 class=\\"box-title\\"&gt;",\n"after_title": "&lt;/h3&gt;"\n},[/code]\n\nzmieniamy tylko frazy:\n<ul>\n	<li>"Top widgets"</li>\n	<li>"Widgets area on under the header of website"</li>\n</ul>\nPo tak wykonanej operacji w panelu administracyjnym pojawią się zdania w naszym rodzimym języku.\n\nWarto też pamietać, że w wypadku gdy GavernWP nie znajdzie katalogu odpowiadającego ustawion', 'Translations', '', 'inherit', 'open', 'open', '', '335-revision', '', '', '2012-07-08 09:53:22', '2012-07-08 09:53:22', '', 335, 'http://wp1/uncategorized/335-revision/', 0, 'revision', '', 0),
(337, 1, '2012-08-12 17:28:52', '2012-08-12 17:28:52', 'GavernWP has full support for making translations. Because of differences being a result of using JSON files for generating template''s options, a template''s translation should be done in three places:\n<ol>\n	<li>with files use from a languages catalog</li>\n	<li>by creating a catalog of a language given in a config catalog</li>\n	<li>by creating a catalog of a language given in an options catalog</li>\n</ol>\nThe first stage is a standard operation described in details in Wordpress documentation. Let''s focus on the two remaining stages then:\n\nGenerally, there is <strong>en_US</strong> catalog created in <strong>config</strong> and <strong>options</strong> catalogs which includes JSON configuration files in an English language. So, in order to translate a template to a different language , you have to copy this catalog and change its name to a respective language used in your installation, e.g. <strong>pl_PL</strong>. Then, you have to change all phrases from the English language to your language.\n\nNOTE! You must not change the names of keys in JSON files, the same as, proper names because they are used for proper work and reading values.\n\ne.g. in a widgets.json file for a fragment:\n\n[code]{\n"name": "Top widgets",\n"id": "top",\n"description": "Widgets area on under the header of website",\n"before_widget": "&lt;div id=\\"%1$s\\" class=\\"box%2$s\\"&gt;",\n"after_widget": "&lt;/div&gt;",\n"before_title": "&lt;h3 class=\\"box-title\\"&gt;",\n"after_title": "&lt;/h3&gt;"\n},[/code]\n\nchange the following phrases only:\n<ul>\n	<li>"Top widgets"</li>\n	<li>"Widgets area on under the header of website"</li>\n</ul>\nAfter this operation, you will see sentences in your mother tongue in an administration panel.\n\nIt''s worth remembering that in the case when GavernWP will not find a catalog corresponding to the language set in configuration, there will be files used from <strong>en_US</strong> catalogs.', 'Translations', '', 'inherit', 'open', 'open', '', '335-autosave', '', '', '2012-08-12 17:28:52', '2012-08-12 17:28:52', '', 335, 'http://wp1/uncategorized/335-autosave/', 0, 'revision', '', 0),
(338, 1, '2012-07-08 10:07:26', '2012-07-08 10:07:26', 'In order to make GavernWP framework more flexible, we decided to use files in JSON format for storing thme''s configuration and options layout in an administration panel.\r\n\r\nYou may find files responsible for theme''s configuration in <strong>gavern/options/</strong> catalog:<strong></strong>\r\n<ul>\r\n	<li><strong>fonts.json</strong> - a file which stores theme''s groups of fonts. By default, there are three main gropus created. In order to create a new group, it is enough to add a next object to the object table existing in this file.plik przechowujący grupy czcionek szablonu.</li>\r\n	<li><strong>menus.json</strong> - you will find space for menu used in a theme in this file. You have to remember that except adding a new object, you have to add PHP code generating menu data in theme''s code. It is also worth remembering that there could be one main menu (<strong>main</strong> field in menu object).<strong></strong></li>\r\n	<li><strong>opengraph.json</strong> - this file includes configuration of fields used in a block connected with metabox which is used for generating Open Graph data. We do not recommend to make any changes in it before you get acquainted with Open Graph tags implementation in GavernWP framework.</li>\r\n	<li><strong>styles.json</strong> - this file is used for generating additional theme''s styles. Except adding a new style, you have to remember about creating an additional CSS file which will be loaded while changing theme''s style.</li>\r\n	<li><strong>template.json</strong> - it is the most important configuration file. It includes information about a theme and it allows to switch off chosen elements of theme administration panel. It is NOT recommended to add new fields to this files because they will not be used without additional PHP code.</li>\r\n	<li><strong>widgets.json</strong> - a file including a list of all positions of widgets. Similarly to <strong>menus.json</strong> file, you have to remember that except adding a new widget position, you have to also add PHP code which generates it in a theme.</li>\r\n	<li><strong>widgets.styles.json</strong> - a file used for creating new widget styles. Thanks to its implementation, it allows to assign a style given to one widget type only or exclude some widget types from a style given.</li>\r\n</ul>\r\nIn order to understand better JSON files format, we recommend to visit the official website of  <a href="http://www.json.org/">this format</a>.\r\n\r\n&nbsp;', 'JSON Configuration', '', 'publish', 'open', 'open', '', 'json-configuration', '', '', '2012-08-12 18:01:32', '2012-08-12 18:01:32', '', 0, 'http://wp1/?p=338', 0, 'post', '', 0),
(339, 1, '2012-07-08 10:07:01', '2012-07-08 10:07:01', 'Dla zapewnienia wysokiej elastyczności frameworka GavernWP, zdecydowaliśmy się na wykorzystanie plików w formacie JSON do przechowywania konfiguracji szablonu i układu opcji w panelu administracyjnym.\n\nW katalogu <strong>gavern/options/</strong> znajdziemy pliki odpowiadające za konfigurację szablonu:\n<ul>\n	<li><strong>fonts.json</strong> - plik przechowujący grupy czcionek szablonu. Domyślnie stworzone są trzy główne grupy. Aby stworzyć nową grupę wystarczy dodać kolejny obiekt do istniejącej w tym pliku tablicy obiektów.</li>\n	<li><strong>menus.json</strong> - w pliku tym znajdziemy miejsca na menu wykorzystywane w szablonie. Należy pamiętać, że w odróżnieniu do pliku fonts.json, poza dodaniem nowego obiektu trzeba też w kodzie szablonu dodać kod PHP generujący dane menu. Warto też pamiętać, że tylko jedno menu, może być menu głównym (pole <strong>main</strong> w obiekcie menu).</li>\n	<li><strong>opengraph.json</strong> - plik ten zawiera konfigurację pól używanych w bloku związanym z metabox-em używanym do generowania danych Open Graph. Nie zalecamy dokonywania w nim żadnych zmian bez poznania dokładnej implementacji tagów Open Graph we frameworku GavernWP.</li>\n	<li><strong>styles.json</strong> - plik ten jest wykorzystywany do generowania dodatkowych styli szablonu. Poza dodaniem nowego stylu, należy też pamietać o stworzeniu dodatkowego pliku CSS, który będzie ładowany przy zmianie stylu szablonu.</li>\n	<li>template.json - najważniejszy plik konfiguracyjny. Zawiera on informacje o szablonie oraz pozwala wyłączyć wybrane elementy panelu administracyjnego szablonu. Nie jest zalecane dodawanie nowych pól do tego pliku gdyż bez dodatkowego kodu PHP nie zostaną one wykorzystane.</li>\n	<li>widgets.json - plik zawierający listę wszystkich pozycji widżetów. Podobnie jak w wypadku pliku <strong>menus.json</strong>, należy pamietać, że poza dodaniem nowej pozycji widżetów, trzeba też dodać kod PHP generujący ją w szablonie.</li>\n	<li>widgets.styles.json - plik stosowany do tworzenia nowych styli widżetów. Dzięki swojej implementacji pozwala przypisać dany styl tylko do danego typu widżetów lub też wykluczyć z danego stylu wybrane rodzaje widżetów.</li>\n</ul>\nBy lepiej zrozumieć format plików JSON polecamy lekturę oficjalne strony <a href="http://www.json.org/">tego formatu</a>.\n\n&nbsp;', 'JSON Configuration', '', 'inherit', 'open', 'open', '', '338-revision', '', '', '2012-07-08 10:07:01', '2012-07-08 10:07:01', '', 338, 'http://wp1/uncategorized/338-revision/', 0, 'revision', '', 0),
(340, 1, '2012-08-12 18:00:50', '2012-08-12 18:00:50', 'In order to make GavernWP framework more flexible, we decided to use files in JSON format for storing thme''s configuration and options layout in an administration panel.\n\nYou may find files responsible for theme''s configuration in <strong>gavern/options/</strong> catalog:<strong></strong>\n<ul>\n	<li><strong>fonts.json</strong> - a file which stores theme''s groups of fonts. By default, there are three main gropus created. In order to create a new group, it is enough to add a next object to the object table existing in this file.plik przechowujący grupy czcionek szablonu.</li>\n	<li><strong>menus.json</strong> - you will find space for menu used in a theme in this file. You have to remember that except adding a new object, you have to add PHP code generating menu data in theme''s code. It is also worth remembering that there could be one main menu (<strong>main</strong> field in menu object).<strong></strong></li>\n	<li><strong>opengraph.json</strong> - this file includes configuration of fields used in a block connected with metabox which is used for generating Open Graph data. We do not recommend to make any changes in it before you get acquainted with Open Graph tags implementation in GavernWP framework.</li>\n	<li><strong>styles.json</strong> - this file is used for generating additional template''s styles. Except adding a new style, you have to remember about creating an additional CSS file which will be loaded while changing template''s style.</li>\n	<li><strong>template.json</strong> - it is the most important configuration file. It includes information about a template and it allows to switch off chosen elements of template administration panel. It is NOT recommended to add new fields to this files because they will not be used without additional PHP code.</li>\n	<li><strong>widgets.json</strong> - a file including a list of all positions of widgets. Similarly to <strong>menus.json</strong> file, you have to remember that except adding a new widget position, you have to also add PHP code which generates it in a template.</li>\n	<li><strong>widgets.styles.json</strong> - a file used for creating new widget styles. Thanks to its implementation, it allows to assign a style given to one widget type only or exclude some widget types from a style given.</li>\n</ul>\nIn order to understand better JSON files format, we recommend to visit the official website of  <a href="http://www.json.org/">this format</a>.\n\n&nbsp;', 'JSON Configuration', '', 'inherit', 'open', 'open', '', '338-autosave', '', '', '2012-08-12 18:00:50', '2012-08-12 18:00:50', '', 338, 'http://wp1/uncategorized/338-autosave/', 0, 'revision', '', 0),
(341, 1, '2012-07-09 09:40:13', '2012-07-09 09:40:13', 'GavernWP has built - in support for <a title="Open Graph" href="http://opengraphprotocol.org/" target="_blank">Open Graph</a> protocol. Thanks to it, each post added may have metatags specified and during publishing a post given on Facebook, there will be information specified earlier by an author of an entry displayed:\r\n<ul>\r\n	<li>title</li>\r\n	<li>entry description</li>\r\n	<li>thumbnail connected with an entry</li>\r\n</ul>\r\nThanks to it, an author of a post has better influence on the information displayed on social media services. It''s also worth remembering that in the case when fields connected with Open Graph will not be filled, then GavernWP will try to fill them automatically basing on the entry data.\r\n\r\nSupport for Open Graph is a great supplement for a Social API system implemented in GavernWP.', 'Open Graph support', '', 'publish', 'open', 'open', '', 'open-graph-support', '', '', '2012-08-12 17:56:16', '2012-08-12 17:56:16', '', 0, 'http://wp1/?p=341', 0, 'post', '', 0),
(342, 1, '2012-07-09 09:39:31', '2012-07-09 09:39:31', 'GavernWP posiada wbudowane wsparcie dla protokołu <a title="Open Graph" href="http://opengraphprotocol.org/" target="_blank">Open Graph</a>. Dzięki temu każdy dodawany post może posiadać określone metatagi, które sprawią, że podczas udostępniania danego posta na Facebooku pojawią się określone wcześniej przez autora wpisu informacje:\n<ul>\n	<li>tytuł</li>\n	<li>opis wpisu</li>\n	<li>miniaturka związana z wpisem</li>\n</ul>\nDzięki temu autor posta może lepiej wpływać na to co pojawia się w mediach społecznościowych. Dodatkowo warto pamiętać, że w wypadku gdy pola związane z Open Graph, nie zostaną wypełnione, wtedy GavernWP spróbuje wypełnić je automatycznie na bazie danych wpisu.', 'Open Graph support', '', 'inherit', 'open', 'open', '', '341-revision', '', '', '2012-07-09 09:39:31', '2012-07-09 09:39:31', '', 341, 'http://wp1/uncategorized/341-revision/', 0, 'revision', '', 0),
(343, 1, '2012-07-08 10:07:26', '2012-07-08 10:07:26', 'Dla zapewnienia wysokiej elastyczności frameworka GavernWP, zdecydowaliśmy się na wykorzystanie plików w formacie JSON do przechowywania konfiguracji szablonu i układu opcji w panelu administracyjnym.\r\n\r\nW katalogu <strong>gavern/options/</strong> znajdziemy pliki odpowiadające za konfigurację szablonu:\r\n<ul>\r\n	<li><strong>fonts.json</strong> - plik przechowujący grupy czcionek szablonu. Domyślnie stworzone są trzy główne grupy. Aby stworzyć nową grupę wystarczy dodać kolejny obiekt do istniejącej w tym pliku tablicy obiektów.</li>\r\n	<li><strong>menus.json</strong> - w pliku tym znajdziemy miejsca na menu wykorzystywane w szablonie. Należy pamiętać, że w odróżnieniu do pliku fonts.json, poza dodaniem nowego obiektu trzeba też w kodzie szablonu dodać kod PHP generujący dane menu. Warto też pamiętać, że tylko jedno menu, może być menu głównym (pole <strong>main</strong> w obiekcie menu).</li>\r\n	<li><strong>opengraph.json</strong> - plik ten zawiera konfigurację pól używanych w bloku związanym z metabox-em używanym do generowania danych Open Graph. Nie zalecamy dokonywania w nim żadnych zmian bez poznania dokładnej implementacji tagów Open Graph we frameworku GavernWP.</li>\r\n	<li><strong>styles.json</strong> - plik ten jest wykorzystywany do generowania dodatkowych styli szablonu. Poza dodaniem nowego stylu, należy też pamietać o stworzeniu dodatkowego pliku CSS, który będzie ładowany przy zmianie stylu szablonu.</li>\r\n	<li><strong>template.json</strong> - najważniejszy plik konfiguracyjny. Zawiera on informacje o szablonie oraz pozwala wyłączyć wybrane elementy panelu administracyjnego szablonu. Nie jest zalecane dodawanie nowych pól do tego pliku gdyż bez dodatkowego kodu PHP nie zostaną one wykorzystane.</li>\r\n	<li><strong>widgets.json</strong> - plik zawierający listę wszystkich pozycji widżetów. Podobnie jak w wypadku pliku <strong>menus.json</strong>, należy pamietać, że poza dodaniem nowej pozycji widżetów, trzeba też dodać kod PHP generujący ją w szablonie.</li>\r\n	<li><strong>widgets.styles.json</strong> - plik stosowany do tworzenia nowych styli widżetów. Dzięki swojej implementacji pozwala przypisać dany styl tylko do danego typu widżetów lub też wykluczyć z danego stylu wybrane rodzaje widżetów.</li>\r\n</ul>\r\nBy lepiej zrozumieć format plików JSON polecamy lekturę oficjalne strony <a href="http://www.json.org/">tego formatu</a>.\r\n\r\n&nbsp;', 'JSON Configuration', '', 'inherit', 'open', 'open', '', '338-revision-2', '', '', '2012-07-08 10:07:26', '2012-07-08 10:07:26', '', 338, 'http://wp1/uncategorized/338-revision-2/', 0, 'revision', '', 0),
(344, 1, '2012-07-08 09:53:55', '2012-07-08 09:53:55', 'GavernWP posiada pełne wsparcie dla wykonywania tłumaczeń. Z racji pewnych różnic wynikających z wykorzystania plików JSON do generowania opcji szablonu tłumaczenie szablonu powinno odbywać się w trzech miejscach:\r\n<ol>\r\n	<li>z użyciem plików z katalogu lanugages</li>\r\n	<li>poprzez stworzenie katalogu danego języka w katalogu config</li>\r\n	<li>poprzez stworzenie katalogu danego języka w katalogu options</li>\r\n</ol>\r\nPierwszy etap jest standardową operacją opisaną dokładnie w dokumentacji Wordpressa. Skupmy się zatem na pozostałych dwóch etapach:\r\n\r\nStandardowo w katalogach <strong>config</strong> i <strong>options</strong> stworzony jest katalog <strong>en_US</strong>, który zawiera pliki konfiguracyjne JSON w języku angielskim. Aby więc przetłumaczyć szablon na inny język należy skopiować ten katalog i zmienić mu nazwę na odpowiadającą językowi używanemu w naszej instalacji np. <strong>pl_PL</strong>. Następnie należy zmienić wszystkie frazy anglojęzyczne na te w naszym języku.\r\n\r\nUWAGA! Nie wolno zmieniać nazw kluczy w plikach JSON jak też nazw własnych, gdyż są one wykorzystywane do poprawnego działania i odczytywania wartości.\r\n\r\nPrzykładowo w pliku widgets.json dla fragmentu:\r\n\r\n[code]{\r\n"name": "Top widgets",\r\n"id": "top",\r\n"description": "Widgets area on under the header of website",\r\n"before_widget": "&lt;div id=\\"%1$s\\" class=\\"box%2$s\\"&gt;",\r\n"after_widget": "&lt;/div&gt;",\r\n"before_title": "&lt;h3 class=\\"box-title\\"&gt;",\r\n"after_title": "&lt;/h3&gt;"\r\n},[/code]\r\n\r\nzmieniamy tylko frazy:\r\n<ul>\r\n	<li>"Top widgets"</li>\r\n	<li>"Widgets area on under the header of website"</li>\r\n</ul>\r\nPo tak wykonanej operacji w panelu administracyjnym pojawią się zdania w naszym rodzimym języku.\r\n\r\nWarto też pamietać, że w wypadku gdy GavernWP nie znajdzie katalogu odpowiadającego ustawionemu w konfiguracji językowi, zostaną wykorzystane pliki z katalogów <strong>en_US</strong>.', 'Translations', '', 'inherit', 'open', 'open', '', '335-revision-2', '', '', '2012-07-08 09:53:55', '2012-07-08 09:53:55', '', 335, 'http://wp1/uncategorized/335-revision-2/', 0, 'revision', '', 0),
(345, 1, '2012-07-08 09:38:54', '2012-07-08 09:38:54', 'oEmbeds to ważne udogodnienie wykorzystywane przy tworzeniu postów. Dzięki nim użytkownik w łatwy sposób może osadzić we wpisie np. film z serwisu YouTube podając jedynie link do filmu - Wordpress automatycznie wygeneruje z takiego linka film.\r\n\r\nPrzykłady prezentujemy poniżej:\r\n\r\nYouTube\r\n\r\nhttp://www.youtube.com/watch?v=MdrC7kYTAX4\r\n\r\nTwitter\r\n\r\nhttps://twitter.com/gavickpro/status/221189052983025666\r\n\r\nFlickr\r\n\r\nhttp://www.flickr.com/photos/synectic/5489943396/', 'oEmbeds', '', 'inherit', 'open', 'open', '', '332-revision-3', '', '', '2012-07-08 09:38:54', '2012-07-08 09:38:54', '', 332, 'http://wp1/uncategorized/332-revision-3/', 0, 'revision', '', 0),
(346, 1, '2012-07-08 09:30:56', '2012-07-08 09:30:56', 'Framework GavernWP posiada dość rozbudowaną strukturę plików. Jest ona w dużej mierze podobna do standardowej struktury większości szablonów jednak z racji wielu funkcjonalności pojawiają się w niej nowe elementy.\r\n\r\n<!--more-->\r\n\r\nOgólny zarys struktury plików prezentuje się następująco:\r\n<ol>\r\n	<li><strong>katalog szablonu</strong>\r\n<small>Zawiera on wszystkie podstawowe pliki i katalogi dla szablonu. Warto zauważyć, że szablony Custom Pages posiadają na poczatku nazwy prefiks <strong>template.</strong>, który ułatwia ich odnalezienie w strukturze plików.</small>\r\n<ol>\r\n	<li><strong>css</strong>\r\n<small>Znajdują się w nim wszystkie pliki CSS szablonu. Zostały one dokładniej omówione we wpisie dotyczącym kodu CSS frameworka.</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>Dla większego porządku pliki CSS dotyczące panelu administracyjnego zostały umieszczone w tym katalogu.</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>fonts</strong>\r\n<small>Katalog ten jest przeznaczony do przechowywania plików z dodatkowymi fontami. Należy pamiętać by każdy font posiadał swój katalog zawierający plik stylesheet.css. Więcej o obsłudze fontów zostało napisane we wpisie dotyczącym sekcji <strong>Fonts</strong> w panelu administracyjnym.</small></li>\r\n	<li><strong>gavern</strong>\r\n<small>Katalog zawierający podstawę działania całego frameworka GavernWP.</small>\r\n<ol>\r\n	<li><strong>classes</strong>\r\n<small>Pliki z klasami pomocniczymi, używanymi w kodzie frameworka.</small></li>\r\n	<li><strong>config</strong>\r\n<small>Pliki zawierające konfigurację frameworka. Należy pamiętać o tym, że stosowane są dodatkowe katalogi wykorzystywane do wykonywania tłumaczeń</small></li>\r\n	<li><strong>form_elements</strong>\r\n<small>Poza głównym plikiem zawierającym kod generujący podstawowe elementy formularzy w panelu administracyjnym, zawiera on katalogi z elementami stworzonymi przez użytkownika.</small></li>\r\n	<li><strong>helpers</strong>\r\n<small>Zbiór klas związanych z konkretnymi zadaniami frameworka np. generowaniem fragmentów layoutu.</small></li>\r\n	<li><strong>layouts</strong>\r\n<small>Pliki wykorzystywane do generowania kodu HTML panelu administracyjnego.</small></li>\r\n	<li><strong>options</strong>\r\n<small>Pliki przechowujące opcje poszczególnych sekcji panelu administracyjnego szablonu. Podobnie jak katalog <strong>config</strong> - tutaj także stosowane są dodatkowe katalogi wykorzystywane do wykonywania tłumaczeń.</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>images</strong>\r\n<small>Pliki graficzne wykorzystywane przez szablon</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>Pliki związane z panelem administracyjnym</small></li>\r\n	<li><strong>headers</strong>\r\n<small>Domyślne grafiki headera</small></li>\r\n	<li><strong>post_formats</strong>\r\n<small>Grafiki związane z formatami wpisów.</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>js</strong>\r\n<small>Pliki skryptów JavaScript wykorzystywane w szablonie</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>Podobnie jak w katalogach <strong>css</strong> oraz <strong>images</strong> zawarte są tutaj pliki wykorzystywane w panelu administracyjnym</small></li>\r\n	<li><strong>templates</strong>\r\n<small>Dodatkowe pliki JavaScript wykorzystywane przez niektóre Custom Pages</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>languages</strong>\r\n<small>Główne pliki wykorzystywane do tworzenia tłumaczeń</small></li>\r\n	<li><strong>layouts</strong>\r\n<small>Pliki wykorzystywane do generowania podstron - zawierają elementy, które są wielokrotnie wykorzystywane - np. sekcja head.</small></li>\r\n</ol>\r\n</li>\r\n</ol>\r\n&nbsp;', 'Framework structure', '', 'inherit', 'open', 'open', '', '330-revision-2', '', '', '2012-07-08 09:30:56', '2012-07-08 09:30:56', '', 330, 'http://wp1/uncategorized/330-revision-2/', 0, 'revision', '', 0),
(348, 1, '2012-07-09 09:45:43', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-07-09 09:45:43', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=348', 0, 'post', '', 0),
(349, 1, '2012-07-09 09:56:08', '2012-07-09 09:56:08', 'GavernWP has an extensive mechanism allowing to create additional theme styles. We may distinguish two main groups of styles in this mechanism:\r\n<ul>\r\n	<li>style family</li>\r\n	<li>styles included in style family given</li>\r\n</ul>\r\nThe whole configuration is included in <strong>styles.json</strong> file:\r\n\r\n[code][{\r\n\r\n"family": "color",\r\n"family_desc": "Theme color",\r\n"family_tooltip": "You can select one of the theme colors",\r\n"styles": [\r\n{\r\n"name": "Color I",\r\n"value": "color1",\r\n"file": "style1.css"\r\n},\r\n{\r\n"name": "Color II",\r\n"value": "color2",\r\n"file": "style2.css"\r\n}\r\n]\r\n}][/code]\r\n\r\nAs you can see, it includes <strong>color</strong> style family which has two styles, namely: <strong>Color I</strong> and <strong>Color II</strong>.\r\n\r\nIn order to create new style family or a style for style family given, it is enough to create a next object in <strong>styles.json</strong> file and then create CSS files connected with a family given - in the case of <strong>color</strong> family, these are <strong>style1.css</strong> and <strong>style2.css</strong> files.\r\n\r\nGavernWP will load CSS files of a style given in a <strong>head</strong> section - chosen in an administration panel or, if there is a tool for choosing user''s styles switched on, they will be loaded based on a Cookie file storing data about a style used by a user.\r\n\r\nYou have to remember that for each style family there is at least one CSS file loaded. Therefore, creating coexisting style families like:\r\n<ul>\r\n	<li><strong>dark styles</strong> and <strong>light styles</strong></li>\r\n	<li><strong>blue styles</strong> and <strong>green styles</strong></li>\r\n</ul>\r\nis incorrect because at least one CSS style from each family will be loaded immediately. So the correct one is creating style families responsible for some elements of website styling, e.g. a separate family responsible for website coloring (<strong>colors</strong>) and a separate one for website background (<strong>patterns</strong>).\r\n\r\nGenerally, you have to care about particular style families in order not to overwrite one another.', 'Color Styles', '', 'publish', 'open', 'open', '', 'color-styles', '', '', '2012-08-12 18:03:55', '2012-08-12 18:03:55', '', 0, 'http://wp1/?p=349', 0, 'post', '', 0),
(350, 1, '2012-07-09 09:55:58', '2012-07-09 09:55:58', 'GavernWP posiada rozbudowany mechanizm pozwalający na tworzenie dodatkowych styli szablonu. W mechaniźmie tym można rozróżnić dwie główne grupy styli:\n<ul>\n	<li>rodzina styli</li>\n	<li>style wchodzące w skład danej rodziny styli</li>\n</ul>\nCała konfiguracja zawarta jest w pliku<strong> styles.json</strong>:\n\n[code][{\n\n"family": "color",\n"family_desc": "Template color",\n"family_tooltip": "You can select one of the template colors",\n"styles": [\n{\n"name": "Color I",\n"value": "color1",\n"file": "style1.css"\n},\n{\n"name": "Color II",\n"value": "color2",\n"file": "style2.css"\n}\n]\n}][/code]\n\nJak widać zawiera on rodzinę styli <strong>color</strong>, która posiada dwa style: <strong>Color I</strong> i <strong>Color II</strong>.\n\nAby stworzyć nową rodzinę styli lub styl wchodzący w skład danej rodziny styli wystarczy stworzyć kolejny obiekt w pliku <strong>styles.json</strong> a następnie stworzyć pliki CSS powiązane z daną rodziną - w wypadku rodziny <strong>color</strong> są to pliki <strong>style1.css</strong> oraz <strong>style2.css</strong>.\n\nGavernWP sam wczyta w sekcji <strong>head</strong> pliki CSS danego stylu - wybrane w panelu administracyjnym lub jeżeli jest włączone narzędzie do wyboru styli użytkownika - zostaną one wczytane na bazie pliku Cookie przechowującego dane o wybranym stylu użytkownika.\n\nNależy przy tym pamiętać, że dla każdej rodziny styli wczytywany jest co najmniej jeden plik CSS. Dlatego też tworzenie współistniejących rodzin styli takich jak:\n<ul>\n	<li><strong>dark styles</strong> i <strong>light styles</strong></li>\n	<li><strong>blue styles</strong> i <strong>green styles</strong></li>\n</ul>\njest niepoprawne, gdyż co najmniej jeden styl CSS z każdej rodziny będzie od razu wczytany. Za to poprawnym jest stworzenie rodzin styli odpowiadających za pewne elementy stylowania strony np. oddzielna rodzina odpowiadająca za kolorystykę strony (<strong>colors</strong>) i oddzielna rodzina odpowiadająca za tło strony (<strong>patterns</strong>).\n\nOgólnie należy zadbać o to by poszczególne rodziny styli nie nadpisywały się wzajemnie', 'Color Styles', '', 'inherit', 'open', 'open', '', '349-revision', '', '', '2012-07-09 09:55:58', '2012-07-09 09:55:58', '', 349, 'http://wp1/uncategorized/349-revision/', 0, 'revision', '', 0),
(351, 1, '2012-07-09 10:24:12', '2012-07-09 10:24:12', 'GavernWP makes possible to create themes based on Responsive Web Design. That''s why, it has two additional CSS styles:\r\n<ul>\r\n	<li>tablet.css</li>\r\n	<li>mobile.css</li>\r\n</ul>\r\nThanks to options available in an administration panel, it is possible to specify when these styles will be loaded.\r\n\r\nTwo column layout (if a column is switched on) is loaded when tablet.css file is not loaded.\r\n\r\nAt the moment of reaching maximum width for tablet.css file, page''s layout is changed into one column and the column itself is placed before or after page''s main content.\r\n\r\nAdditionally, in widget positions like top or bottom1/2/3, modules from three column layout are changed into one column  layout.\r\n\r\nAfter loading mobile.css file there is one column layout used everywhere.\r\n\r\nA very important improvement is a possibility of specifying whether a module will be loaded in tablet or mobile mode. More information can be found in Widget Rules entry.', 'Responsive Layout', '', 'publish', 'open', 'open', '', 'responsive-layout', '', '', '2012-08-12 18:04:14', '2012-08-12 18:04:14', '', 0, 'http://wp1/?p=351', 0, 'post', '', 0),
(352, 1, '2012-07-09 10:23:39', '2012-07-09 10:23:39', 'GavernWP umożliwia tworzenie szablonów w oparciu o Responsive Web Design. Dlatego też posiada on dwa dodatkowe style CSS:\n<ul>\n	<li>tablet.css</li>\n	<li>mobile.css</li>\n</ul>\nDzięki opcjom dostępnym w panelu administracyjnym można określić kiedy dokładnie będą wczytywane te style CSS.\n\nUkład dwukolumnowy (o ile kolumna jest włączona) wczytywany jest wtedy gdy nie jest wczytywany plik tablet.css.\n\nW momencie osiągnięcia granicznej szerokości dla pliku tablet.css układ strony przekształcany jest w jednokolumnowy a sama kolumna ląduję przed lub za treścią główną strony.\n\nDodatkowo w pozycjach widżetów takich jak top czy bottom1/2/3 moduły z układu trójkolumnowego przekształcają się na układ jednokolumnowy.\n\nNatomiast po wczytaniu pliku mobile.css wszędzie stosowany jest układ jednokolumnowy.\n\nBardzo ważnym udogodnieniem jest możliwość określenia czy moduł będzie wczytywany w trybie tabletowym lub mobilnym - więcej na ten temat m', 'Responsive Layout', '', 'inherit', 'open', 'open', '', '351-revision', '', '', '2012-07-09 10:23:39', '2012-07-09 10:23:39', '', 351, 'http://wp1/uncategorized/351-revision/', 0, 'revision', '', 0),
(353, 1, '2012-07-09 10:28:40', '2012-07-09 10:28:40', '<a href="http://www.opensearch.org/Home" target="_blank">Open Search</a> is a technology which allows to create your own browsing engine used by a browser. Thanks to it, e.g. in a Firefox browser, a user may define a new browser after entering our website based on GavernWP framework. Because of it, in the case of more extensive websites, e.g. data catalogs, searching is much easier.\r\n\r\nSwitching on support for Open Search requires switching on one option in an administration panel in a tab of advanced settings. All other operations are made with GavernWP.', 'Open Search support', '', 'publish', 'open', 'open', '', 'open-search-support', '', '', '2012-08-12 17:55:47', '2012-08-12 17:55:47', '', 0, 'http://wp1/?p=353', 0, 'post', '', 0),
(354, 1, '2012-07-09 10:27:53', '2012-07-09 10:27:53', '<a href="http://www.opensearch.org/Home" target="_blank">Open Search</a> to technologia pozwalająca na stworzenie własnego silnika wyszukiwania wykorzystywanego przez przeglądarkę. Dzięki temu np. w przeglądarce Firefox użytkownik może po wejściu na naszą stronę opartą o framework GavernWP, zdefiniować nową wyszukiwarkę - dzięki temu w wypadku bardziej rozbudowanych witryn np. katalogów danych, wyszukiwanie staje się znacząco prostsze.\n\nWłączenie wsparcia dla Open Search wymaga włączenia jednej opcji w panelu admini', 'Open Search support', '', 'inherit', 'open', 'open', '', '353-revision', '', '', '2012-07-09 10:27:53', '2012-07-09 10:27:53', '', 353, 'http://wp1/uncategorized/353-revision/', 0, 'revision', '', 0),
(355, 1, '2012-08-12 17:28:42', '2012-08-12 17:28:42', '<a href="http://www.opensearch.org/Home" target="_blank">Open Search</a> is a technology which allows to create your own browsing engine used by a browser. Thanks to it, e.g. in a Firefox browser, a user may define a new browser after entering our website based on GavernWP framework. Because of it, in the case of more extensive websites, e.g. data catalogs, searching is much easier.\n\nSwitching on support for Open Search requires switching on one option in an administration panel in a tab of advanced settings. All other operations are made with GavernWP.', 'Open Search support', '', 'inherit', 'open', 'open', '', '353-autosave', '', '', '2012-08-12 17:28:42', '2012-08-12 17:28:42', '', 353, 'http://wp1/uncategorized/353-autosave/', 0, 'revision', '', 0),
(356, 1, '2012-07-09 10:36:35', '2012-07-09 10:36:35', 'Thanks to Social API, adding buttons to an entry for sharing posts in the most popular social network services is very easy.\r\n\r\nAt the moment, Social API supports four services:\r\n<ul>\r\n	<li>Facebook</li>\r\n	<li>Google+</li>\r\n	<li>Twitter</li>\r\n	<li>Pinterest</li>\r\n</ul>\r\nButtons for sharing are generally added under an entry. All contact data needed for sharing are loaded from entry content or from OpenGraph metatags.\r\n\r\nThanks to extensive configuration options, it is possible to adjust buttons look in accordance with available configuration parameters.\r\n\r\nThe most important thing is that the work of Social API can be limited to specific posts or switch off some posts from its work.', 'Social API', '', 'publish', 'open', 'open', '', 'social-api', '', '', '2012-08-12 18:11:55', '2012-08-12 18:11:55', '', 0, 'http://wp1/?p=356', 0, 'post', '', 0),
(357, 1, '2012-07-09 10:36:11', '2012-07-09 10:36:11', 'Dzięki Social API dodanie do wpisu przycisków udostępniania postów w najpopularniejszych portalach społecznościowych jest banalnie proste.\n\nSocial API wspiera obecnie cztery serwisy:\n<ul>\n	<li>Facebook</li>\n	<li>Google+</li>\n	<li>Twitter</li>\n	<li>Pinterest</li>\n</ul>\nPrzyciski udostępniania dodawane są z reguły pod wpisem. Wszelkie dane dodatkowe potrzebne do udostępnienia pobierane sa z treści wpisu lub metatagów OpenGraph.\n\nDzięki rozbudowanym opcjom konfiguracyjnym, można samodzielnie dobrać wygląd przycisków zgodnie z obecnie dostępnymi parametrami konfiguracyjnymi.\n\nCo najważniejsze zakres działania Social API można ograniczyć do konkretnych postów lub też wyłączyć z', 'Social API', '', 'inherit', 'open', 'open', '', '356-revision', '', '', '2012-07-09 10:36:11', '2012-07-09 10:36:11', '', 356, 'http://wp1/uncategorized/356-revision/', 0, 'revision', '', 0),
(358, 1, '2012-08-12 17:28:40', '2012-08-12 17:28:40', 'Thanks to Social API, adding buttons to an entry for sharing posts in the most popular social network services is very easy.\n\nAt the moment, Social API supports four services:\n<ul>\n	<li>Facebook</li>\n	<li>Google+</li>\n	<li>Twitter</li>\n	<li>Pinterest</li>\n</ul>\nButtons for sharing are generally added under an entry. All contact data needed for sharing are loaded from entry content or from OpenGraph metatags.\n\nThanks to extensive configuration options, it is possible to adjust buttons look in accordance with available configuration parameters.\n\nThe most important thing is that the work of Social API can be limited to specific posts or switch off some posts from its work.', 'Social API', '', 'inherit', 'open', 'open', '', '356-autosave', '', '', '2012-08-12 17:28:40', '2012-08-12 17:28:40', '', 356, 'http://wp1/uncategorized/356-autosave/', 0, 'revision', '', 0),
(359, 1, '2012-07-10 06:25:25', '2012-07-10 06:25:25', 'Each theme''s subpage in GavernWP is created and based on one file from theme''s main catalog, e.g. <strong>single.php</strong> and at least four additional files from <strong>layouts</strong> catalog:\r\n<ul>\r\n	<li><strong>header.php</strong> - this file includes starting page''s structure i.e. a head section and the whole headline with elements such as: logo, main menu, etc.</li>\r\n	<li><strong>before.php</strong> - there are all widget positions included in this file which are before page''s main content.</li>\r\n	<li><strong>after.php</strong> - this file is an equivalent of <strong>before.php</strong> file but with one difference - it includes widget positions which are after page''s main content.</li>\r\n	<li><strong>footer.php</strong> - similarly to <strong>header.php</strong> file, it includes a starting page''s structure as footer.php includes the ending page''s structure, i.e. a footer and and elements below.</li>\r\n</ul>\r\nThe above files with a file given from a main catalog, create a basic structure of each page. The remaining elements are generated by additional files or functions. The majority of of such files can be found in <strong>layouts</strong> catalog; e.g. files with names content.post.*.php, include constituents of each post. . Using these files allowed to restrict the amount of code in theme''s main files and simplify its modification as change e.g. an entry footer requires modification of one or two files only.\r\n\r\nFunctions used for generating additional information displayed in posts are in <strong>gavern/helpers/helpers.layout.fragments.php</strong> file.', 'Theme structure', '', 'publish', 'open', 'open', '', 'template-structure', '', '', '2012-08-12 17:55:19', '2012-08-12 17:55:19', '', 0, 'http://wp1/?p=359', 0, 'post', '', 0),
(360, 1, '2012-07-10 06:23:18', '2012-07-10 06:23:18', 'Każda podstrona szablonu w GavernWP tworzona jest na podstawie jednego pliku z katalogu głównego szablonu np. <strong>single.php</strong> oraz co najmniej czterech plików dodatkowych z katalogu <strong>layouts</strong>:\n<ul>\n	<li><strong>header.php</strong> - plik ten zawiera początkową strukturę strony tj. sekcję head oraz cały nagłówek strony z elementami takimi jak logo, menu główne itd.</li>\n	<li><strong>before.php</strong> - w pliku tym zawarte są wszystkie pozycje widżetów, które znajdują się przed główną treścią strony.</li>\n	<li><strong>after.php</strong> - plik ten jest odpowiednikiem pliku <strong>before.php</strong>, z tą różnicą, że zawiera pozycje widżetów, które znajdują się po głównej treści strony.</li>\n	<li><strong>footer.php</strong> - tak jak plik <strong>header.php</strong> zawiera początkową strukturę strony tak <strong>footer.php</strong> zawiera końcową strukturę strony tj. stopkę i elementy znajdujące się pod nią.</li>\n</ul>\nPowyższe pliki wraz z danym plikiem z katalogu głównego, tworzą podstawową strukturę każdej strony. Pozostałe elementy są generowane przez dodatkowe pliki lub funkcje. Większość takich plików można znaleźć w katalogu <strong>layouts</strong> - dla przykładu pliki o nazwach <strong>content.post.*.php</strong> zawierają składowe elementy każdego posta. Zastosowanie takich plików pozwoliło na znaczne ograniczenie ilości kodu w głównych plikach szablonu oraz ułatwia jego modyfikację gdyż zmiana np. stopki wpisu wymaga modyfikacji jednego lub dwóch a nie kilkunastu plików.\n\nFunkcje używane do generowania dodatkowych informacji wyświetlanych w postach, znajdują się w pliku <strong>gavern/helpers/helpers.layout.fragments.php</strong>.', 'Template structure', '', 'inherit', 'open', 'open', '', '359-revision', '', '', '2012-07-10 06:23:18', '2012-07-10 06:23:18', '', 359, 'http://wp1/uncategorized/359-revision/', 0, 'revision', '', 0),
(361, 1, '2012-07-10 06:48:59', '2012-07-10 06:48:59', 'Theme''s CSS code is divided into a few files, loaded in order specified. All these files are in <strong>css</strong> catalog. You have to remember that order of these files is very important and its change may cause unpredictable changes of theme''s look because of using moving from general styling to detailed styling in CSS code.\r\n\r\nThe list of CSS files used in a theme is presented below (order according to recommended order of loading these files):\r\n<ol>\r\n	<li><strong>normalize.css</strong> - CSS code unifying page''s elements styling in all browsers</li>\r\n	<li><strong>template.css</strong> - the most important CSS file responsible for page''s layout styling , basic typography, widget styling, etc.</li>\r\n	<li><strong>wp.css</strong> - CSS rules which are responsible for Wordpress elements styling, e.g. a comments form , comments themselves or posts elements.</li>\r\n	<li><strong>shortcodes.*.css</strong> (optional) - a group of CSS files responsible for typography elements styling inserting to posts with Shortcodes.</li>\r\n	<li><strong>stuff.css</strong> - it includes styling of additional theme''s elements sucha s breadcrumbs or font-size switcher.</li>\r\n	<li><strong>wp.extensions.css</strong> - CSS rules connected with styling of standard widgets available with Wordpress.</li>\r\n	<li><strong>extensions.css (optional)</strong> - a CSS file which you have to add yourself in the case when you want to style additional widgets. In the case of small changes in widget styling, we recommend to use <strong>override.css</strong> file instead of this file.</li>\r\n	<li><strong>tablet.css</strong> - CSS rules used while displaying a page on tablet devices.</li>\r\n	<li><strong>mobile.css</strong> - CSS rules used while displaying  a page on smartfon devices.</li>\r\n	<li><strong>ie*.css</strong> - a file or a group of CSS files used for correcting page''s look in an Internet Explorer browser.</li>\r\n	<li><strong>style*.css</strong> - a file or a group of CSS files used for changing coloring or general style of a theme - they are loaded automatically by a mechanism responsible for theme''s coloring.</li>\r\n	<li><strong>override.css</strong> (optional) - you may add your own rules in this file which will overwrite existing rules in previous files - a perfect solution for theme modification without modifying the remaining CSS files.</li>\r\n</ol>\r\nAdditionally, CSS code used in a theme itself, you will also find in a <strong>templates</strong> catalog where there are CSS files loaded on chosen styles of subpages, e.g. needed for correct work of a gallery.', 'Theme CSS', '', 'publish', 'open', 'open', '', 'template-css', '', '', '2012-08-12 18:05:39', '2012-08-12 18:05:39', '', 0, 'http://wp1/?p=361', 0, 'post', '', 0),
(362, 1, '2012-07-10 06:48:14', '2012-07-10 06:48:14', 'Kod CSS szablonu podzielony jest na kilka plików, wczytywanych w określonej kolejności. Wszystkie te pliki znajdują się w katalogu <strong>css</strong>. Należy pamiętać, że kolejność tych plików jest bardzo ważna i jej zmiana może powodować nieprzewidywalne zmiany wyglądu szablonu, ze względu na stosowanie w kodzie CSS zasady przechodzenia od stylowania ogólnego do stylowania szczegółowego.\n\nLista plików CSS wykorzystywanych w szablonie prezentuje się następująco (kolejność według zalecanej kolejności wczytywania tych plików):\n<ol>\n	<li><strong>normalize.css</strong> - kod CSS unifikujący stylowanie elementów strony we wszystkich przeglądarkach.</li>\n	<li><strong>template.css</strong> - najważniejszy plik CSS, odpowiadający za stylowanie układu strony, podstawową typografię, bazowe stylowanie widżetów itd.</li>\n	<li><strong>wp.css</strong> - reguły CSS, które odpowiadają za stylowanie elementów Wordpressa np. formularza komentarzy, samych komentarzy czy elementów postów.</li>\n	<li><strong>shortcodes.*.css</strong> (optional) - grupa plików CSS, które są odpowiedzialne za stylowanie elementów typografii wstawianych do postów za pomoca Shortcodes.</li>\n	<li>stuff.css - zawiera stylowanie dodatkowych elementów szablonu takich jak breadcrumbs czy font-size switcher.</li>\n	<li>wp.extensions.css - reguły CSS związane ze stylowaniem standardowych widżetów udostępnianych razem z Wordpressem.</li>\n	<li>extensions.css (optional) - plik CSS, który należy samodzielnie dodać w wypadku gdy chcemy ostylować dodatkowe widżety. W wypadku małych zmian w stylowaniu widżetów zalecamy zamiast tego pliku zastosować plik override.css.</li>\n	<li>tablet.css - reguły CSS wykorzystywane przy wyświetlaniu strony na urządzeniach typu tablet.</li>\n	<li>mobile.css - reguły CSS wykorzystyane przy wyświetlaniu strony na urządzeniach typu smartfon.</li>\n	<li>ie*.css - plik lub grupa plików CSS wykorzystywanych do poprawienia wyglądu strony w przeglądarce Internet Explorer.</li>\n	<li>style*.css - plik lub grupa plików CSS wykorzystywanych do zmiany kolorystyki lub ogólnej stylistyki szablonu - wczytywane automatycznie przez mechanizm odpowiadający za kolorystykę szablonu.</li>\n	<li>override.css (optional) - w pliku tym można dodać własne reguły CSS, które nadpiszą istniejące reguły w poprzednich plikach - idealne rozwiązanie do modyfikacji szablonu bez modyfikowania pozostałych plików CSS.</li>\n</ol>\nDodatkowo kod CSS używany w samym szablonie znajdziemy też w katalogu <strong>templates</strong>, gdzie znajdują się pliki CSS wczytywane tylko na wybranych stylach podstron np. potrzebne do poprawnego działania galerii.', 'Template CSS', '', 'inherit', 'open', 'open', '', '361-revision', '', '', '2012-07-10 06:48:14', '2012-07-10 06:48:14', '', 361, 'http://wp1/uncategorized/361-revision/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(363, 1, '2012-08-12 18:05:36', '2012-08-12 18:05:36', 'Theme''s CSS code is divided into a few files, loaded in order specified. All these files are in <strong>css</strong> catalog. You have to remember that order of these files is very important and its change may cause unpredictable changes of theme''s look because of using moving from general styling to detailed styling in CSS code.\n\nThe list of CSS files used in a theme is presented below (order according to recommended order of loading these files):\n<ol>\n	<li><strong>normalize.css</strong> - CSS code unifying page''s elements styling in all browsers</li>\n	<li><strong>template.css</strong> - the most important CSS file responsible for page''s layout styling , basic typography, widget styling, etc.</li>\n	<li><strong>wp.css</strong> - CSS rules which are responsible for Wordpress elements styling, e.g. a comments form , comments themselves or posts elements.</li>\n	<li><strong>shortcodes.*.css</strong> (optional) - a group of CSS files responsible for typography elements styling inserting to posts with Shortcodes.</li>\n	<li><strong>stuff.css</strong> - it includes styling of additional theme''s elements sucha s breadcrumbs or font-size switcher.</li>\n	<li><strong>wp.extensions.css</strong> - CSS rules connected with styling of standard widgets available with Wordpress.</li>\n	<li><strong>extensions.css (optional)</strong> - a CSS file which you have to add yourself in the case when you want to style additional widgets. In the case of small changes in widget styling, we recommend to use <strong>override.css</strong> file instead of this file.</li>\n	<li><strong>tablet.css</strong> - CSS rules used while displaying a page on tablet devices.</li>\n	<li><strong>mobile.css</strong> - CSS rules used while displaying  a page on smartfon devices.</li>\n	<li><strong>ie*.css</strong> - a file or a group of CSS files used for correcting page''s look in an Internet Explorer browser.</li>\n	<li><strong>style*.css</strong> - a file or a group of CSS files used for changing coloring or general style of a theme - they are loaded automatically by a mechanism responsible for theme''s coloring.</li>\n	<li><strong>override.css</strong> (optional) - you may add your own rules in this file which will overwrite existing rules in previous files - a perfect solution for theme modification without modifying the remaining CSS files.</li>\n</ol>\nAdditionally, CSS code used in a theme itself, you will also find in a <strong>templates</strong> catalog where there are CSS files loaded on chosen styles of subpages, e.g. needed for correct work of a gallery.', 'Theme CSS', '', 'inherit', 'open', 'open', '', '361-autosave', '', '', '2012-08-12 18:05:36', '2012-08-12 18:05:36', '', 361, 'http://wp1/uncategorized/361-autosave/', 0, 'revision', '', 0),
(364, 1, '2012-07-10 07:04:27', '2012-07-10 07:04:27', 'GavernWP has support for comments with a division into threads. Thanks to it, discussions made in comments under a post given are clearer.\r\n\r\nAll options connected with comments configuration can be set by using standard options in a Wordpress administration panel (Settings &gt; Discussion). Threads in comments are switched on thanks to "Enable threaded (nested) comments" and specifying maximal depth of nested comments in threads.\r\n\r\nThere are two files responsible for generating HTML code of comments, namely:\r\n<ul>\r\n	<li><strong>comments.php</strong> - it includes a code which generates a comments list and a form of adding comments.</li>\r\n	<li><strong>gavern/helpers/helper.layout.fragments.php</strong> - in <strong>gavern_comment_template</strong> function, there is a code responsible for generating a code of a comment given.</li>\r\n</ul>\r\nCSS code responsible for a style of comments and a form of adding comments is in <strong>css/wp.css</strong> file.<strong></strong>', 'Threaded comments', '', 'publish', 'open', 'open', '', 'threaded-comments-2', '', '', '2012-08-12 18:06:00', '2012-08-12 18:06:00', '', 0, 'http://wp1/?p=364', 0, 'post', '', 0),
(365, 1, '2012-07-10 07:03:45', '2012-07-10 07:03:45', 'GavernWP posiada wsparcie dla komentarzy z podziałem na wątki. Dzięki temu dyskusje prowadzone w komentarzach pod danym postem są dużo czytelniejsze.\n\nWszystkie opcje związane z konfiguracją komentarzy można ustawić korzystając ze standardowych opcji w panelu administracyjnym Wordpress (<em>Settings &gt; Discussion</em>). Wątki w komentarzach włączane są dzięki opcji "<em><label for="thread_comments">Enable threaded (nested) comments</label></em>" i określeniu maksymalnej głębokości zagnieżdżeń odpowiedzi w wątkach.\n\nZa generowanie kodu HTML komentarzy w GavernWP odpowiadają dwa pliki:\n<ul>\n	<li><strong>comments.php</strong> - zawiera on kod generujący listę komentarzy oraz formularz ich dodawania.</li>\n	<li><strong>gavern/helpers/helper.layout.fragments.php</strong> - w funkcji <strong>gavern_comment_template</strong> znajduje się kod odpowiadający za wygenerowanie kodu danego komentarza.</li>\n</ul>\nKod CSS odpowiadający za stylistyk', 'Threaded comments', '', 'inherit', 'open', 'open', '', '364-revision', '', '', '2012-07-10 07:03:45', '2012-07-10 07:03:45', '', 364, 'http://wp1/uncategorized/364-revision/', 0, 'revision', '', 0),
(366, 1, '2012-08-12 17:28:34', '2012-08-12 17:28:34', 'GavernWP has support for comments with a division into threads. Thanks to it, discussions made in comments under a post given are clearer.\n\nAll options connected with comments configuration can be set by using standard options in a Wordpress administration panel (Settings &gt; Discussion). Threads in comments are switched on thanks to "Enable threaded (nested) comments" and specifying maximal depth of nested comments in threads.\n\nThere are two files responsible for generating HTML code of comments, namely:\n<ul>\n	<li><strong>comments.php</strong> - it includes a code which generates a comments list and a form of adding comments.</li>\n	<li><strong>gavern/helpers/helper.layout.fragments.php</strong> - in <strong>gavern_comment_template</strong> function, there is a code responsible for generating a code of a comment given.</li>\n</ul>\nCSS code responsible for a style of comments and a form of adding comments is in <strong>css/wp.css</strong> file.<strong></strong>', 'Threaded comments', '', 'inherit', 'open', 'open', '', '364-autosave', '', '', '2012-08-12 17:28:34', '2012-08-12 17:28:34', '', 364, 'http://wp1/uncategorized/364-autosave/', 0, 'revision', '', 0),
(367, 1, '2012-07-10 07:18:36', '2012-07-10 07:18:36', 'GavernWP makes accessible a few own styles of subpages. Thanks to them, it is possible to use Wordpress possiblitities better  and adjusting pages to themes chosen.\r\n\r\nAll additional subpages styles are placed in a main catalog in <strong>template.*.php</strong> files. GavernWP has the following subpages:\r\n<ul>\r\n	<li><strong>template.archive.php</strong> - an archive page, in includes a list of recent posts, categories and a list of links to monthly archives.</li>\r\n	<li><strong>template.contact.php</strong> - a page with a contact form which allows to send an email to an email address specified in a Wordpress configuration.</li>\r\n	<li><strong>template.fullwidth.php</strong> - a page''s layout without a sidebar.</li>\r\n	<li><strong>template.gallery.php</strong> - a page generating an animated gallery of images with a mechanism of attachments available in Wordpress - it is enough to assign attachments to such a page that they will show as slides in a gallery. It is recommened to choose images with the same size.</li>\r\n	<li><strong>template.login.php</strong> - a page generating a login form for users - after logging in, it displays information about his/her username and a button to log out.</li>\r\n	<li><strong>template.tagcloud.php</strong> - a page generating a tag cloud of our website.</li>\r\n</ul>\r\nMain CSS styles of subpages are in a <strong>css/stuff.css</strong> file. However, you have to remember that some more extensive files of subpages may additionally load CSS and JavaScript files from <strong>css/templates/</strong> and <strong>js/templates/</strong>.\r\n\r\nIn order to load additional files in this way, it is enough to specify the second parameter of a <strong>gk_load</strong> function (see: code of requesting a <strong>gk_load</strong> function in a <strong>template.gallery.php</strong> file).', 'Custom Page Styles', '', 'publish', 'open', 'open', '', 'custom-page-styles-2', '', '', '2012-08-12 18:06:59', '2012-08-12 18:06:59', '', 0, 'http://wp1/?p=367', 0, 'post', '', 0),
(368, 1, '2012-07-10 07:18:12', '2012-07-10 07:18:12', 'GavernWP udostępnia kilka własnych styli podstron. Dzięki nim możliwe jest lepsze wykorzystanie możliwości Wordpressa oraz dostosowanie stron do wybranej tematyki.\n\nWszystkie dodatkowe style podstron są umieszczone w katalogu głównym w plikach <strong>template.*.php</strong>. Standardowo GavernWP zawiera następujace rodzaje podstron:\n<ul>\n	<li><strong>template.archive.php</strong> - strona archiwum, zawiera listę ostatnich postów, kategorii oraz listę linków do archiwów miesięcznych</li>\n	<li><strong>template.contact.php</strong> - strona z formularzem kontaktowym, który pozwala na wysłanie maila pod określony w konfiguracji Wordpressa adres e-mail.</li>\n	<li><strong>template.fullwidth.php</strong> - układ strony bez bocznego sidebar''a.</li>\n	<li><strong>template.gallery.php</strong> - strona generująca animowaną galerię zdjęć z wykorzystaniem dostępnego w Wordpress mechanizmu załączników - wystarczy przypisać załączniki do takiej strony by pojawiły się one jako slajdy w galerii. Zalecane jest wybieranie zdjęć, które mają taki sam rozmiar.</li>\n	<li><strong>template.login.php</strong> - strona generująca formularz logowania dla użytkowników - po zalogowaniu wyświetla użytkownikowi informacje o jego nazwie użytkownika oraz przycisk do wylogowania się.</li>\n	<li><strong>template.tagcloud.php</strong> - strona generująca tag cloud naszej witryny.</li>\n</ul>\nGłówne style CSS od podstron znajdują się w pliku <strong>css/stuff.css</strong>, jednak należy pamiętać, że niektóre bardziej rozbudowane pliki podstron mogą dodatkowo wczytywać pliki CSS i JavaScript z katalogów <strong>css/templates/</strong> oraz <strong>js/templates/</strong>.\n\nAby wczytać w ten sposób pliki wystarczy zdefiniować drugi parametr funkcji gk_load (patrz: kod wywołania funkcji <strong>gk_load</strong> w pliku <strong>template.gallery.php</strong>).', 'Custom Page Styles', '', 'inherit', 'open', 'open', '', '367-revision', '', '', '2012-07-10 07:18:12', '2012-07-10 07:18:12', '', 367, 'http://wp1/uncategorized/367-revision/', 0, 'revision', '', 0),
(369, 1, '2012-08-12 17:28:32', '2012-08-12 17:28:32', 'GavernWP makes accessible a few own styles of subpages. Thanks to them, it is possible to use Wordpress possiblitities better  and adjusting pages to themes chosen.\n\nAll additional subpages styles are placed in a main catalog in <strong>template.*.php</strong> files. GavernWP has the following subpages:\n<ul>\n	<li><strong>template.archive.php</strong> - an archive page, in includes a list of recent posts, categories and a list of links to monthly archives.</li>\n	<li><strong>template.contact.php</strong> - a page with a contact form which allows to send an email to an email address specified in a Wordpress configuration.</li>\n	<li><strong>template.fullwidth.php</strong> - a page''s layout without a sidebar.</li>\n	<li><strong>template.gallery.php</strong> - a page generating an animated gallery of images with a mechanism of attachments available in Wordpress - it is enough to assign attachments to such a page that they will show as slides in a gallery. It is recommened to choose images with the same size.</li>\n	<li><strong>template.login.php</strong> - a page generating a login form for users - after logging in, it displays information about his/her username and a button to log out.</li>\n	<li><strong>template.tagcloud.php</strong> - a page generating a tag cloud of our website.</li>\n</ul>\nMain CSS styles of subpages are in a <strong>css/stuff.css</strong> file. However, you have to remember that some more extensive files of subpages may additionally load CSS and JavaScript files from <strong>css/templates/</strong> and <strong>js/templates/</strong>.\n\nIn order to load additional files in this way, it is enough to specify the second parameter of a <strong>gk_load</strong> function (see: code of requesting a <strong>gk_load</strong> function in a <strong>template.gallery.php</strong> file).', 'Custom Page Styles', '', 'inherit', 'open', 'open', '', '367-autosave', '', '', '2012-08-12 17:28:32', '2012-08-12 17:28:32', '', 367, 'http://wp1/uncategorized/367-autosave/', 0, 'revision', '', 0),
(370, 1, '2012-07-10 07:59:29', '2012-07-10 07:59:29', 'Widget rules is a mechanism which introduces a completely new way to manage widgets on a website. Thanks to it, it is possible to specify widget features such as:\r\n<ul>\r\n	<li>displaying on subpages chosen,</li>\r\n	<li>displaying on devices chosen,</li>\r\n	<li>displaying for a group of users chosen,</li>\r\n	<li>displaying with a widget style use chosen.</li>\r\n</ul>\r\nAfter switching on widget rules in theme''s advanced settings, under each widget, the following options should be displayed:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-371" title="Widgets ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="258" height="200" /></a>\r\n\r\nThe most extensive options are those connected with a widget visibility on subpages chosen - after choosing an option to show a widget on pages chosen (or an option not showing a widget on pages chosen), such a panel will appear:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg"><img class="aligncenter size-full wp-image-372" title="Widgets ‹ Meet Gavern WP — WordPress-1-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg" alt="" width="240" height="203" /></a>\r\n\r\nThen, you have to choose a page''s type to add, e.g. Category, and then give category ID:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg"><img class="aligncenter size-full wp-image-373" title="Widgets ‹ Meet Gavern WP — WordPress-2" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg" alt="" width="242" height="216" /></a>\r\n\r\nAfter clicking "Add page" button, a page will appear on a list of pages chosen on which in our case a widget will be displayed:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-374" title="Widgets ‹ Meet Gavern WP — WordPress-3" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="233" height="77" /></a>\r\n\r\nOf course, it is possible to add more pages:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-375" title="Widgets ‹ Meet Gavern WP — WordPress-4" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="230" height="100" /></a>\r\n\r\nTo make it clearer, , each page''s type is displayed with a different color. A page added can be removed by clicking a removing icon placed on the right side of each page.\r\n\r\nIn this way, you may set a widget so as to be shown on pages chosen or to be shown on all pages except the chosen ones.\r\n\r\nGenerally, widgets are shown on all pages.\r\n\r\nAn option of displaying a widget on devices chosen has five options to choose:\r\n<ul>\r\n	<li><strong>All devices</strong> - a widget will be displayed everytwhere - on every device</li>\r\n	<li><strong>Desktop</strong> - a widget will be displayed only when neither a <strong>tablet.css</strong> file nor a <strong>mobile.css</strong> is loaded <strong></strong></li>\r\n	<li><strong>Tablets</strong> - a widget displays only when a <strong>tablet.css</strong> file will be loaded and, at the same time, a <strong>mobile.css</strong> file will not be loaded <strong></strong></li>\r\n	<li><strong>Smartphones</strong> - a widget will be displayed only when a <strong>mobile.css</strong> file will be loaded</li>\r\n	<li><strong>Tablets/Smartphones</strong> - a widget will be displayed when at least one file will be loaded: <strong>tablet.css</strong> or <strong>mobile.css</strong>.</li>\r\n</ul>\r\nThanks to these settings, it is possible to limit significantly the amount of content displayed on devices with small screens.\r\n\r\nAn option of displaying widget for a chosen groups of users has four options to choose:\r\n<ul>\r\n	<li><strong>All users</strong> - a widget will be displayed to all users</li>\r\n	<li><strong>Only guests</strong> - a widget will be displayed to not logged in users</li>\r\n	<li><strong>Only registered users</strong> - a widget will be displayed to logged in users only</li>\r\n	<li><strong>Only administrator</strong> - a widget will be displayed to administrators only</li>\r\n</ul>\r\nThanks to this option, it is possible e.g. to display messages specified by using widgets for a group of users chosen.\r\n\r\nThe last optio from widget rules is an option for choosing a widget style - it causes appending to a widget main container an additional class giving styling specified by a user.\r\n\r\nWidget styles are defined in widget.styles.json file and in CSS code - in this case in <strong>css/wp.extensions.css</strong>.<strong></strong>', 'Widget rules', '', 'publish', 'open', 'open', '', 'widget-rules-2', '', '', '2012-08-12 17:54:32', '2012-08-12 17:54:32', '', 0, 'http://wp1/?p=370', 0, 'post', '', 0),
(371, 1, '2012-07-10 07:42:44', '2012-07-10 07:42:44', '', 'Widgets ‹ Meet Gavern WP — WordPress-1', '', 'inherit', 'open', 'open', '', 'widgets-meet-gavern-wp-wordpress-1', '', '', '2012-07-10 07:42:44', '2012-07-10 07:42:44', '', 370, 'http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg', 0, 'attachment', 'image/jpeg', 0),
(372, 1, '2012-07-10 07:44:41', '2012-07-10 07:44:41', '', 'Widgets ‹ Meet Gavern WP — WordPress-1-1', '', 'inherit', 'open', 'open', '', 'widgets-meet-gavern-wp-wordpress-1-1', '', '', '2012-07-10 07:44:41', '2012-07-10 07:44:41', '', 370, 'http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg', 0, 'attachment', 'image/jpeg', 0),
(373, 1, '2012-07-10 07:46:28', '2012-07-10 07:46:28', '', 'Widgets ‹ Meet Gavern WP — WordPress-2', '', 'inherit', 'open', 'open', '', 'widgets-meet-gavern-wp-wordpress-2', '', '', '2012-07-10 07:46:28', '2012-07-10 07:46:28', '', 370, 'http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg', 0, 'attachment', 'image/jpeg', 0),
(374, 1, '2012-07-10 07:47:15', '2012-07-10 07:47:15', '', 'Widgets ‹ Meet Gavern WP — WordPress-3', '', 'inherit', 'open', 'open', '', 'widgets-meet-gavern-wp-wordpress-3', '', '', '2012-07-10 07:47:15', '2012-07-10 07:47:15', '', 370, 'http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg', 0, 'attachment', 'image/jpeg', 0),
(375, 1, '2012-07-10 07:48:26', '2012-07-10 07:48:26', '', 'Widgets ‹ Meet Gavern WP — WordPress-4', '', 'inherit', 'open', 'open', '', 'widgets-meet-gavern-wp-wordpress-4', '', '', '2012-07-10 07:48:26', '2012-07-10 07:48:26', '', 370, 'http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg', 0, 'attachment', 'image/jpeg', 0),
(376, 1, '2012-07-10 07:58:19', '2012-07-10 07:58:19', 'Widget rules to mechanizm, który wprowadza zupełnie nowy sposób zarządzania widżetami na stronie. Dzięki niemu można określić dla widżeta takie właściwości jak:\n<ul>\n	<li>wyświetlanie na wybranych podstronach</li>\n	<li>wyświetlanie na wybranym typie urządzeń</li>\n	<li>wyświetlanie dla wybranej grupy użytkowników</li>\n	<li>wyświetlanie z użyciem wybranego stylu widżetu</li>\n</ul>\nPo włączeniu widget rules w zaawansowanych ustawieniach szablonu, pod każdym widżetem powinny pojawić się następujace opcje:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-371" title="Widgets ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="258" height="200" /></a>\n\nNajbardziej rozbudowane są opcje związane z widocznością widżetu na wybranych podstronach - po wybraniu opcji pokazywania widżetu na wybranych stronach (lub opcji nie pokazywania widżetu na wybranych stronach) pojawi się następujacy panel:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg"><img class="aligncenter size-full wp-image-372" title="Widgets ‹ Meet Gavern WP — WordPress-1-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg" alt="" width="240" height="203" /></a>\n\nNależy następnie wybrać typ strony do dodania np. Category a następnie podać ID kategorii:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg"><img class="aligncenter size-full wp-image-373" title="Widgets ‹ Meet Gavern WP — WordPress-2" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg" alt="" width="242" height="216" /></a>\n\nPo kliknięciu przycisku "Add page" strona pojawi się na liście wybranych stron na których w naszym wypadku będzie wyświetlany widżet:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-374" title="Widgets ‹ Meet Gavern WP — WordPress-3" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="233" height="77" /></a>\n\nStron można oczywiście dodać kilka:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-375" title="Widgets ‹ Meet Gavern WP — WordPress-4" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="230" height="100" /></a>\n\nDla zwiększenia czytelności każdy rodzaj strony wyświetlany jest w innym kolorze. Dodaną już stronę można usunąć klikając ikonę usuwania umieszczoną po prawej stronie każdej ze stron.\n\nW ten sposób można ustawić widżet tak by pojawiał się na wybranych stronach lub żeby pojawiał się on na wszystkich strona poza tymi wybranymi.\n\nStandardowo widżety pokazywane są na wszystkich podstronach.\n\nOpcja wyświetlania widżetu na wybranych urządeniach posiada pięć opcji do wyboru:\n<ul>\n	<li><strong>All devices</strong> - widżet będzie wyświetlany wszędzie - na każdym urządzeniu</li>\n	<li><strong>Desktop</strong> - widżet będzie wyświetlany tylko wtedy gdy nie jest wczytany ani plik <strong>tablet.css</strong> ani plik <strong>mobile.css</strong></li>\n	<li><strong>Tablets</strong> - widżet wyświetli się tylko wtedy kiedy wczytany będzie plik <strong>tablet.css</strong> i jednocześnie nie będzie wczytany plik <strong>mobile.css</strong></li>\n	<li><strong>Smartphones</strong> - widżet wyświetli się tylko wtedy kiedy wczytany będzie plik <strong>mobile.css</strong>.</li>\n	<li><strong>Tablets/Smartphones</strong> - widżet wyświetli się gdy wczytany będzie co najmniej jeden z plików <strong>tablet.css</strong> lub <strong>mobile.css</strong>.</li>\n</ul>\nDzięki tym ustawieniom można znacząco ograniczyć ilość treści wyświetlanych na urządzeniach o małych ekranach.\n\nOpcja wyświetlania widżetu dla wybranych grup użytkowników posiada cztery opcje do wyboru:\n<ul>\n	<li><strong>All users</strong> - widżet pojawi się wszystkim użytkownikom</li>\n	<li><strong>Only guests</strong> - widżet pojawi się tylko niezalogowanym użytkownikom</li>\n	<li><strong>Only registered users</strong> - widżet pojawi się tylko zalogowanym użytkownikom</li>\n	<li><strong>Only administrator</strong> - widżet pojawi się tylko administratorom</li>\n</ul>\nDzięki tej opcji można np. wyświetlać określone wiadomości poprzeż użycie widżetów przeznaczone dla wybranej grupy użytkowników.\n\nOstatnią opcję składającą się na widget rules stanowi opcja wyboru stylu widżetu - powoduje ona dopisa', 'Widget rules', '', 'inherit', 'open', 'open', '', '370-revision', '', '', '2012-07-10 07:58:19', '2012-07-10 07:58:19', '', 370, 'http://wp1/uncategorized/370-revision/', 0, 'revision', '', 0),
(377, 1, '2012-07-11 13:32:57', '2012-07-11 13:32:57', 'GavernWP makes accessible options allowing for theme''s branding. Branding options are divided into two groups:\r\n<ul>\r\n	<li>theme''s branding</li>\r\n	<li>administration panel branding</li>\r\n</ul>\r\nThanks to theme''s branding options, a user may specify:\r\n<ul>\r\n	<li>specify page''s logo</li>\r\n	<li>specify theme''s footer content</li>\r\n	<li>decide about displaying a framework logo under page''s footer</li>\r\n</ul>\r\nMore information about branding options for a theme can be found in an entry devoted to a "Theme branding" tab in an administration panel.\r\n\r\nAdministration panel branding options allow to define:\r\n<ul>\r\n	<li>a logo displayed next to a theme''s name in an administration panel sidebar</li>\r\n	<li>a logo visible over a log in form to an administration panel</li>\r\n</ul>\r\nMore about branding options for an administration panel can be found in an entry devoted to "Back-end branding"  in an administration panel.', 'Branding', '', 'publish', 'open', 'open', '', 'branding', '', '', '2012-08-12 18:07:53', '2012-08-12 18:07:53', '', 0, 'http://wp1/?p=377', 0, 'post', '', 0),
(378, 1, '2012-07-11 13:32:53', '2012-07-11 13:32:53', 'GavernWP udostępnia opcje pozwalające na branding szablonu. Opcje brandingu podzielone są na dwie grupy:\n<ul>\n	<li>branding szablonu</li>\n	<li>branding panelu administracyjnego</li>\n</ul>\nDzięki opcjom brandingu szablonu użytkownik może określić:\n<ul>\n	<li>logo strony</li>\n	<li>treść stopki szablonu</li>\n	<li>zdecydować o wyświetlaniu loga frameworka pod stopką strony</li>\n</ul>\nWięcej o opcjach brandingu dla szablonu znajduje się we wpisie poświęconym zakładce "Template branding" w panelu administracyjnym.\n\nOpcje brandingu panelu administracyjnego pozwalają na zdefiniowanie:\n<ul>\n	<li>loga wyświetlanego obok nazwy szablonu w sidebarze panelu administracyjnego</li>\n	<li>loga widocznego nad formularzem logowania do panelu administracyjnego</li>\n</ul>\nWięcej o opcjach brandingu dla panelu administracyjnego znajduje się we wpisie poświęconym zakładce "Back-end branding" w panelu administracyjnym.', 'Branding', '', 'inherit', 'open', 'open', '', '377-revision', '', '', '2012-07-11 13:32:53', '2012-07-11 13:32:53', '', 377, 'http://wp1/uncategorized/377-revision/', 0, 'revision', '', 0),
(380, 1, '2012-07-11 13:44:19', '2012-07-11 13:44:19', 'GavernWP has basic support for a new option available in Wordpress 3.4 - an options editor with themes preview. Now, the most important options connected with theme''s style and its layout has been implemented to a live editor.\r\n\r\nIn order to reach it easier, we placed a direct link to this editor in the top part of themes'' options:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-5.jpg"><img class="aligncenter size-full wp-image-683" title="Live Editor" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-5.jpg" alt="" width="217" height="206" /></a>\r\n\r\nAll options included in this editor are also available via traditional theme''s options panel.\r\n\r\nIn order to simplify adding your own options to a live editor, the whole code generating options is placed in a separate file: <strong>gavern/helpers/helpers.customizer.php</strong>.\r\n\r\nYou have to remember that all options and settings from a live editor are stored in the same place as their equivalents from an administration panel so settings change with a live editor causes changes in an options panel. That''s why, it is recommended not to use a traditional administration panel and a live editor at the same time because saving options with various values in two different places at the same time may not give the expected result.', 'Theme live editor', '', 'publish', 'open', 'open', '', 'theme-live-editor-2', '', '', '2012-08-12 18:09:26', '2012-08-12 18:09:26', '', 0, 'http://wp1/?p=380', 0, 'post', '', 0),
(381, 1, '2012-07-11 13:43:33', '2012-07-11 13:43:33', 'GavernWP posiada podstawowe wsparcie dla nowej opcji dostępnej w Wordpress 3.4 - edytora opcji z podglądem szablonu. Obecnie w live editor zaimplementowano najważniejsze opcje związane ze stylem szablonu i jego układem.\n\nAby można było łatwiej dostać się do tego edytora umieściliśmy w górnej części opcji szablonu bezpośredni link do edytora:\n\n[screenshot]\n\nWszystkie opcje zawarte w tym edytorze dostępne są również poprzez tradycyjny panel opcji szablonu.\n\nAby ułatwić dodawanie własnych opcji do live editor cały kod generujący opcje umieszczono w oddzielnym pliku <strong>gavern/helpers/helpers.customizer.php</strong>.\n\nNależy pamiętać, że wszystkie opcje i ustawienia z live editor są przechowywane w tym samym miejscu co ich odpowiedniki z panelu admistracyjnego zatem zmiana ustawień z użyciem live editor pociąga za sobą zmiany w zwykłym panelu opcji. Dlatego też zalecane jest nie uruchamianie w tym samym momencie tradycyjnego panelu administracyjnego szablonu i live editor, gdyż może zaistnieć sytuacja gd', 'Theme live editor', '', 'inherit', 'open', 'open', '', '380-revision', '', '', '2012-07-11 13:43:33', '2012-07-11 13:43:33', '', 380, 'http://wp1/uncategorized/380-revision/', 0, 'revision', '', 0),
(382, 1, '2012-07-11 13:50:49', '2012-07-11 13:50:49', 'GavernWP has an update section which allows to access information whether a theme was updated to the latest version. In order to access an updates panel, you have to use "Updates" submenu from a main menu of theme''s options:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-6.jpg"><img class="aligncenter size-full wp-image-685" title="Updates" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-6.jpg" alt="" width="202" height="171" /></a>\r\n\r\nIf a theme was not updated, a list of updates will appear; which are newer than your theme version.\r\n\r\nHowever, when you have a theme in the latest version, you will see an appropriate message that a theme does not have any new updates to download.\r\n\r\nIt''s worth remembering that a free theme - MeetGavernWP is available through a public repository in a github service which allows to easy analysis of changes implemented in particular files. In the case of commercial themes, it is recommended to use tools like WinMerge (Windows) or File Merge (MacOS X) to compare changes in files. Each update in our update system has information about the list of modified files. Generally, it is recommended to compare only these files which you modified manually after loading a theme.', 'Updates', '', 'publish', 'open', 'open', '', 'updates-2', '', '', '2012-08-12 18:11:39', '2012-08-12 18:11:39', '', 0, 'http://wp1/?p=382', 0, 'post', '', 0),
(383, 1, '2012-07-11 13:49:57', '2012-07-11 13:49:57', 'GavernWP posiada sekcję aktualizacji, która pozwala na dostęp do informacji o tym czy szablon jest zaktualizowany do ostatniej wersji. Aby dostać się do panelu aktualizacji należy skorzystać z subemnu "Updates" menu głównego opcji szablonu:\n\n[screenshot]\n\nJeżeli nasz szablon jest nieaktualny, pojawi się nam lista aktualizacji, które są nowsze niż nasza wersja szablonu:\n\n[screenshot]\n\nNatomiast gdy nasz szablon jest w najnowszej wersji, ujrzymy stosowny komunikat o tym, że szablon nie posiada żadnych nowych aktualizacji do pobrania:\n\n[screenshot]\n\nWarto też pamiętać, że darmowy szablon MeetGavernWP jest dostępny poprzez publiczne repozytorium w serwisie github, co pozwala na łatwą analizę zmian wprowadzanych w poszczególnych plikach. W wypadku szablonów komercyjnych do porównywania zmian w plikach zalecane jest wykorzystanie narzędzi typu WinMerge (Windows) lub File Merge (MacOS X). Każda aktualizacja w naszym systemie aktualizacji posiada informację o liście zmodyfikowanych plików. W sy', 'Updates', '', 'inherit', 'open', 'open', '', '382-revision', '', '', '2012-07-11 13:49:57', '2012-07-11 13:49:57', '', 382, 'http://wp1/uncategorized/382-revision/', 0, 'revision', '', 0),
(384, 1, '2012-07-11 13:59:23', '2012-07-11 13:59:23', 'Sometimes, there is a situation when you have to copy a configuration from one installation to another one. In order to simplify it, GavernWP has been equipped with import and export options of theme''s settings in "Import/Export" tab of a theme''s main menu:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-17.jpg"><img class="aligncenter size-full wp-image-712" title="Import/export menu" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-17.jpg" alt="" width="178" height="161" /></a>\r\n\r\nAfter entering a page of these settings, you will see the following form:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-18.jpg"><img class="aligncenter size-full wp-image-713" title="Import/Export page" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-18.jpg" alt="" width="681" height="519" /></a>\r\n\r\nIn order to export settings, it is enough to copy a text from an "Export" field and copy it to an "Import" field in a different theme.\r\n\r\n<strong>Note!</strong> While exporting settings, you have to remember that it is possible to copy settings between the same themes.\r\nTheme''s settings are available in JSON format, so it is possible to save these settings to a file and then modify them manually before loading to a different theme.\r\n\r\nTip: we recommend to make a dump of theme''s settings, thanks to it, you will be secured against not desired effects of greater changes in a theme''s configuration. Such settings dumps should be saved in a file which has in its name the date of making a dump, e.g.  <strong>meetgavernwp_backup_30_07_2012.json</strong>.', 'Import/Export settings', '', 'publish', 'open', 'open', '', 'importexport-settings-2', '', '', '2012-08-12 18:38:39', '2012-08-12 18:38:39', '', 0, 'http://wp1/?p=384', 0, 'post', '', 0),
(385, 1, '2012-07-11 13:58:47', '2012-07-11 13:58:47', 'Czasem spotykamy się z sytuacją kiedy to musimy skopiować konfigurację z jednej instalacji szablonu do innej. Aby ułatwić to zadanie GavernWP został wyposażony w opcje importu i eksportu ustawień szablonu dostępne w zakładce "Import/Export" menu głównego szablonu:\n\n[screenshot]\n\nPo wejściu na stronę tych ustawień ujrzymy następujący formularz:\n\n[screenshot]\n\nAby wyeksportować ustawienia wystarczy skopiować tekst z pola "Export" i skopiować go do pola "Import" w innym szablonie.\n\n<strong>Uwaga!</strong> Eksportując ustawienia należy pamiętać, że możliwe jest jedynie kopiowanie ustawień pomiędzy tymi samymi szablonami.\n\nUstawienia szablonu dostępne są w czytelnym dla człowieka formacie JSON, zatem można te ustawienia zapisać do pliku a następnie zmodyfikować je ręcznie przed wgraniem do innego szablonu.\n\nWskazówka: zalecamy wykonanie co jakiś czas zrzutu ustawień szablonu, dzięki temu można zabezpieczyć się przed niepożądanymi efektami większych zmian w konfiguracji szablonu. Takie zrzuty ustawień powinny być zapisane w pliku posiadającym w nazwię datę wykonania zrzutu np. meetgavernwp_backup_30_07_2012', 'Import/Export settings', '', 'inherit', 'open', 'open', '', '384-revision', '', '', '2012-07-11 13:58:47', '2012-07-11 13:58:47', '', 384, 'http://wp1/uncategorized/384-revision/', 0, 'revision', '', 0),
(386, 1, '2012-07-11 14:52:14', '2012-07-11 14:52:14', 'To simplify shortcodes use available in themes based on GavernWP framework, a button for theme''s typography has been implemented which is available in a posts editor:<a href="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-705" title="button typo" src="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="474" height="118" /></a>\r\n\r\n&nbsp;\r\n\r\nBy clicking this button, you will see a list of available typography elements:<a href="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-5.jpg"><img class="aligncenter size-full wp-image-706" title="typo button popup" src="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-5.jpg" alt="" width="265" height="353" /></a>\r\n\r\n&nbsp;\r\n\r\nIt is possible to choose a version with a stylistic specified for the majority of elements. After choosing a particular style, a shortcode will appear which will be replaced in entry content by scripts to structure styled in a way given.\r\n\r\nPlease, note that adding a new Shortcode code requires three operations:\r\n<ul>\r\n	<li>adding an entry in shortcodes.js configuration file</li>\r\n	<li>adding PHP code supporting a shortcode given</li>\r\n	<li>adding optional CSS and JavaScript code (if a shortcode given requires it)</li>\r\n</ul>\r\n<strong>shortcodes.js</strong> file in <strong>config</strong> catalog includes entries which are replaced to menu structure visible after clicking a typography button - it includes <strong>$GAVERNWP_SHORTCODES</strong> variable which is a table including objects representing elements of a menu. Each object has three features: <strong>title</strong>, <strong>code</strong> and <strong>submenu</strong>. Let''s analyze this structure with a <strong>Highlight</strong> position:\r\n\r\n[code]{\r\n\r\n"title": "Highlight",\r\n"code": "[highlight]Your text[/highlight]",\r\n"submenu": [\r\n{\r\n"title": "Style I",\r\n"code": "[highlight style=\\"1\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style II",\r\n"code": "[highlight style=\\"2\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style III",\r\n"code": "[highlight style=\\"3\\"]Your text[/highlight]"\r\n}\r\n]\r\n},[/code]\r\n<ul>\r\n	<li><strong>title</strong> - it includes a menu positon name displayed by a script</li>\r\n	<li><strong>code</strong> - it is a shortcode code which will be added to an entry when clicking a menu position given - you have to remember that not all menu positions on the first level have a value in this field - if it was an empty sequence of symbols, it means for a script that clicking on a menu position given does not request any action.</li>\r\n	<li><strong>submenu</strong> - it is a table  of a submenu of a menu position given. Each submenu position is built the same as menu positions as these on the first level but with one difference - a submenu cannot have the next submenu, so you do not add a <strong>submenu</strong> feature in a submenu object.</li>\r\n</ul>\r\nLet''s say, we added our shortcode to a typography button using shortcodes.js file. So, there is one thing left to do - support our shortcode from a theme side.\r\n\r\nTo do this, you have to open <strong>gavern/helpers/helpers.shortcodes.php</strong> file.\r\n\r\nThis file is divided into three main sections starting with lines similar to:\r\n\r\n[code]if(get_option($tpl-&gt;name . ''_shortcodes1_state'', ''Y'') == ''Y'') {[/code]\r\n\r\nIt is a conditional  IF instruction connected with a group of typography elements given. Gavern icludes three groups:\r\n<ul>\r\n	<li>typography elements - functions connected with it have <strong>gavern_ts_</strong> prefix in the title</li>\r\n	<li>interactive elements - functions connected with it have <strong>gavern_ies_</strong> prefix in the title</li>\r\n	<li>elements characteristic for a particular theme - functions connected with it have <strong>gavern_tss_</strong> prefix in the title</li>\r\n</ul>\r\nWe recommend to add new typography elements in the last group - in Meet GavernWP theme, it is empty by default. Please, remember about using an appropriate prefix in a function name for a group given, e.g. in the case of the third group, it will be <strong>gavern_tss_</strong>. The code itself of a shortcode given has to be created according to guidelines described in<a href="http://codex.wordpress.org/Shortcode_API"> Shortcode API</a>.\r\n\r\nThe last step is rather optional and depends on your Shortcode type. If your Shortcode requires additional CSS or JavaScript code, you have to define it in <strong>shortcodes.*.css</strong> i <strong>shortcodes.*.js</strong> files, where <strong>*</strong> is a group name to which a Shortcode given was assigned.\r\n\r\nIt is very important to place elements of CSS and JavaScript code in an appropriate file, as it will give a possibility of optimizing whole theme code when switching off given group of Shortcodes codes.', 'Typography button', '', 'publish', 'open', 'open', '', 'typography-button', '', '', '2012-08-12 18:33:41', '2012-08-12 18:33:41', '', 0, 'http://wp1/?p=386', 0, 'post', '', 0),
(389, 1, '2012-07-11 14:51:57', '2012-07-11 14:51:57', 'Dla ułatwienia wykorzystania shortcodes dostępnych w szablonach opartych o framework GavernWP zaimplementowano przycisk od typografii szablonu dostępny w edytorze postów:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg"><img class="aligncenter size-full wp-image-387" title="Add New Post ‹ Meet Gavern WP — WordPress" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg" alt="" width="308" height="107" /></a>\n\nKlikając na ten przycisk ujrzymy listę dostępnych elementów typografii:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-388" title="Add New Post ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="251" height="369" /></a>\n\nDla większości elementów można wybrać wersję z określoną stylistyką. Po wybraniu konkretnego stylu pojawi się kod shortcode, który zostanie zamieniony w treści wpisu przez skrypty na konkretną strukturę ostylowaną w dany sposób.\n\nNależy zwrócić uwagę na fakt, że dodanie nowego kodu Shortcode wymaga trzech operacji:\n<ul>\n	<li>dodania wpisu w pliku konfiguracyjnym shortcodes.js</li>\n	<li>dodania kodu PHP obsługującego dany shortcode</li>\n	<li>dodania opcjonalnego kodu CSS i JavaScript (o ile wymaga tego dany shortcode)</li>\n</ul>\nPlik <strong>shortcodes.js</strong> w katalogu <strong>config</strong> zawiera wpisy, które są zamieniane na strukturę menu widocznego po kliknięciu w przycisk typografii - zawiera on zmienną <strong>$GAVERNWP_SHORTCODES</strong>, która jest tablicą zawierającą obiekty reprezentujące elementy menu wyboru. Każdy obiekt posiada trzy właściwości: <strong>title</strong>, <strong>code</strong> oraz <strong>submenu</strong>. Omówmy tą strukturę na przykładzie pozycji <strong>Highlight</strong>:\n\n[code]{\n\n"title": "Highlight",\n"code": "[highlight]Your text[/highlight]",\n"submenu": [\n{\n"title": "Style I",\n"code": "[highlight style=\\"1\\"]Your text[/highlight]"\n},\n{\n"title": "Style II",\n"code": "[highlight style=\\"2\\"]Your text[/highlight]"\n},\n{\n"title": "Style III",\n"code": "[highlight style=\\"3\\"]Your text[/highlight]"\n}\n]\n},[/code]\n<ul>\n	<li><strong>title</strong> - zawiera nazwę pozycji menu wyświetlaną przez skrypt</li>\n	<li><strong>code</strong> - jest to kod shortcode, który zostanie dodany do wpisu w momencie kliknięcia danej pozycji menu - należy pamiętać, że nie wszystkie pozycje menu na pierwszym poziomie posiadają wartość w tym polu - jeżeli jest ona pustym ciągiem znaków oznacza to dla skryptu, że kliknięcie w daną pozycję menu ma nie wywoływać żadnej akcji.</li>\n	<li><strong>submenu</strong> - jest to tablica podmenu danej pozycji menu. Każda pozycja podmenu jest zbudowana tak samo jak pozycje menu na pierwszym poziomie, z tą różnicą, że podmenu nie może mieć kolejnego podmenu, zatem nie dodajemy w obiekcie podmenu właściwości <strong>submenu</strong>.</li>\n</ul>\nPrzyjmijmy, że dodaliśmy już nasz shortcode do przycisku typografii korzystając z pliku shortcodes.js. Pozostaje nam kwestia obsługi naszego shortcode po stronie szablonu.\n\nW tym celu należy otworzyć plik<strong> gavern/helpers/helpers.shortcodes.php</strong>.\n\nPlik ten jest podzielony na trzy główne sekcje zaczynające się od linijek podobnych do:\n\n[code]if(get_option($tpl-&gt;name . ''_shortcodes1_state'', ''Y'') == ''Y'') {[/code]\n\nJest to instrukcja warunkowa IF związana z daną grupą elementów typografii. Gavern zawiera trzy takie grupy:\n<ul>\n	<li>elementy typografii - funkcje z nią związane mają prefiks <strong>gavern_ts_</strong> w nazwie</li>\n	<li>elementy interaktywne - funkcje z nią związane mają prefiks <strong>gavern_ies_</strong> w nazwie</li>\n	<li>elementy chrakterystyczne dla danego szablonu - funkcje z nią związane mają prefiks <strong>gavern_tss_</strong> w nazwie</li>\n</ul>\nNowe elementy typografii zalecamy dodawać w tej ostatniej grupie - w szablonie Meet GavernWPdomyślnie jest ona pusta. Zalecamy pamiętać o zastosowaniu stosownego dla danej grupy prefiksu w nazwie funkcji np. w wypadku trzeciej grupy będzie to <strong>gavern_tss_</strong>. Sam kod danego Shortcode należy tworzyć według wytycznych opisanych w <a href="http://codex.wordpress.org/Shortcode_API">Shortcode API</a>.\n\nOstatni krok jest opcjonalny i zależny od typu naszego Shortcode. Jeżeli nasz Shortcode wymaga dodatkowego kod CSS lub JavaScript należy zdefiniować go w plikach <strong>shortcodes.*.css</strong> i <strong>shortcodes.*.js</strong>, gdzie <strong>*</strong> oznacza nazwę grupy do której przypisaliśmy dany Shortcode.\n\nJest bardzo ważne, by umieścić elementy kodu CSS i JavaScript w odpowiednim pliku, gdyż umożliwi to optymalizację kodu całego szablonu w momencie wyłączenia z użytkowania danej grupy kodów Shortcodes.', 'Typography button', '', 'inherit', 'open', 'open', '', '386-revision', '', '', '2012-07-11 14:51:57', '2012-07-11 14:51:57', '', 386, 'http://wp1/uncategorized/386-revision/', 0, 'revision', '', 0),
(392, 1, '2012-07-12 12:55:04', '2012-07-12 12:55:04', 'In order to adjust stylistics of an administration panel to a GavernWP page, there are some options allowing to adjust the look of administration panel elements to a theme of a page given.\r\n\r\nYou will find the following options in a back-end branding tab:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-19.jpg"><img class="aligncenter size-full wp-image-715" title="Back-end branding" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-19.jpg" alt="" width="711" height="335" /></a>\r\n\r\nThe first two options are connected with a logotype displayed on a log in page. You have to choose an image which will be used as a logo and then insert the size of the image chosen. In this way, you may achieve, e.g. the following log in panel:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Meet-Gavern-WP-›-Log-In.jpg"><img class="aligncenter size-full wp-image-716" title="Login logo" src="http://wp1/wp-content/uploads/2012/07/Meet-Gavern-WP-›-Log-In.jpg" alt="" width="379" height="459" /></a>\r\n\r\nThe remaining two options are connected with theme''s login displayed in a main menu of an administration panel:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-20.jpg"><img class="aligncenter size-full wp-image-717" title="Back-end logo" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-20.jpg" alt="" width="172" height="68" /></a>\r\n\r\nWe recommend to use an image in 16x16 size - bigger or smaller images may cause problems with menu layout.\r\n\r\n&nbsp;', 'Back-end branding settings', '', 'publish', 'open', 'open', '', 'back-end-branding-settings-2', '', '', '2012-08-12 18:42:42', '2012-08-12 18:42:42', '', 0, 'http://wp1/?p=392', 0, 'post', '', 0),
(393, 1, '2012-07-12 12:54:47', '2012-07-12 12:54:47', 'Aby lepiej dostosować stylistykę panelu administracyjnego do strony w GavernWP znalazły się opcje pozwalające na dostosowanie wyglądu elementów panelu administracyjnego do tematyki danej strony.\n\nW zakładce back-end branding znajdziemy następujące opcje:\n\n[screenshot]\n\nPierwsze dwie opcje związane są z logotypem wyświetlanym na stronie logowania. Należy wybrać grafikę, która posłuży za logo, a następnie podać rozmiar wybranej grafiki. W ten sposób możemy uzyskać np. taki panel logowania:\n\n[screenshot]\n\nPozostałe dwie opcje związane są z logiem szablonu wyświetlanym w menu głównym panelu administracyjnego:\n\n[screenshot]\n\nZalecamy wykorzystać grafikę w rozmiarze 16x16 - większe lub mniejsze grafiki mogą powodować proble\n\n&nbsp;', 'Back-end branding settings', '', 'inherit', 'open', 'open', '', '392-revision', '', '', '2012-07-12 12:54:47', '2012-07-12 12:54:47', '', 392, 'http://wp1/uncategorized/392-revision/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(394, 1, '2012-07-12 13:05:23', '2012-07-12 13:05:23', 'There are three key places connected with branding in a theme based on GavernWP framework:\r\n<ul>\r\n	<li>page''s logo</li>\r\n	<li>page''s footer</li>\r\n	<li>framework''s logo under a page''s footer</li>\r\n</ul>\r\nThere are the following administration panel options responsible for these elements:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-10.jpg"><img class="aligncenter size-full wp-image-697" title="branding" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-10.jpg" alt="" width="686" height="341" /></a>\r\n\r\nIn the case of a framework''s logo, it is only possible to switch it on/off.\r\n\r\nFooter content is defined in <strong>Footer content</strong> option. It will be displayed at the bottom of the page, usually on the right side.\r\n\r\nThe majority of parameters are connected with a page''s logo. The first step in a logo configuration is to choose a logo type; there are the following logo types available:\r\n<ul>\r\n	<li><strong>Defined in the CSS code</strong> - a logo is defined theme''s CSS style as an element having <strong>cssLogo</strong> class. In this case, except CSS code modification, no other settings changes are needed.</li>\r\n	<li><strong>Image logo</strong> - after choosing this option, some additional options will appear: <a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-11.jpg"><img class="aligncenter size-full wp-image-698" title="Logo image" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-11.jpg" alt="" width="716" height="185" /></a> You have to choose an image logo and specify its sizes.</li>\r\n	<li><strong>Text logo</strong> - likewise in the previous option, some additional options appear: <a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-12.jpg"><img class="aligncenter size-full wp-image-699" title="Textlogo" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-12.jpg" alt="" width="545" height="96" /></a> <strong>Theme logo text </strong>option specifies whether main logo text and the signature below it will be taken from Wordpress settings (<strong>from Wordpress settings</strong>) or will be specified by a user (<strong>Own</strong>). In the case of choosing the second option, two additional fields to fill in will appear: <a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-13.jpg"><img class="aligncenter size-full wp-image-700" title="Text logo own" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-13.jpg" alt="" width="558" height="199" /></a></li>\r\n	<li><strong>None</strong> - in this case, a logo will not be displayed.</li>\r\n</ul>\r\n<div><strong>Note</strong>: <strong>None</strong> option is useful when you want to define a logo code in theme''s code yourself - then, it is enough to add your own code to an appropriate file (usually it is: <strong>layouts/header.php</strong>).</div>\r\n&nbsp;', 'Theme branding settings', '', 'publish', 'open', 'open', '', 'template-branding-settings-2', '', '', '2012-08-12 18:27:54', '2012-08-12 18:27:54', '', 0, 'http://wp1/?p=394', 0, 'post', '', 0),
(395, 1, '2012-07-12 13:05:21', '2012-07-12 13:05:21', 'W szablonie budowanym w oparciu o framework GavernWP istnieją trzy kluczowe miejsca związane z brandingiem:\n<ul>\n	<li>logo strony</li>\n	<li>stopka strony</li>\n	<li>logo frameworka pod stopką strony</li>\n</ul>\nZa elementy te odpowiadają następujące opcje panelu administracyjnego:\n\n[screenshot]\n\nW wypadku loga frameworka można je jedynie włączyć lub wyłączyć.\n\nTreść stopki strony definiujemy w opcji <strong>Footer content</strong>. Wyświetlona ona zostanie w dolej części strony najczęściej po prawej stronie witryny.\n\nNajwięcej parametrów związanych jest z logiem strony. Pierwszy krok w konfiguracji logo strony to wybór typu loga, dostępne są następujące rodzaje logo:\n<ul>\n	<li><strong>Defined in the CSS code</strong> - logo zdefiniowane jest wtedy w stylu CSS szablonu jako element posiadający klasę <strong>cssLogo</strong>. W tym wypadku poza modyfikacją kodu CSS żadne inne zmiany ustawień nie są potrzebne.</li>\n	<li><strong>Image logo</strong> - po wybraniu tej opcji pojawią się dodatkowe opcje: [screenshot]. Należy wybrać grafikę logo oraz określić jej rozmiary.</li>\n	<li><strong>Text logo</strong> - podobnie jak w wypadku poprzedniej opcji, także tutaj pojawią się dodatkowe opcje: [screenshot]. Opcja <strong>Template logo text</strong> określa czy tekst główny logo jak i podpis pod nim będą brane z ustawień Wordpress (<strong>from Wordpress settings</strong>) czy też będą określone  przez użytkownika (<strong>Own</strong>). W wypadku wybrania tej drugiej opcji pojawią się kolejne dwa pola, które trzeba wypełnić: [screenshot].</li>\n	<li><strong>None</strong> - w tym wypadku logo w ogóle nie zostanie wyświetlone.</li>\n</ul>\n<div><strong>Wskazówka:</strong> opcja <strong>None</strong> jest przydatna w sytuacji gdy sami chcemy w kodzie szablonu zdefiniować kod logo - wystarczy wtedy dodać własny kod do odpowiedniego pliku (najczęściej <strong>layouts/header.php</strong>).</div>\n&nbsp;', 'Template branding settings', '', 'inherit', 'open', 'open', '', '394-revision', '', '', '2012-07-12 13:05:21', '2012-07-12 13:05:21', '', 394, 'http://wp1/uncategorized/394-revision/', 0, 'revision', '', 0),
(396, 1, '2012-08-12 18:24:08', '2012-08-12 18:24:08', 'There are three key places connected with branding in a template based on GavernWP framework:\n<ul>\n	<li>page''s logo</li>\n	<li>page''s footer</li>\n	<li>framework''s logo under a page''s footer</li>\n</ul>\nThere are the following administration panel options responsible for these elements:\n\n[screenshot]\n\nIn the case of a framework''s logo, it is only possible to switch it on/off.\n\nFooter content is defined in <strong>Footer content</strong> option. It will be displayed at the bottom of the page, usually on the right side.\n\nThe majority of parameters are connected with a page''s logo. The first step in a logo configuration is to choose a logo type; there are the following logo types available:\n<ul>\n	<li><strong>Defined in the CSS code</strong> - a logo is defined theme''s CSS style as an element having <strong>cssLogo</strong> class. In this case, except CSS code modification, no other settings changes are needed.</li>\n	<li><strong>Image logo</strong> - after choosing this option, some additional options will appear:  [screenshot]. You have to choose an image logo and specify its sizes.</li>\n	<li><strong>Text logo</strong> - likewise in the previous option, some additional options appear: [screenshot]. <strong>Theme logo text </strong>option specifies whether main logo text and the signature below it will be taken from Wordpress settings (<strong>from Wordpress settings</strong>) or will be specified by a user (<strong>Own</strong>). In the case of choosing the second option, two additional fields to fill in will appear: [screenshot].</li>\n	<li><strong>None</strong> - in this case, a logo will not be displayed.</li>\n</ul>\n<div><strong>Note</strong>: <strong>None</strong> option is useful when you want to define a logo code in temple''s code yourself - then, it is enough to add your own code to an appropriate file (usually it is: <strong>layouts/header.php</strong>).</div>\n&nbsp;', 'Theme branding settings', '', 'inherit', 'open', 'open', '', '394-autosave', '', '', '2012-08-12 18:24:08', '2012-08-12 18:24:08', '', 394, 'http://wp1/uncategorized/394-autosave/', 0, 'revision', '', 0),
(397, 1, '2012-07-12 13:12:49', '2012-07-12 13:12:49', 'Shortcodes are facilities which are not used by everyone. Besides, XHTML code of the majority of typography elements can be generated manually. It causes that not all CSS and JavaScript files connected with Shortcodes are needed while loading a page.\r\n\r\nThanks to a Shortcodes tab, it is possible to switch off chosen groups of Shortcodes:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-9.jpg"><img class="aligncenter size-full wp-image-695" title="Shortcodes" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-9.jpg" alt="" width="555" height="223" /></a>\r\n\r\nNote! Switching off a given group of Shortcodes will cause not only switching off adding CSS and JS files connected with a group given but will also switch off functions which parse Shortcodes in articles. That''s why, you have to make sure that Shortcodes groups you want to switch off, are not used in existing articles.', 'Shortcodes settings', '', 'publish', 'open', 'open', '', 'shortcodes-settings-2', '', '', '2012-08-12 18:23:31', '2012-08-12 18:23:31', '', 0, 'http://wp1/?p=397', 0, 'post', '', 0),
(398, 1, '2012-07-12 13:11:53', '2012-07-12 13:11:53', 'Shortcodes to udogodnienia, które nie są wykorzystywane przez wszystkich. Poza tym kod XHTML większości elementów typograficznych można w razie potrzeby wygenerować ręcznie. Sprawia to, że nie wszystkie pliki CSS i JavaScript związane z Shortcodes są potrzebne przy wczytywaniu strony.\n\nDzięki zakładce Shortcodes można wyłączyć wybrane grupy Shortcodes:\n\n[screenshot]\n\nUwaga! Wyłączenie danej grupy Shortcodes spowoduje', 'Shortcodes settings', '', 'inherit', 'open', 'open', '', '397-revision', '', '', '2012-07-12 13:11:53', '2012-07-12 13:11:53', '', 397, 'http://wp1/uncategorized/397-revision/', 0, 'revision', '', 0),
(399, 1, '2012-07-12 13:12:49', '2012-07-12 13:12:49', 'Shortcodes to udogodnienia, które nie są wykorzystywane przez wszystkich. Poza tym kod XHTML większości elementów typograficznych można w razie potrzeby wygenerować ręcznie. Sprawia to, że nie wszystkie pliki CSS i JavaScript związane z Shortcodes są potrzebne przy wczytywaniu strony.\r\n\r\nDzięki zakładce Shortcodes można wyłączyć wybrane grupy Shortcodes:\r\n\r\n[screenshot]\r\n\r\nUwaga! Wyłączenie danej grupy Shortcodes spowoduje nie tylko wyłączenie dodawania plików CSS i JS związanych z daną grupą, ale też wyłączy funkcje parsujące Shortcodes w artykułach. Dlatego należy upewnić się, że wyłączane grupy Shortcodes nie były wykorzystane w istniejących artykułach.', 'Shortcodes settings', '', 'inherit', 'open', 'open', '', '397-revision-2', '', '', '2012-07-12 13:12:49', '2012-07-12 13:12:49', '', 397, 'http://wp1/uncategorized/397-revision-2/', 0, 'revision', '', 0),
(400, 1, '2012-08-12 18:22:07', '2012-08-12 18:22:07', 'Shortcodes are facilities which are not used by everyone. Besides, XHTML code of the majority of typography elements can be generated manually. It causes that not all CSS and JavaScript files connected with Shortcodes are needed while loading a page.\n\nThanks to a Shortcodes tab, it is possible to switch off chosen groups of Shortcodes:\n\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-9.jpg"><img class="aligncenter size-full wp-image-695" title="Shortcodes" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-9.jpg" alt="" width="555" height="223" /></a>\n\nNote! Switching off a given group of Shortcodes will cause not only switching off adding CSS and JS files connected with a group given but will also switch off functions which parse Shortcodes in articles. That''s why, you have to make sure that Shortcodes groups you want to switch off, are not used in existing articles.', 'Shortcodes settings', '', 'inherit', 'open', 'open', '', '397-autosave', '', '', '2012-08-12 18:22:07', '2012-08-12 18:22:07', '', 397, 'http://wp1/uncategorized/397-autosave/', 0, 'revision', '', 0),
(401, 1, '2012-07-12 13:39:30', '2012-07-12 13:39:30', 'GavernWP gives a possibility of advanced menu managing on a website. There is a list of menus available in a theme in a configuration file - <strong>menus.json</strong>. These menus are displayed in a <strong>Navigation</strong> tab:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-15.jpg"><img class="aligncenter size-full wp-image-709" title="Nav menu" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-15.jpg" alt="" width="548" height="539" /></a>\r\n\r\nThere are a few options available for each menu available on a website. Website''s main menu has more options than a menu placed e.g. in a page''s footer.\r\n\r\nThe difference is that a main menu has additional options connected with animation:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-16.jpg"><img class="aligncenter size-full wp-image-710" title="Nav menu options" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-16.jpg" alt="" width="537" height="99" /></a>\r\n\r\nThese options allow to specify the type and speed of animation of a submenu.\r\n\r\nAdditionally, all menu types have the two options:\r\n<ul>\r\n	<li>an option specifying whether a menu given was switched on - a menu given can be switched on only on a particular subpages thanks to a <strong>Conditional rule</strong> option - then, you have to insert a rule from  <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of a PHP language in  a Conditional rule field, e.g. a rule displaying a menu on the homepage and in a category called "Meet GavernWP" will have the following form:  [code]is_homepage() || is_category(''Meet GavernWP'')[/code]</li>\r\n	<li>an option specifying menu depth i.e. a maximal nesting level for all menu positions displayed. If e.g. you want to skip the second menu level and display menu positions which are on the first menu level, you have to set this option to <strong>1</strong>. Of course <strong>All levels</strong> value will cause displaying all menu postions available for a menu given.</li>\r\n</ul>\r\nYou have to remember that adding a menu, except adding an appropriate entry in an configuration file <strong>menus.json</strong>, also requires creating appropriate code in a theme.\r\n\r\nThis code uses a standard <a href="http://codex.wordpress.org/Function_Reference/wp_nav_menu">wp_nav_menu</a> function but you have to remember about three crucial things:\r\n<ul>\r\n	<li>code of <strong>wp_nav_menu</strong> function has to be placed inside IF condition in a form:<strong></strong> [code]if(gk_show_menu(''MENU_NAME'')) {[/code] where <strong>MENU_NAME</strong> is a menu name, e.g. <strong>mainmenu</strong><strong></strong>. Thanks to it, there will be a functionality which allows to display a menu only on subpages chosen.</li>\r\n	<li>in the case of main menu, it is very useful to create a duplicate in a mobile version so as while displaying a website on mobile devices, a menu will be adjusted to mobile devices.</li>\r\n	<li>in the case of a main menu, you have to use a special class derived from <strong>Walker</strong>: <strong>GKMenuWalker</strong> class; however, for a mobile menu, you have to use <strong>GKMenuWalkerMobile</strong> class. Thanks to it, appropriate menu structure will be generated.</li>\r\n</ul>\r\nCSS code connected with a menu is in <strong>css/wp.css</strong> and <strong>css/mobile.css</strong> files.\r\n\r\nScripts creating main menu animations are in <strong>js/gk.menu.js</strong> file.', 'Navigation settings', '', 'publish', 'open', 'open', '', 'navigation-settings-2', '', '', '2012-08-12 18:36:00', '2012-08-12 18:36:00', '', 0, 'http://wp1/?p=401', 0, 'post', '', 0),
(402, 1, '2012-07-12 13:38:51', '2012-07-12 13:38:51', 'GavernWP umożliwa rozbudowane zarządzanie menu na stronie. W pliku konfiguracyjnym  <strong>menus.json</strong> znajduje się lista menu dostępnych w szablonie. Menu te wyświetlane są w zakładce<strong> Navigation</strong>:\n\n[screenshot]\n\nDla każdego menu dostępnego na stronie dostępnych jest kilka opcji. Menu główne strony ma więcej opcji niż zwykłe menu umieszczone np. w  stopce strony.\n\nRóżnica polega na tym, że menu główne posiada dodatkowe opcje związane z animacją:\n\n[screenshot]\n\nOpcje te pozwalają określić rodzaj oraz prędkość animacji submenu.\n\nDodatkowo wszystkie rodzaje menu posiadają dwie opcje:\n<ul>\n	<li>opcję określającą czy dane menu jest włączone - dane menu może być włączone tylko na wybranych podstronach dzięki opcji <strong>Conditional rule</strong> - wtedy w polu Conditional rule należy podać regułę korzystającą z <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> oraz operatorów logicznych języka PHP. Np. reguła wyświetlająca menu na stronie głównej oraz w kategorii o nazwie "Meet GavernWP" będzie miała następującą postać: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]</li>\n	<li>opcję określającą głębokość menu tj. maksymalny poziom zagnieżdżenia dla wyświetlanych pozycji menu. Jeżeli np. chcemy pominąć drugi poziom menu i wyświetlić tylko te pozycje menu, które znajdują się na pierwszym poziomie menu, nalezy ustawić tą opcję na wartość <strong>1</strong>. Oczywiście wartość <strong>All levels</strong> spowoduje wyświetlenie wszystkich pozycji menu dostępnych dla danego menu.</li>\n</ul>\nNależy pamiętać, że dodanie menu poza dodaniem stosownego wpisu w pliku konfiguracyjnym <strong>menus.json</strong> wymaga też stworzenia w szablonie stosownego kodu.\n\nKod ten korzysta ze standardowej funkcji <a href="http://codex.wordpress.org/Function_Reference/wp_nav_menu">wp_nav_menu</a>, przy czym należy pamiętać o trzech istotnych kwestiach:\n<ul>\n	<li>kod funkcji <strong>wp_nav_menu</strong> należy umieścić wewnątrz warunku IF postaci: [code]if(gk_show_menu(''MENU_NAME'')) {[/code] gdzie <strong>MENU_NAME</strong> to oczywiście nazwa menu np. <strong>mainmenu</strong>. Dzięki temu zapewnimy działanie funkcjonalności, która pozwala wyświetlać menu tylko na wybranych podstronach.</li>\n	<li>w wypadku menu głównego warto stworzyć jego duplikat w wersji mobilnej tak by przy wyświetlaniu strony na urządzeniach mobilnych pojawiło się menu dostosowane do urządeń mobilnych.</li>\n	<li>w wypadku menu głównego należy zastosować specjalną klasę dziedzicącą po klasie <strong>Walker</strong>: <strong>GKMenuWalker</strong>, natomiast dla menu mobilnego należy wykorzystać klasę <strong>GKMenuWalkerMobile</strong>. Zapewni to wygenerowanie odpowiedniej struktury menu.</li>\n</ul>\nKod CSS związany z menu znajduje się w plikach <strong>css/wp.css</strong> oraz <strong>css/mobile.css</strong>.\n\n&nbsp;', 'Navigation settings', '', 'inherit', 'open', 'open', '', '401-revision', '', '', '2012-07-12 13:38:51', '2012-07-12 13:38:51', '', 401, 'http://wp1/uncategorized/401-revision/', 0, 'revision', '', 0),
(403, 1, '2012-08-12 17:28:05', '2012-08-12 17:28:05', 'GavernWP gives a possibility of advanced menu managing on a website. There is a list of menus available in a template in a configuration file - <strong>menus.json</strong>. These menus are displayed in a <strong>Navigation</strong> tab:\n\n[screenshot]\n\nThere are a few options available for each menu available on a website. Website''s main menu has more options than a menu placed e.g. in a page''s footer.\n\nThe difference is that a main menu has additional options connected with animation:\n\n[screenshot]\n\nThese options allow to specify the type and speed of animation of a submenu.\n\nAdditionally, all menu types have the two options:\n<ul>\n	<li>an option specifying whether a menu given was switched on - a menu given can be switched on only on a particular subpages thanks to a <strong>Conditional rule</strong> option - then, you have to insert a rule from  <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of a PHP language in  a Conditional rule field, e.g. a rule displaying a menu on the homepage and in a category called "Meet GavernWP" will have the following form:  [code]is_homepage() || is_category(''Meet GavernWP'')[/code]</li>\n	<li>an option specifying menu depth i.e. a maximal nesting level for all menu positions displayed. If e.g. you want to skip the second menu level and display menu positions which are on the first menu level, you have to set this option to <strong>1</strong>. Of course <strong>All levels</strong> value will cause displaying all menu postions available for a menu given.</li>\n</ul>\nYou have to remember that adding a menu, except adding an appropriate entry in an configuration file <strong>menus.json</strong>, also requires creating appropriate code in a template.\n\nThis code uses a standard <a href="http://codex.wordpress.org/Function_Reference/wp_nav_menu">wp_nav_menu</a> function but you have to remember about three crucial things:\n<ul>\n	<li>code of <strong>wp_nav_menu</strong> function has to be placed inside IF condition in a form:<strong></strong> [code]if(gk_show_menu(''MENU_NAME'')) {[/code] where <strong>MENU_NAME</strong> is a menu name, e.g. <strong>mainmenu</strong><strong></strong>. Thanks to it, there will be a functionality which allows to display a menu only on subpages chosen.</li>\n	<li>in the case of main menu, it is very useful to create a duplicate in a mobile version so as while displaying a website on mobile devices, a menu will be adjusted to mobile devices.</li>\n	<li>in the case of a main menu, you have to use a special class derived from <strong>Walker</strong>: <strong>GKMenuWalker</strong> class; however, for a mobile menu, you have to use <strong>GKMenuWalkerMobile</strong> class. Thanks to it, appropriate menu structure will be generated.</li>\n</ul>\nCSS code connected with a menu is in <strong>css/wp.css</strong> and <strong>css/mobile.css</strong> files.\n\nScripts creating main menu animations are in <strong>js/gk.menu.js</strong> file.', 'Navigation settings', '', 'inherit', 'open', 'open', '', '401-autosave', '', '', '2012-08-12 17:28:05', '2012-08-12 17:28:05', '', 401, 'http://wp1/uncategorized/401-autosave/', 0, 'revision', '', 0),
(404, 1, '2012-07-12 13:56:55', '2012-07-12 13:56:55', 'Layout settings in a theme are connected with five main options:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-14.jpg"><img class="aligncenter size-full wp-image-702" title="Layout" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-14.jpg" alt="" width="571" height="355" /></a>\r\n\r\nThanks to a <strong>Page layout</strong> option, it is possible to specify a column position in page''s layout: on the left/right side or switch off showing a column completely (in this situation, you achieve the layout available via an additional subpage style - <strong>fullwidth</strong>).\r\n\r\nA <strong>Theme width</strong> option specifies maximal page''s width - no matter what width a browser window has, page''s width will not exceed this value.\r\n\r\nColumn width is specified in per cents thanks to a <strong>Sidebar width</strong> option. <strong>Tablet width</strong> and <strong>Mobile width</strong> options allow to specify width of a browser window in pixels where <strong>css/tablet.css</strong> and <strong>css/mobile.css</strong> files are loaded.\r\n\r\nIn the case of <strong>tablet.css</strong>, modules which normally create four - column layout (max.), will appear in two - column layout which after loading a <strong>mobile.css</strong> file will change into one - column layout. Additionally, after loading a <strong>tablet.css</strong> file,a column moves under main content of a page given.\r\n\r\n<strong>Note</strong>: all options from a <strong>Layout</strong> section are also in a live-preview editor which allows to adjust values of these options easily, thanks to a site live preview.', 'Layout settings', '', 'publish', 'open', 'open', '', 'layout-settings-2', '', '', '2012-08-12 18:29:36', '2012-08-12 18:29:36', '', 0, 'http://wp1/?p=404', 0, 'post', '', 0),
(405, 1, '2012-07-12 13:56:27', '2012-07-12 13:56:27', 'Ustawienia układu strony w szablonie związane są z pięcioma głównymi opcjami:\n\n[shortcodes]\n\nDzięki opcji <strong>Page layout</strong> można określić pozycję kolumny w układzie strony: po lewej, po prawej lub w ogóle wyłączyć pokazywanie kolumny (w tej sytuacji uzyskuje się układ dostępny także poprzez dodatkowy styl podstrony - <strong>fullwidth</strong>).\n\nOpcja <strong>Template width</strong> określa maksymalną szerokość strony - bez względu na szerokość okna przeglądarki szerokość strony nie przekroczy tej wartości.\n\nSzerokość kolumny określa się w procentach dzięki opcji <strong>Sidebar width</strong>. Natomiast opcje <strong>Tablet width</strong> i <strong>Mobile width</strong> pozwalają określić w pikselach szerokość okna przeglądarki przy której wczytywany jest kolejno plik <strong>css/tablet.css</strong> oraz <strong>css/mobile.css</strong>.\n\nW wypadku<strong> tablet.css</strong> moduły, które w normalnym układzie tworzą układ maksymalnie czterokolumnowy pojawiają się w układzie dwukolumnowym, który po załadowaniu pliku <strong>mobile.css</strong> przekształca się w układ jednokolumnowy. Dodatkowo po załadowaniu pliku <strong>tablet.css</strong> kolumna przemieszcza się pod główną treść danej strony.\n\nWskazówka: wszystkie opcje z sekcji <strong>Layout</strong> znajdują się też w edytorze live-preview, co pozwala na łatwiejsze dobranie .', 'Layout settings', '', 'inherit', 'open', 'open', '', '404-revision', '', '', '2012-07-12 13:56:27', '2012-07-12 13:56:27', '', 404, 'http://wp1/uncategorized/404-revision/', 0, 'revision', '', 0),
(406, 1, '2012-08-12 18:29:03', '2012-08-12 18:29:03', 'Layout settings in a template are connected with five main options:\n\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-14.jpg"><img class="aligncenter size-full wp-image-702" title="Layout" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-14.jpg" alt="" width="571" height="355" /></a>\n\nThanks to a <strong>Page layout</strong> option, it is possible to specify a column position in page''s layout: on the left/right side or switch off showing a column completely (in this situation, you achieve the layout available via an additional subpage style - <strong>fullwidth</strong>).\n\nA <strong>Template width</strong> option specifies maximal page''s width - no matter what width a browser window has, page''s width will not exceed this value.\n\nColumn width is specified in per cents thanks to a <strong>Sidebar width</strong> option. <strong>Tablet width</strong> and <strong>Mobile width</strong> options allow to specify width of a browser window in pixels where <strong>css/tablet.css</strong> and <strong>css/mobile.css</strong> files are loaded.\n\nIn the case of <strong>tablet.css</strong>, modules which normally create four - column layout (max.), will appear in two - column layout which after loading a <strong>mobile.css</strong> file will change into one - column layout. Additionally, after loading a <strong>tablet.css</strong> file,a column moves under main content of a page given.\n\n<strong>Note</strong>: all options from a <strong>Layout</strong> section are also in a live-preview editor which allows to adjust values of these options easily, thanks to a site live preview.', 'Layout settings', '', 'inherit', 'open', 'open', '', '404-autosave', '', '', '2012-08-12 18:29:03', '2012-08-12 18:29:03', '', 404, 'http://wp1/uncategorized/404-autosave/', 0, 'revision', '', 0),
(408, 1, '2012-07-13 12:43:30', '2012-07-13 12:43:30', 'Themes based on GavernWP framework have support for many useful solutions and technologies. The most important ones are:\r\n<ul>\r\n	<li><a title="Custom Page Styles" href="http://wp1/template-features/custom-page-styles-2/">Custom page styles</a> - they extend functionality of standard subpages.</li>\r\n	<li><a title="Typography" href="http://wp1/template-features/typography/">Typography</a> - an advanced list of elements gives a possibility to enhance posts about various add ons.</li>\r\n	<li><a title="Social API" href="http://wp1/template-features/social-api/">Social API</a> - it allows to add buttons for sharing posts in social network services very easily.</li>\r\n	<li><a title="Open Graph support" href="http://wp1/template-features/open-graph-support/">Open Graph</a> - it allows to specify the way in which content shared on Facebook will be visible.</li>\r\n	<li><a title="Threaded comments" href="http://wp1/template-features/threaded-comments-2/">Threaded comments</a> - they allow to make discussions under posts in a clear way.</li>\r\n	<li><a title="Branding" href="http://wp1/template-features/branding/">Branding</a> - it simplifies setting key elements of a website connected with its name or brand.</li>\r\n	<li><a title="Color Styles" href="http://wp1/uncategorized/color-styles/">Color styles</a> - thanks to color styles, it is possible to create many various color and stylistic versions of a theme.</li>\r\n</ul>\r\n&nbsp;', 'Main front-end features', '', 'publish', 'open', 'open', '', 'main-front-end-features', '', '', '2012-08-12 18:20:49', '2012-08-12 18:20:49', '', 0, 'http://wp1/?p=408', 0, 'post', '', 0),
(409, 1, '2012-07-13 12:43:15', '2012-07-13 12:43:15', 'Szablony budowane w oparciu o framework GavernWP posiadają wsparcie dla wielu użytecznych rozwiązań i technologii. Najważniejsze z nich to:\n<ul>\n	<li><a title="Custom Page Styles" href="http://wp1/template-features/custom-page-styles-2/">Custom page styles</a> - rozszerzają funkcjonalność standardowych podstron.</li>\n	<li><a title="Typography" href="http://wp1/template-features/typography/">Typography</a> - rozbudowana lista elementów umożliwia wzbogacenie postów o różnorodne dodatki.</li>\n	<li><a title="Social API" href="http://wp1/template-features/social-api/">Social API</a> - pozwala na łatwe dodanie do wpisu przycisków udostępniania postów w serwisach społecznościowych.</li>\n	<li><a title="Open Graph support" href="http://wp1/template-features/open-graph-support/">Open Graph</a> - umożliwia określenie sposobu w jaki będą widoczne udostępniane treści na Facebooku.</li>\n	<li><a title="Threaded comments" href="http://wp1/template-features/threaded-comments-2/">Threaded comments</a> - pozwalają na prowadzenie dyskusji pod postami w czytelny sposób.</li>\n	<li><a title="Branding" href="http://wp1/template-features/branding/">Branding</a> - ułatwia ustawienie kluczowych elementów strony związanych z jej nazwą lub marką.</li>\n	<li><a title="Color Styles" href="http://wp1/uncategorized/color-styles/">Color styles</a> - dzięki nim możliwe jest tworzenie wielu różnych wersji kolorystycznych oraz stylistycznych szablonu.</li>\n</ul>\n&nbsp;', 'Main front-end features', '', 'inherit', 'open', 'open', '', '408-revision', '', '', '2012-07-13 12:43:15', '2012-07-13 12:43:15', '', 408, 'http://wp1/uncategorized/408-revision/', 0, 'revision', '', 0),
(410, 1, '2012-07-13 13:20:33', '2012-07-13 13:20:33', 'One of the key elements which has influence on website''s look is an appropriate choice of fonts used for text presentation.\r\n\r\nGavernWP allows to choose fonts easily which are assigned to CSS selectors specified by a user.\r\n\r\nIn order to simplify support for many fonts on one page, GavernWP supports groups of fonts - each group allows to assign a font given to selectors chosen by a user:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-21.jpg"><img class="aligncenter size-full wp-image-720" title="Fonts" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-21.jpg" alt="" width="641" height="489" /></a>\r\n\r\nGroups of fonts are defined in a configuration file called <strong>fonts.json</strong>. Adding a new group of fonts is very easy - it is enough to define the next object of a form:\r\n\r\n[code]{\r\n"full_name": "Full name of the fonts group",\r\n"short_name": "short name of the fonts group using only alphanumeric characters",\r\n"description": "Short description of the font family"\r\n}[/code]\r\n\r\nAfter adding such an object, in a table included in <strong>fonts.json</strong> file, you will see the next group of fonts to manage in an administration panel.\r\n\r\nYou have to specify three basic values for each group of fonts:\r\n<ul>\r\n	<li> a type of font used</li>\r\n	<li> a font of a type given</li>\r\n	<li>selectors connected with a font given</li>\r\n</ul>\r\nSpecifying of a font type is restricted to choosing one out of three fonts types:\r\n<ul>\r\n	<li><strong>Standard fonts</strong> - standard sets of fonts available on the majority of computers - you have to choose a font given from a list which is shown under the field of choosing a type of font: <a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-22.jpg"><img class="aligncenter size-full wp-image-721" title="standard fonts" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-22.jpg" alt="" width="546" height="92" /></a></li>\r\n	<li><strong>Fonts Squirrel</strong> - fonts downloaded from <a href="http://www.fontsquirrel.com/" target="_blank">Font Squirrel</a> page - you have to download @font-face kit of a font given and place its content in <strong>fonts</strong> catalog.  It is very important to have a folder with the same name as a font name used in <strong>stylesheet.css</strong> file which is in a new catalog. If you prepare a catalog in this way, you will see a font given on the list to choose:  <a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-23.jpg"><img class="aligncenter size-full wp-image-722" title="Squirrel fonts" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-23.jpg" alt="" width="582" height="83" /></a></li>\r\n	<li><strong>Google Web Fonts</strong> - fonts from <a href="http://www.google.com/webfonts" target="_blank">Google Web Fonts</a> page; in this case, you have to specify the URL address of a font given: <a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-24.jpg"><img class="aligncenter size-full wp-image-723" title="MeetGavernWP ‹ Meet Gavern WP — WordPress-24" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-24.jpg" alt="" width="605" height="95" /></a></li>\r\n</ul>\r\nThe last stage is specifying selectors connected with a font given:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-26.jpg"><img class="aligncenter size-full wp-image-724" title="Font selectors" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-26.jpg" alt="" width="652" height="147" /></a>\r\n\r\nAfter saving the settings, the results should be visible on the website immediately - it is not required to make any additional operations.', 'Fonts settings', '', 'publish', 'open', 'open', '', 'fonts-settings-2', '', '', '2012-08-12 18:49:43', '2012-08-12 18:49:43', '', 0, 'http://wp1/?p=410', 0, 'post', '', 0),
(411, 1, '2012-07-13 13:19:35', '2012-07-13 13:19:35', 'Jednym z kluczowych elementów wpływających na wygląd strony WWW jest właściwy wybór czcionek zastosowanych do prezentacji tekstu.\n\nGavernWP umożliwia łatwy wybór czcionek przypisanych do określonych przez użytkownika selektorów CSS.\n\nAby ułatwić obsługę wielu różnych czcionek na jednej stronie GavernWP obsługuje grupy czcionek - każa grupa pozwala na przypisanie danej czcionki do wybranych przez użytkownika selektorów:\n\n[screenshot]\n\nGrupy czcionek zdefiniowane są w pliku konfiguracyjnym <strong>fonts.json</strong>. Dodanie nowej grupy czcionek jest bardzo proste - wystarczy zdefiniować kolejny obiekt postaci:\n\n[code]{\n"full_name": "Full name of the fonts group",\n"short_name": "short name of the fonts group using only alphanumeric characters"\n}[/code]\n\nPo dodaniu takiego obiektu w tablicy zawartej w pliku <strong>fonts.json </strong>ujrzymy w panelu administracyjnym kolejną grupę czcionek, którą można zarządzać.\n\nDla każdej grupy czcionek należy określić trzy podstawowe wartości:\n<ul>\n	<li>rodzaj zastosowanej czcionki</li>\n	<li>czcionka danego rodzaju</li>\n	<li>selektory powiązane z daną czcionką</li>\n</ul>\nOkreślenie rodzaju czcionki ogranicza się do wyboru jednego z trzech typów czcionek:\n<ul>\n	<li><strong>Standard fonts</strong> - standardowe zestawy czcionek dostępne na większości komputerów - należy wybrać daną czcionkę z listy pojawiającej się pod polem wyboru rodzaju czcionki: [screenshot]</li>\n	<li><strong>Fonts Squirrel</strong> - czcionki pobrane ze strony <a href="http://www.fontsquirrel.com/" target="_blank">Font Squirrel</a> - należy pobrać @font-face kit danej czcionki i umieścić jego zawartość w katalogu <strong>fonts</strong>. Ważne jest by folder miał taką samą nazwę jak nazwa czcionki zastosowana w pliku <strong>stylesheet.css</strong> znajdującym się w nowym katalogu. Po dodaniu tak przygotowanego katalogu dana czcionka pojawi się na liście wyboru: [screenshot]</li>\n	<li><strong>Google Web Fonts</strong> - czcionki pochodzace z zasobów strony <a href="http://www.google.com/webfonts" target="_blank">Google Web Fonts</a> w tym wypadku należy określić adres URL danej czcionki: [screenshot]</li>\n</ul>\nOstatni etap to określenie selektorów zwiąanych z d', 'Fonts settings', '', 'inherit', 'open', 'open', '', '410-revision', '', '', '2012-07-13 13:19:35', '2012-07-13 13:19:35', '', 410, 'http://wp1/uncategorized/410-revision/', 0, 'revision', '', 0),
(412, 1, '2012-08-12 18:48:57', '2012-08-12 18:48:57', 'One of the key elements which has influence on website''s look is an appropriate choice of fonts used for text presentation.\n\nGavernWP allows to choose fonts easily which are assigned to CSS selectors specified by a user.\n\nIn order to simplify support for many fonts on one page, GavernWP supports groups of fonts - each group allows to assign a font given to selectors chosen by a user:\n\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-21.jpg"><img class="aligncenter size-full wp-image-720" title="Fonts" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-21.jpg" alt="" width="641" height="489" /></a>\n\nGroups of fonts are defined in a configuration file called <strong>fonts.json</strong>. Adding a new group of fonts is very easy - it is enough to define the next object of a form:\n\n[code]{\n"full_name": "Full name of the fonts group",\n"short_name": "short name of the fonts group using only alphanumeric characters",\n"description": "Short description of the font family"\n}[/code]\n\nAfter adding such an object, in a table included in <strong>fonts.json</strong> file, you will see the next group of fonts to manage in an administration panel.\n\nYou have to specify three basic values for each group of fonts:\n<ul>\n	<li> a type of font used</li>\n	<li> a font of a type given</li>\n	<li>selectors connected with a font given</li>\n</ul>\nSpecifying of a font type is restricted to choosing one out of three fonts types:\n<ul>\n	<li><strong>Standard fonts</strong> - standard sets of fonts available on the majority of computers - you have to choose a font given from a list which is shown under the field of choosing a type of font: <a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-22.jpg"><img class="aligncenter size-full wp-image-721" title="standard fonts" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-22.jpg" alt="" width="546" height="92" /></a></li>\n	<li><strong>Fonts Squirrel</strong> - fonts downloaded from <a href="http://www.fontsquirrel.com/" target="_blank">Font Squirrel</a> page - you have to download @font-face kit of a font given and place its content in <strong>fonts</strong> catalog.  It is very important to have a folder with the same name as a font name used in <strong>stylesheet.css</strong> file which is in a new catalog. If you prepare a catalog in this way, you will see a font given on the list to choose:  <a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-23.jpg"><img class="aligncenter size-full wp-image-722" title="Squirrel fonts" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-23.jpg" alt="" width="582" height="83" /></a></li>\n	<li><strong>Google Web Fonts</strong> - fonts from <a href="http://www.google.com/webfonts" target="_blank">Google Web Fonts</a> page; in this case, you have to specify the URL address of a font given: <a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-24.jpg"><img class="aligncenter size-full wp-image-723" title="MeetGavernWP ‹ Meet Gavern WP — WordPress-24" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-24.jpg" alt="" width="605" height="95" /></a></li>\n</ul>\nThe last stage is specifying selectors connected with a font given:\n\n[screenshot]\n\nAfter saving the settings, the results should be visible on the website immediately - it is not required to make any additional operations.', 'Fonts settings', '', 'inherit', 'open', 'open', '', '410-autosave', '', '', '2012-08-12 18:48:57', '2012-08-12 18:48:57', '', 410, 'http://wp1/uncategorized/410-autosave/', 0, 'revision', '', 0),
(413, 1, '2012-07-13 13:50:16', '2012-07-13 13:50:16', 'GavernWP has SEO settings built - in which allow to overwrite Wordpress standard SEO settings. After switching on "Use Gavern SEO settings" option, a lot of options connected with SEO will appear:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-7.jpg"><img class="aligncenter size-full wp-image-688" title="SEO settings" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-7.jpg" alt="" width="575" height="617" /></a>\r\n\r\nThe first group of options is connected with page''s title:\r\n<ul>\r\n	<li><strong>Use blogname in title</strong> - this option allows to switch on showing a blogname in the title</li>\r\n	<li><strong>Separator used in title</strong> - it specifies a separator which is between a title description and a pages''s name</li>\r\n	<li><strong>Title - description</strong> - it allows to specify page''s title description (the first part of a title - before a separator)</li>\r\n	<li><strong>Title - blogname</strong> - it allows to specify page''s name (the second part of a title after a separator)</li>\r\n</ul>\r\nThe remaining options allow to switch on advanced management of <strong>keywords</strong> and <strong>description</strong> metatags:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-8.jpg"><img class="aligncenter size-full wp-image-689" title="Metatags" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-8.jpg" alt="" width="579" height="234" /></a>\r\n\r\nIn the case of a homepage, these metatags values are specified in a SEO settings panel whereas in the case of subpages, there are two settings available for both metatags:\r\n<ul>\r\n	<li><strong>Disabled</strong></li>\r\n	<li><strong>Enabled (custom field in the post editor)</strong></li>\r\n</ul>\r\nWhen you switch on these settings, under a posts editor two additional fields will appear:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-2.jpg"><img class="aligncenter size-full wp-image-690" title="Metaboxes" src="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-2.jpg" alt="" width="814" height="315" /></a>\r\n\r\nIf you fill them in, metatags used on one subpage with an entry will be created.', 'SEO settings', '', 'publish', 'open', 'open', '', 'seo-settings-2', '', '', '2012-08-12 18:17:28', '2012-08-12 18:17:28', '', 0, 'http://wp1/?p=413', 0, 'post', '', 0),
(414, 1, '2012-07-13 13:49:22', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-07-13 13:49:22', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=414', 0, 'post', '', 0),
(415, 1, '2012-07-13 13:49:55', '2012-07-13 13:49:55', 'GavernWP posiada wbudowane ustawienia SEO, które pozwalają nadpisać standardowe ustawienia SEO Wordpress. Po włączeniu opcji "Use Gavern SEO settings" pojawi się szereg opcji związanych z SEO:\n\n[screenshot]\n\nPierwsza grupa opcji związana jest z tytułem strony:\n<ul>\n	<li><strong>Use blogname in title</strong> - opcja ta pozwala włączyć pokazywanie nazwy bloga w tytule</li>\n	<li><strong>Separator used in title</strong> - określa znak znajdujący się pomiędzy opisem tytułu a nazwą strony</li>\n	<li><strong>Title - description</strong> - pozwala określić opis tytułu strony (pierwsza część tytułu - przed separatorem)</li>\n	<li><strong>Title - blogname</strong> - pozwala określić nazwę strony (druga część tytułu - po separatorze)</li>\n</ul>\nPozostałe opcje pozwalają włączyć zaawansowane zarządzanie metatagami <strong>keywords</strong> i <strong>description</strong>:\n\n[screenshot]\n\nW wypadku strony głównej wartości tych metatagów określane są od razu w panelu ustawień SEO, natomiast w wypadku podstron dla obu metatagów dostępne są dwa ustawienia:\n<ul>\n	<li><strong>Disabled</strong></li>\n	<li><strong>Enabled (custom field in the post editor)</strong></li>\n</ul>\nW wypadku włączenia tych ustawień pod edytorem postów pojawią się dwa dodatkowe pola:\n\n[screenshot]\n\nIch wypełnienie spowoduje stworzenie metatagów wykorzystywanych tylko n', 'SEO settings', '', 'inherit', 'open', 'open', '', '413-revision', '', '', '2012-07-13 13:49:55', '2012-07-13 13:49:55', '', 413, 'http://wp1/uncategorized/413-revision/', 0, 'revision', '', 0),
(416, 1, '2012-07-13 14:02:25', '2012-07-13 14:02:25', 'Basic settings of GavernWP allow to specify basic parameters connected with page''s display:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-664" title="Basic settings" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="541" height="404" /></a>\r\n\r\nThe first option allows to choose a color version of a theme. In this place, there may appear a few various fields depending on the conent of <strong>styles.json</strong> configuration file.\r\n\r\nThere is an option allowing to switch a style-switcher after an option/options of choosing theme''s styles  - it is an element allowing for a website''s user to choose a theme style himself/herself.\r\n\r\nThe next option is connected with switching on breadcrumbs element on a website. There are the following options to choose from: <strong>Enabled</strong>, <strong>Disabled</strong> and <strong>Conditional rule</strong> - then, you have to set a rule using <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of PHP language in a <strong>Conditional rule</strong> field, e.g. a rule displayinga a breadcrumbs element on the homepage and in the "Meet GavernWP" category will be in the following form: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\r\n\r\n"<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" option is useful when you want to place a widget instead of entries on the homepage - then  you have to switch it on <strong>mainbody</strong> widget position, place a widget needed which will replace a standard list of posts generated by Wordpress.\r\n\r\nThe last option, namely <strong>"Show author info"</strong> allows to display information about its author under each post in the following form:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Main-front-end-features-»-Free-WordPress-template.jpg"><img class="aligncenter size-full wp-image-665" title="Author block" src="http://wp1/wp-content/uploads/2012/07/Main-front-end-features-»-Free-WordPress-template.jpg" alt="" width="706" height="123" /></a>\r\n\r\n&nbsp;', 'Basic settings', '', 'publish', 'open', 'open', '', 'basic-settings-2', '', '', '2012-08-12 17:52:58', '2012-08-12 17:52:58', '', 0, 'http://wp1/?p=416', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(417, 1, '2012-07-13 14:01:32', '2012-07-13 14:01:32', 'Podstawowe ustawienia frameworka GavernWP pozwalają na określenie podstawowych parametrów związanych z wyświetlaniem strony:\n\n[screenshot]\n\nPierwsza opcja pozwala na wybór wersji kolorystycznej szablonu. W jej miejsce może pojawić się kilka różnych pól zależnie od zawartości pliku konfiguracyjnego <strong>styles.json</strong>.\n\nPo opcji/opcjach wyboru styli szablonu znajduje się opcja pozwalająca włączyć style-switcher - jest to element pozwalający użytkownikowi strony samodzielnie wybrać styl szablonu.\n\nOpcja "<strong>Use header image</strong>" pozwala określić czy na pozycji widżetów header w sytuacji gdy nie ma włączonego żadnego widżetu ma pojawiać się grafika. Grafikę tę można określić w live editorze szablonów w sekcji <strong>Header Image</strong>.\n\nKolejne dwie opcje związane są z włączeniem elementów breadcrumbs i font-size switcher na stronie. Do wyboru mamy opcje <strong>Enabled</strong>, <strong>Disabled</strong> oraz <strong>Conditional rule</strong> - wtedy w polu <strong>Conditional rule</strong> należy podać regułę korzystającą z <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> oraz operatorów logicznych języka PHP. Np. reguła wyświetlająca element breadcrumbs tylko na stronie głównej oraz w kategorii o nazwie "Meet GavernWP" będzie miała następującą postać: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\n\nOpcja "<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" jest użyteczna w momencie kiedy zamiast wpisów na stronie głównej chcemy umieścić jakiś widżet - wtedy należy ją włączyć i na pozycji widżetów <strong>mainbody</strong> umieścić potrzebny nam widżet, który zastąpi standardową listę postów generowaną przez Wordpress.\n\nOstatnia o', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-revision', '', '', '2012-07-13 14:01:32', '2012-07-13 14:01:32', '', 416, 'http://wp1/uncategorized/416-revision/', 0, 'revision', '', 0),
(418, 1, '2012-08-12 17:52:55', '2012-08-12 17:52:55', 'Basic settings of GavernWP allow to specify basic parameters connected with page''s display:\n\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-664" title="Basic settings" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="541" height="404" /></a>\n\nThe first option allows to choose a color version of a theme. In this place, there may appear a few various fields depending on the conent of <strong>styles.json</strong> configuration file.\n\nThere is an option allowing to switch a style-switcher after an option/options of choosing theme''s styles  - it is an element allowing for a website''s user to choose a theme style himself/herself.\n\nThe next option is connected with switching on breadcrumbs element on a website. There are the following options to choose from: <strong>Enabled</strong>, <strong>Disabled</strong> and <strong>Conditional rule</strong> - then, you have to set a rule using <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of PHP language in a <strong>Conditional rule</strong> field, e.g. a rule displayinga a breadcrumbs element on the homepage and in the "Meet GavernWP" category will be in the following form: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\n\n"<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" option is useful when you want to place a widget instead of entries on the homepage - then  you have to switch it on <strong>mainbody</strong> widget position, place a widget needed which will replace a standard list of posts generated by Wordpress.\n\nThe last option, namely <strong>"Show author info"</strong> allows to display information about its author under each post in the following form:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Main-front-end-features-»-Free-WordPress-template.jpg"><img class="aligncenter size-full wp-image-665" title="Author block" src="http://wp1/wp-content/uploads/2012/07/Main-front-end-features-»-Free-WordPress-template.jpg" alt="" width="706" height="123" /></a>\n\n&nbsp;', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-autosave', '', '', '2012-08-12 17:52:55', '2012-08-12 17:52:55', '', 416, 'http://wp1/uncategorized/416-autosave/', 0, 'revision', '', 0),
(419, 1, '2012-07-13 14:36:32', '2012-07-13 14:36:32', 'GavernWP has an advanced panel for managing theme''s options in an administration panel. These options have been divided into a few main groups:\r\n<ul>\r\n	<li>Basic settings</li>\r\n	<li>Layout settings</li>\r\n	<li>Fonts settings</li>\r\n	<li>Navigation settings</li>\r\n	<li>Advanced settings</li>\r\n	<li>Shortcodes settings</li>\r\n	<li>Social API settings</li>\r\n	<li>Theme branding settings</li>\r\n	<li>Back-end branding settings</li>\r\n	<li>SEO settings</li>\r\n</ul>\r\nAlso, some additional elements generated by a framework in an administration panel in some various places appear, namely:\r\n<ul>\r\n	<li>Typography button</li>\r\n	<li>Widget rules</li>\r\n	<li>Open Graph metabox</li>\r\n	<li>GavernWP SEO settings metaboxes</li>\r\n</ul>\r\nIt is also worth getting acquainted with a theme configuration with files use in JSON format:\r\n<ul>\r\n	<li>Option files</li>\r\n	<li>Theme configuration</li>\r\n</ul>\r\nThe ability of these files edition, gives a possibility of deep interference in websites work based on GaverWP.', 'Main back-end features', '', 'publish', 'open', 'open', '', 'main-back-end-features', '', '', '2012-11-20 13:08:03', '2012-11-20 13:08:03', '', 0, 'http://wp1/?p=419', 0, 'post', '', 0),
(421, 1, '2012-11-20 13:09:05', '2012-11-20 13:09:05', 'GavernWP has an advanced panel for managing theme''s options in an administration panel. These options have been divided into a few main groups:\n<ul>\n	<li>Basic settings</li>\n	<li>Layout settings</li>\n	<li>Fonts settings</li>\n	<li>Navigation settings</li>\n	<li>Advanced settings</li>\n	<li>Shortcodes settings</li>\n	<li>Social API settings</li>\n	<li>Theme branding settings</li>\n	<li>Back-end branding settings</li>\n	<li>SEO settings</li>\n</ul>\nAlso, some additional elements generated by a framework in an administration panel in some various places appear, namely:\n<ul>\n	<li>Typography button</li>\n	<li>Widget rules</li>\n	<li>Open Graph metabox</li>\n	<li>GavernWP SEO settings metaboxes</li>\n</ul>\nIt is also worth getting acquainted with a theme configuration with files use in JSON format:\n<ul>\n	<li>Option files</li>\n	<li>Theme configuration</li>\n</ul>\nThe ability of these files edition, gives a possibility of deep interference in websites work based on GaverWP.', 'Main back-end features', '', 'inherit', 'open', 'open', '', '419-autosave', '', '', '2012-11-20 13:09:05', '2012-11-20 13:09:05', '', 419, 'http://wp1/uncategorized/419-autosave/', 0, 'revision', '', 0),
(422, 1, '2012-07-14 08:04:05', '2012-07-14 08:04:05', 'An advanced settings section includes settings which are connected with different aspects of GavernWP framework work:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-659" title="Advanced settings" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="595" height="571" /></a>\r\n<ul>\r\n	<li><strong>Widget rules</strong> allows to switch on this mechanism. It is recommended to switch on this option in the case when you do not need to use widgets visible on a chosen subpages. Note that it will allow to optimize a little bit the speed of a website as operations of checking rules for each widget will not be made.</li>\r\n	<li><strong>Support for Google Chrome Frame</strong> - it switches on a metatag forcing use of  <a href="https://developers.google.com/chrome/chrome-frame/" target="_blank">Google Chrome Frame</a> plugin on Internet Explorer browsers if it is installed.</li>\r\n	<li><strong>Parse emoticons in the text widgets</strong> - it activates parsing emoticons to a graphic form in widgets.</li>\r\n	<li><strong>Parse shortcodes in the text widgets</strong> - it activates parsing of <a href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> in widgets.</li>\r\n	<li><strong>Use Thickbox</strong> - it allows to switch on Thickbox  script for presenting images included in posts.</li>\r\n	<li><strong>Value for the $content_width variable</strong> -  <strong>$content_width</strong> variable is used while creating thumbnails of images for posts, that''s why it has to be defined as an appropriate value - we recommend to set the value not bigger than the max. page''s width.</li>\r\n	<li><strong>Use the override.css file</strong> - thanks to switching on this option, an <strong>override.css</strong> file will appear at the end of the list of CSS files which allows to overwrite theme''s CSS rules easily without interference in existing CSS code.</li>\r\n	<li><strong>Enable support for Open Search</strong> - it allows to switch on support for  <a href="http://www.opensearch.org/Home" target="_blank">Open Search</a> technology.</li>\r\n	<li><strong>Enable support for Open Graph</strong> - it allows to switch on support for <a href="http://ogp.me/" target="_blank">Open Graph </a> technology - after switching on this option, an additional metabox will appear on a page for editing posts: <a href="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-692" title="OpenGraph metabox" src="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="810" height="554" /></a></li>\r\n</ul>', 'Advanced settings', '', 'publish', 'open', 'open', '', 'advanced-settings-2', '', '', '2012-08-12 18:19:22', '2012-08-12 18:19:22', '', 0, 'http://wp1/?p=422', 0, 'post', '', 0),
(423, 1, '2012-07-14 08:03:31', '2012-07-14 08:03:31', 'Sekcja ustawień zaawansowanych zawiera ustawienia, które są związane z wieloma różnymi aspektami działania frameworka GavernWP:\n\n[screenshot]\n\n<strong>Widget rules</strong> pozwala wyłączyć ten mechanizm. Zalecamy wyłączenie tej opcji wtedy, kiedy nie potrzebujemy korzystać z widżetów widocznych tylko na wybranych podstronach. Należy zauważyć, że pozwoli to lekko zoptymalizować szybkość działania strony, gdyż operacje sprawdzania reguł dla każdego widżetu nie będą wykonywane.\n\n<strong>Support for Google Chrome Frame</strong> - włącza metatag wymuszający użycie plugina <a href="https://developers.google.com/chrome/chrome-frame/" target="_blank">Google Chrome Frame</a> na przeglądarkach Internet Explorer o ile jest on zainstalowany.\n\n<strong>Parse emoticons in the text widgets</strong> - aktywuje parsowanie emotikon do postaci graficznej w widżetach.\n\n<strong>Parse shortcodes in the text widgets</strong> - aktywuje parsowanie <a href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> w widżetach.\n\n<strong>Use Thickbox</strong> - pozwala na włączenie użycia skryptu Thickbox do prezentacji grafik zawartych w postach.\n\n<strong>Value for the $content_width variable</strong> - zmienna <strong>$content_width</strong> jest wykorzystywana przy tworzeniu miniatur grafik dla postów, dlatego należy ją zdefiniować jako odpowiednią wartość - polecamy podać wartość nie większą niż maksymalna szerokość strony.\n\n<strong>Use the override.css file</strong> - dzięki włączeniu tej opcji na końcu listy plików CSS pojawi się plik <strong>override.css</strong>, który pozwala na łatwe nadpisywanie reguł CSS szablonu bez ingerencji w istniejący kod CSS.\n\n<strong>Enable support for Open Search</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://www.opensearch.org/Home" target="_blank">Open Search</a>.\n\n<strong>Enable support for Open Graph</strong> - pozwala na włączenie wsparcia dla technologii Open Graph - po włączeniu tej opcji na stronie edycji postów pojawi się dodatkowy metabox: [screenshot]', 'Advanced settings', '', 'inherit', 'open', 'open', '', '422-revision', '', '', '2012-07-14 08:03:31', '2012-07-14 08:03:31', '', 422, 'http://wp1/uncategorized/422-revision/', 0, 'revision', '', 0),
(424, 1, '2012-07-14 08:18:41', '2012-07-14 08:18:41', 'A section of options connected with Social API includes five groups of options:\r\n<ul>\r\n	<li>options connected with sharing at Facebook</li>\r\n	<li>options connected with sharing on G+</li>\r\n	<li>options connected with sharing on Twitter</li>\r\n	<li>options connected with sharing on Pinterest</li>\r\n	<li>options allowing to switch on/off Social API on particular subpages.</li>\r\n</ul>\r\nOptions connected with sharing are the equivalent of parameters available in online editors, used for creating buttons like:\r\n<ul>\r\n	<li><a href="https://developers.facebook.com/docs/reference/plugins/like/" target="_blank">Facebook - ''like it'' button</a></li>\r\n	<li><a href="https://developers.google.com/+/plugins/+1button/" target="_blank">Goggle Plus - ''+1'' button</a></li>\r\n	<li><a href="https://dev.twitter.com/docs/tweet-button" target="_blank">Twitter - ''tweet'' button</a></li>\r\n	<li><a href="http://pinterest.com/about/goodies/" target="_blank">Pinterest - ''pin it'' button</a></li>\r\n</ul>\r\nThe last group of options allows to specify where they will be displayed - thanks to <strong>Include/Exclude specified articles from Social API</strong> option, it is possible to switch off Social API completely or switch on/off this functionality only for chosen posts, subpages and categories.\r\n\r\nWe specify the list of posts, subpages and categories in three last options:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-2.jpg"><img class="aligncenter size-full wp-image-656" title="Social API" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-2.jpg" alt="" width="704" height="268" /></a>\r\n\r\nas a sequence of ID, slug or the names of posts given, subpages or categories separated with comas, e.g.  [code]1,5,25[/code] or [code]typography,theme-settings,theme-essentials[/code]', 'Social API settings', '', 'publish', 'open', 'open', '', 'social-api-settings-2', '', '', '2012-08-12 17:34:03', '2012-08-12 17:34:03', '', 0, 'http://wp1/?p=424', 0, 'post', '', 0),
(425, 1, '2012-07-14 08:18:00', '2012-07-14 08:18:00', 'Sekcja opcji związanych z Social API zawiera 5 grup opcji:\n<ul>\n	<li>opcje związane z udostępnianiem na Facebook</li>\n	<li>opcje związane z udostępnianiem na G+</li>\n	<li>opcje związane z udostępnianiem na Twitter</li>\n	<li>opcje związane z udostępnianiem na Pinterest</li>\n	<li>opcje pozwalające na włączenie/wyłączenie Social API na poszczególnych podstronach.</li>\n</ul>\nOpcje związane z udostępnianiem są odpowiednikiem parametrów dostępnych w edytorach online, służących do tworzenia przycisków:\n<ul>\n	<li><a href="https://developers.facebook.com/docs/reference/plugins/like/" target="_blank">Facebook - ''like it'' button</a></li>\n	<li><a href="https://developers.google.com/+/plugins/+1button/" target="_blank">Goggle Plus - ''+1'' button</a></li>\n	<li><a href="https://dev.twitter.com/docs/tweet-button" target="_blank">Twitter - ''tweet'' button</a></li>\n	<li><a href="http://pinterest.com/about/goodies/" target="_blank">Pinterest - ''pin it'' button</a></li>\n</ul>\nOstatnia grupa opcji pozwala określić gdzie będą wyświetlane - dzięki opcji <strong>Include/Exclude specified articles from Social API</strong> można w ogóle wyłączyć Social API lub włączyć/wyłączyć tą funkcjonalność tylko dla wybranych postów, podstron i kategorii.\n\nListę postów, podstron i kategorii określamy w trzech ostatnich opcjach:\n\n[screenshot]\n\njako ciąg ID, slug lub nazw danych postów, podstron lub kategorii porozdzielanych przecinkami np. [code]1,5,25[/code] lub [code][/code]', 'Social API settings', '', 'inherit', 'open', 'open', '', '424-revision', '', '', '2012-07-14 08:18:00', '2012-07-14 08:18:00', '', 424, 'http://wp1/uncategorized/424-revision/', 0, 'revision', '', 0),
(426, 1, '2012-08-12 17:32:46', '2012-08-12 17:32:46', 'A section of options connected with Social API includes five groups of options:\n<ul>\n	<li>options connected with sharing at Facebook</li>\n	<li>options connected with sharing on G+</li>\n	<li>options connected with sharing on Twitter</li>\n	<li>options connected with sharing on Pinterest</li>\n	<li>options allowing to switch on/off Social API on particular subpages.</li>\n</ul>\nOptions connected with sharing are the equivalent of parameters available in online editors, used for creating buttons like:\n<ul>\n	<li><a href="https://developers.facebook.com/docs/reference/plugins/like/" target="_blank">Facebook - ''like it'' button</a></li>\n	<li><a href="https://developers.google.com/+/plugins/+1button/" target="_blank">Goggle Plus - ''+1'' button</a></li>\n	<li><a href="https://dev.twitter.com/docs/tweet-button" target="_blank">Twitter - ''tweet'' button</a></li>\n	<li><a href="http://pinterest.com/about/goodies/" target="_blank">Pinterest - ''pin it'' button</a></li>\n</ul>\nThe last group of options allows to specify where they will be displayed - thanks to <strong>Include/Exclude specified articles from Social API</strong> option, it is possible to switch off Social API completely or switch on/off this functionality only for chosen posts, subpages and categories.\n\nWe specify the list of posts, subpages and categories in three last options:\n\n[screenshot]\n\nas a sequence of ID, slug or the names of posts given, subpages or categories separated with comas, e.g.  [code]1,5,25[/code] or [code]typography,theme-settings,theme-essentials[/code]', 'Social API settings', '', 'inherit', 'open', 'open', '', '424-autosave', '', '', '2012-08-12 17:32:46', '2012-08-12 17:32:46', '', 424, 'http://wp1/uncategorized/424-autosave/', 0, 'revision', '', 0),
(427, 1, '2012-07-14 09:17:02', '2012-07-14 09:17:02', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main files groups:\r\n<ul>\r\n	<li><strong>tabs.json</strong> file - it includes a list of sections visible on the right side of an administration panel: <a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-654" title="Sidebar" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="231" height="485" /></a> each section is described with a table in the form [code]["Basic", "options.basic", "enabled"][/code] the first element of a table is a section name displayed in a panel, the second element is a file name without "<strong>.json</strong>" extension which stores a list of options available in a section given and the third value refers to whether a section given is visible in a panel. In this case, there will be a <strong>Basic</strong> tab displayed in a panel based on content of <strong>options.basic.json</strong> file.</li>\r\n	<li><strong>options.*.json </strong>files - they include a list of options available in a section given - their names are strictly connected with the content of <strong>tabs.json</strong> file.</li>\r\n</ul>\r\nEach options.*.json file includes three main fields in an object stored:\r\n<ul>\r\n	<li><strong>groupname</strong> - it is a section title</li>\r\n	<li><strong>groupdesc</strong> - it specifies a section description displayed directly under a  section title</li>\r\n	<li><strong>fields</strong> - it includes a table of objects of fields displayed under the title and a section description</li>\r\n</ul>\r\nEach field defined by an object including the following fields:\r\n<ul>\r\n	<li><strong>name</strong> - it specifies an option name which will be connected with a particular field. There is a prefix added automatically to an option name which is a theme name (it is stored in a global variable - <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- it specifies a field type. Standard fields are:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - a field including a description text - it is not used for storing any option value</li>\r\n	<li><strong>Text</strong> - the easiest text field allowing to insert short text values</li>\r\n	<li><strong>Textarea</strong> - a text field used for inserting a greater number of text values</li>\r\n	<li><strong>Select</strong> - a select field</li>\r\n	<li><strong>Switcher</strong> - a checkbox restricted to two options: "Enabled" and "Disabled"</li>\r\n	<li><strong>Media</strong> - a field allowing to choose images</li>\r\n	<li><strong>WidthHeight</strong> - a field allowing to specify two values defining width and height (mostly used with a Media field)</li>\r\n</ul>\r\n</li>\r\n</ul>\r\nThese fields are defined in a <strong>gavern/form_elements/standard.php</strong> file and their code was derived from a <strong>GKFormInput</strong> field. It is worth remembering that files connected with options are parsed by a <strong>gavern/form.parser.php</strong> file. Additionally, you may create your own fields types in a <strong>gavern/form_elements</strong> catalog. In GavernWP, we have included the following fields types:\r\n<strong></strong>\r\n<ul>\r\n	<li><strong>Menu</strong> - a field allowing to generate options connected with page''s menu - used in a Navigation section</li>\r\n	<li><strong>ThemeStyle</strong> - a field allowing to choose page''s style - used at the beginning of a <strong>Basic</strong> section.</li>\r\n</ul>\r\nThe description of creating your own fields types we will describe in the further part of this article.\r\n<ul>\r\n	<li><strong>label</strong> - it specifies a label text visible next to a field</li>\r\n	<li><strong>tooltip</strong> - (optional) it allows to specify tooltip content which will appear after mousing over a label of a field given</li>\r\n	<li><strong>default</strong> - default value of a field given</li>\r\n	<li><strong>class</strong> - (optional) this field allows to specify CSS classes added to an element while generating it (if a field code supported such a functionality)</li>\r\n	<li><strong>format</strong> - (optional) a field specifying a desired field content in the form of a regular expression. e.g. value: [code][a-zA-Z]{2,5}[/code] specifies that a field given will be filled in correctly only when a user set as its value a sequence of capital or small letters from 2 to 5 symbols.</li>\r\n	<li><strong>required</strong> - (optional) allows to specify whether filling in a particular field was required</li>\r\n	<li><strong>visibility</strong> - (optional) specifies when a particular field is visible. Visibility rules are separated with commas and are created in <strong>FIELD_NAME=VALUE</strong> format - in the case of a few visibility rules, they are linked with <strong>AND</strong> operator. The value of  <strong>FIELD_NAME</strong> is a name without a prefix with a theme name. e.g. [code]option1=10,option2=20[/code] will cause that a field given will be visible when an option with <strong>option1</strong> name will be set to <strong>10</strong> and, at the same time, an <strong>option2</strong> option will have have value equals <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (optional) this field is used for storing additional values, e.g. in the case of a <strong>Select</strong> field, it is used for storing names and options values. This field is very useful when creating more advanced fields which may require additional configuration options.</li>\r\n</ul>\r\nAfter adding a new option, you have to remember about its support in the theme. Option value is loaded by using a get_option function of a schemata given:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\nwhen <strong>OPTION_NAME</strong> is an option name from a JSON file and <strong>DEFAULT_VALUE</strong> is default value of an option which will be used when a user does not specify a value of an option given. What is important, there is a "<strong>_</strong>" symbol which you cannot omit. A prefix with a theme name is added in order differentiate values of options of different themes.\r\n<h3>Creating your own field types options</h3>\r\nWhile creating a new field type, you have to start from creating a catalog compliant with a field name, e.g. <strong>CustomField</strong> in a <strong>gavern/form_elements</strong> catalog. Then, you have to create a config.json file in this catalog and fill it in according to the schemata below:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\n<strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> fields have to include particular values; js and css fields are optional - they allow to specify whether a field given has to use additional CSS and JavaScript code (then, a name of files from a field catalog has to be set as a value). Also, you have to create a <strong>customfield.php</strong> file including a <strong>GKFormInputCustomField</strong> class derived after a <strong>GKFormInput</strong> class.\r\n\r\nAlso, a <strong>customfield.css</strong> file must include a safety code at the beginning:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nEach field class has to include at least one public method - <strong>output</strong> not loading any additional arguments. This method must return HTML code of a field given. Field properties froma JSON file are available as class fields, e.g. <strong>required</strong> is available as:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nThe second important public methid of each class of a form field is a <strong>getValue</strong> method which loads one argument - <strong>$default</strong>. Its use is optional and useful only when a value of a field given uses more than one field in the data base. Then, it is useful to overwrite this method - as an example we recommend a standard code of a <strong>WidthHeight</strong> field where overwritting a getValue method was used for storing values of two form fields in one main field created by a <strong>GKInputFormWidthHeight</strong> class.\r\n\r\nThe remaining class methods have to be created according to the needs of the author of a form  field given.', 'Option files', '', 'publish', 'open', 'open', '', 'option-files', '', '', '2012-08-12 17:43:11', '2012-08-12 17:43:11', '', 0, 'http://wp1/?p=427', 0, 'post', '', 8),
(428, 1, '2012-07-14 09:16:11', '2012-07-14 09:16:11', 'W GavernWP modyfikacja zawartości panelu administracyjnego jest bardzo łatwa - opiera się na plikach JSON, zawierających listę opcji. Dzięki temu tworzenie nowych opcji dostępnych w panelu administracyjnym jest bardzo łatwe.\n\nPliki opcji znajdują się w katalogu gavern/options w folderze związanym z aktualnie używanym językiem. W katalogu znajdziemy dwie główne grupy plików:\n<ul>\n	<li>plik <strong>tabs.json</strong> - zawiera on listę sekcji widocznych w panelu administracyjnym po prawej stronie: [screensthot] każda sekcja jest opisana tablicą postaci [code]["Basic", "options.basic", "enabled"][/code] pierwszy element tablicy to nazwa sekcji wyświetlana w panelu, drugi element to nazwa pliku bez rozszerzenia "<strong>.json</strong>", którzy przechowuje listę dostępnych w danej sekcji opcji, a trzecia wartość odnosi się do tego czy dana sekcja jest widoczna w panelu. W tym przypadku zostanie w panelu wyświetlony tab <strong>Basic</strong> na podstawie zawartości pliku <strong>options.basic.json</strong>.</li>\n	<li>pliki <strong>options.*.json</strong> - zawierają one listę opcji dostępnych w danej sekcji - ich nazwy są ściśle powiązane z zawartością pliku <strong>tabs.json</strong>.</li>\n</ul>\nKażdy plik options.*.json zawiera w przechowywanym obiekcie trzy główne pola:\n<ul>\n	<li><strong>groupname</strong> - jest to tytuł sekcji</li>\n	<li><strong>groupdesc</strong> - określa opis sekcji wyświetlany bezpośrednio pod tytułem sekcji</li>\n	<li><strong>fields</strong> - zawiera tablicę obiektów pól wyświetlanych pod tytułem i opisem sekcji</li>\n</ul>\nKażde pole definiowane jest przez obiekt zawierający następujące pola:\n<ul>\n	<li><strong>name</strong> - określa nazwę opcji jaka będzie związana z danym polem. Do nazwy opcji automatycznie jest dodawany prefiks będący nazwą szablonu (przechowywany w zmiennej globalnej <strong>$tpl-&gt;name</strong>).</li>\n	<li><strong>type</strong>- określa typ pola. Standardowe rodzaje pól to:\n<ul>\n	<li><strong>TextBlock</strong> - pole zawierające tekst opisu - nie jest stosowane do przechowywania żadnej wartości opcji</li>\n	<li><strong>Text</strong> - najprostsze pole tekstowe pozwalające na wprowadzanie krótkich wartości tekstowych</li>\n	<li><strong>Textarea</strong> - pole tekstowe służące do wprowadzania większej ilości wartości tekstowych</li>\n	<li><strong>Select</strong> - pole wyboru</li>\n	<li><strong>Switcher</strong> - pole wyboru ograniczone do dwóch opcji: "Enabled" i "Disabled"</li>\n	<li><strong>Media</strong> - pole pozwalające na wybór grafiki</li>\n	<li><strong>WidthHeight</strong> - pole pozwalające na określenie dwóch wartości definiujących szerokość i wysokość (najczęściej wykorzystywane wraz z polem Media).</li>\n</ul>\nPola te zdefiniowane są w pliku <strong>gavern/form_elements/standard.php</strong> a ich kod powstał na bazie dziedziczenia z klasy <strong>GKFormInput</strong>. Warto pamiętać, że pliki związane z opcjami parsowane są przez plik <strong>gavern/form.parser.php</strong>.Dodatkowo w katalogu <strong>gavern/form_elements</strong> można tworzyć własne typy pól. W GavernWP standardowo zawarliśmy następujące rodzaje pól:\n<ul>\n	<li><strong>Fonts</strong> - jest to pole generujące opcje związane z wyborem fontów - zastosowane w sekcji <strong>Fonts</strong>.</li>\n	<li><strong>Menu</strong> - pole pozwalające wygenerować opcje związane z menu strony - zastosowane w sekcji Navigation.</li>\n	<li><strong>TemplateStyle</strong> - pole pozwalające wybrać styl strony - zastosowane na poczatku sekcji <strong>Basic</strong>.</li>\n</ul>\nOpis tworzenia własnych rodzajów pól szerzej opiszemy w dalszej części tego artykułu.</li>\n	<li><strong>label</strong> - określa tekst etykiety widocznej obok pola</li>\n	<li><strong>tooltip</strong> - (opcjonalne) pozwala określić treść tooltipa, który pojawi się po najechaniu na etykietę danego pola.</li>\n	<li><strong>default</strong> - domyślna wartość danego pola.</li>\n	<li><strong>class</strong> - (opcjonalne) pole to pozwala określić klasy CSS dodawane do elementu podczas jego generowania (o ile taką funkcjonalność obsługuje kod pola)</li>\n	<li><strong>format</strong> - (opcjonalne) pole określające w postaci wyrażenia regularnego pożądaną zawartosć pola. Przykładowo wartość: [code][a-zA-Z]{2,5}[/code] określa, że dane pole będzie poprawnie wypełnione tylko wtedy, gdy użytkownik poda jako jego wartość ciąg liter dużych lub małych o długości 2 do 5 znaków</li>\n	<li><strong>required</strong> - (opcjonalne) pozwala określić czy wypełnienie danego pola jest wymagane</li>\n	<li><strong>visibility</strong> - (opcjonalne) określa kiedy dane pole jest widoczne. Reguły widoczności rozdzielane są przecinkiem i tworzone są w formacie <strong>FIELD_NAME=VALUE</strong> - w wypadku kilku reguł widoczności są one traktowane jako połączone operatorem <strong>AND</strong>. Wartość <strong>FIELD_NAME</strong> to nazwa pola bez prefiksu z nazwą szablonu. Przykładowo zapis: [code]option1=10,option2=20[/code] sprawi, że dane pole będzie widoczne dopiero wtedy gdy opcja o nazwie <strong>option1</strong> zostanie ustawiona na wartość <strong>10</strong> i jednocześnie opcja <strong>option2</strong> będzie mieć wartość <strong>20</strong>.</li>\n	<li><strong>other</strong> - (opcjonalne) pole to jest wykorzystywane do przechowywania dodatkowych wartości np. w wypadku pola typu <strong>Select</strong> do przechowywania nazw i wartości opcji. Jest to pole bardzo przydatne w wypadku tworzenia bardziej rozbudowanych pól, które mogą wymagać dodatkowych opcji konfiguracyjnych.</li>\n</ul>\nPo dodaniu nowej opcji należy pamiętać o obsłużeniu jej w samym szablonie. Wartość opcji pobieramy używając funkcji get_option według schematu:\n\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\n\ngdzie <strong>OPTION_NAME</strong> to nazwa opcji z pliku JSON a <strong>DEFAULT_VALUE</strong> to wartość domyślna opcji, która zostanie wykorzystana w momencie kiedy użytkownik sam nie określił jeszcze wartości danej opcji. Co ważne przed <strong>OPTION_NAME</strong> znajduje się znak "<strong>_</strong>", którego nie wolno pominąć. Prefiks z nazwą szablonu jest dodawany w celu rozróżnienia wartości opcji różnych szablonów.\n<h3>Tworzenie własnych pól opcji</h3>\nPrzy tworzeniu nowego rodzaju pola należy zaczać od stworzenia katalogu zgodnego z nazwą pola np. <strong>CustomField</strong> w katalogu <strong>gavern/form_elements</strong>. Następnie w katalogu tym należy stworzyć plik config.json i wypełnić go według schematu:\n\n[code]{\n\n"name": "CustomField",\n\n"description": "Example Custom Field",\n\n"js": false,\n\n"css": false,\n\n"php": "customfield.php",\n\n"class": "GKFormInputCustomField"\n\n}[/code]\n\nPola <strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> muszą zawierać konkretne wartości, natomiast pola <strong>js</strong> i <strong>css</strong> są opcjonalne - pozwalają określić czy dane pole ma wykorzystywać dodatkowy kod CSS i JavaScript (wtedy należy jako ich wartość podać nazwę plików z katalogu pola). Należy też stworzyć plik <strong>customfield.php</strong> zawierający klasę <strong>GKFormInputCustomField</strong> dziedziczącą po klasie <strong>GKFormInput</strong>.\n\nNależy też zadbać o to by plik <strong>customfield.php</strong> zawierał na początku kod zabezpieczający:\n\n[code]// disable direct access to the file\n\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\n\nKażda klasa pola powinna zawierać co namniej jedną publiczną metodę - <strong>output</strong> nie pobierającą żadnych dodatkowych argumentów. Metoda ta musi zwracać kod HTML danego pola. Właściwości pola z pliku JSON są dostępne jako pola klasy np. właściwość <strong>required</strong> dostępna jest jako:\n\n[code]$this-&gt;required[/code]\n\nDrugą ważną publiczną metodą każdej klasy pola formularza jest metoda <strong>getValue</strong>, która pobiera jeden argument - <strong>$default</strong>. Jej wykorzystanie jest opcjonalne i przydatne tylko wtedy, kiedy wartość danego pola korzysta z więcej niż jednego pola w bazie danych. Wtedy warto tą metodę nadpisać - jako przykład polecamy lekturę kodu standardowego pola <strong>WidthHeight</strong>, gdzie nadpisanie metody getValue zostało wykorzystane do przechowywania wartości dwóch pól formularza w obrębie jednego głównego pola tworzonego przez klasę <strong>GKInputFormWidthHeight</strong>.\n\nPozostałe metody klasy powinny być tworzone według uznania autora danego pola formularza.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision', '', '', '2012-07-14 09:16:11', '2012-07-14 09:16:11', '', 427, 'http://wp1/uncategorized/427-revision/', 0, 'revision', '', 0),
(429, 1, '2012-08-12 17:30:43', '2012-08-12 17:30:43', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\n\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main files groups:\n<ul>\n	<li><strong>tabs.json</strong> file - it includes a list of sections visible on the right side of an administration panel:  [screensthot] each section is described with a table in the form [code]["Basic", "options.basic", "enabled"][/code] the first element of a table is a section name displayed in a panel, the second element is a file name without "<strong>.json</strong>" extension which stores a list of options available in a section given and the third value refers to whether a section given is visible in a panel. In this case, there will be a <strong>Basic</strong> tab displayed in a panel based on content of <strong>options.basic.json</strong> file.</li>\n	<li><strong>options.*.json </strong>files - they include a list of options available in a section given - their names are strictly connected with the content of <strong>tabs.json</strong> file.</li>\n</ul>\nEach options.*.json file includes three main fields in an object stored:\n<ul>\n	<li><strong>groupname</strong> - it is a section title</li>\n	<li><strong>groupdesc</strong> - it specifies a section description displayed directly under a  section title</li>\n	<li><strong>fields</strong> - it includes a table of objects of fields displayed under the title and a section description</li>\n</ul>\nEach field defined by an object including the following fields:\n<ul>\n	<li><strong>name</strong> - it specifies an option name which will be connected with a particular field. There is a prefix added automatically to an option name which is a theme name (it is stored in a global variable - <strong>$tpl-&gt;name</strong>).</li>\n	<li><strong>type</strong>- it specifies a field type. Standard fields are:\n<ul>\n	<li><strong>TextBlock</strong> - a field including a description text - it is not used for storing any option value</li>\n	<li><strong>Text</strong> - the easiest text field allowing to insert short text values</li>\n	<li><strong>Textarea</strong> - a text field used for inserting a greater number of text values</li>\n	<li><strong>Select</strong> - a select field</li>\n	<li><strong>Switcher</strong> - a checkbox restricted to two options: "Enabled" and "Disabled"</li>\n	<li><strong>Media</strong> - a field allowing to choose images</li>\n	<li><strong>WidthHeight</strong> - a field allowing to specify two values defining width and height (mostly used with a Media field)</li>\n</ul>\n</li>\n</ul>\nThese fields are defined in a <strong>gavern/form_elements/standard.php</strong> file and their code was derived from a <strong>GKFormInput</strong> field. It is worth remembering that files connected with options are parsed by a <strong>gavern/form.parser.php</strong> file. Additionally, you may create your own fields types in a <strong>gavern/form_elements</strong> catalog. In GavernWP, we have included the following fields types:\n<strong></strong>\n<ul>\n	<li><strong>Menu</strong> - a field allowing to generate options connected with page''s menu - used in a Navigation section</li>\n	<li><strong>TemplateStyle</strong> - a field allowing to choose page''s style - used at the beginning of a <strong>Basic</strong> section.</li>\n</ul>\nThe description of creating your own fields types we will describe in the further part of this article.\n<ul>\n	<li><strong>label</strong> - it specifies a label text visible next to a field</li>\n	<li><strong>tooltip</strong> - (optional) it allows to specify tooltip content which will appear after mousing over a label of a field given</li>\n	<li><strong>default</strong> - default value of a field given</li>\n	<li><strong>class</strong> - (optional) this field allows to specify CSS classes added to an element while generating it (if a field code supported such a functionality)</li>\n	<li><strong>format</strong> - (optional) a field specifying a desired field content in the form of a regular expression. e.g. value: [code][a-zA-Z]{2,5}[/code] specifies that a field given will be filled in correctly only when a user set as its value a sequence of capital or small letters from 2 to 5 symbols.</li>\n	<li><strong>required</strong> - (optional) allows to specify whether filling in a particular field was required</li>\n	<li><strong>visibility</strong> - (optional) specifies when a particular field is visible. Visibility rules are separated with commas and are created in <strong>FIELD_NAME=VALUE</strong> format - in the case of a few visibility rules, they are linked with <strong>AND</strong> operator. The value of  <strong>FIELD_NAME</strong> is a name without a prefix with a theme name. e.g. [code]option1=10,option2=20[/code] will cause that a field given will be visible when an option with <strong>option1</strong> name will be set to <strong>10</strong> and, at the same time, an <strong>option2</strong> option will have have value equals <strong>20</strong>.</li>\n	<li><strong>other</strong> - (optional) this field is used for storing additional values, e.g. in the case of a <strong>Select</strong> field, it is used for storing names and options values. This field is very useful when creating more advanced fields which may require additional configuration options.</li>\n</ul>\nAfter adding a new option, you have to remember about its support in the theme. Option value is loaded by using a get_option function of a schemata given:\n\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\n\nwhen <strong>OPTION_NAME</strong> is an option name from a JSON file and <strong>DEFAULT_VALUE</strong> is default value of an option which will be used when a user does not specify a value of an option given. What is important, there is a "<strong>_</strong>" symbol which you cannot omit. A prefix with a theme name is added in order differentiate values of options of different themes.\n<h3>Creating your own field types options</h3>\nWhile creating a new field type, you have to start from creating a catalog compliant with a field name, e.g. <strong>CustomField</strong> in a <strong>gavern/form_elements</strong> catalog. Then, you have to create a config.json file in this catalog and fill it in according to the schemata below:\n\n[code]{\n\n"name": "CustomField",\n\n"description": "Example Custom Field",\n\n"js": false,\n\n"css": false,\n\n"php": "customfield.php",\n\n"class": "GKFormInputCustomField"\n\n}[/code]\n\n<strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> fields have to include particular values; js and css fields are optional - they allow to specify whether a field given has to use additional CSS and JavaScript code (then, a name of files from a field catalog has to be set as a value). Also, you have to create a <strong>customfield.php</strong> file including a <strong>GKFormInputCustomField</strong> class derived after a <strong>GKFormInput</strong> class.\n\nAlso, a <strong>customfield.css</strong> file must include a safety code at the beginning:\n\n[code]// disable direct access to the file\n\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\n\nEach field class has to include at least one public method - <strong>output</strong> not loading any additional arguments. This method must return HTML code of a field given. Field properties froma JSON file are available as class fields, e.g. <strong>required</strong> is available as:\n\n[code]$this-&gt;required[/code]\n\nThe second important public methid of each class of a form field is a <strong>getValue</strong> method which loads one argument - <strong>$default</strong>. Its use is optional and useful only when a value of a field given uses more than one field in the data base. Then, it is useful to overwrite this method - as an example we recommend a standard code of a <strong>WidthHeight</strong> field where overwritting a getValue method was used for storing values of two form fields in one main field created by a <strong>GKInputFormWidthHeight</strong> class.\n\nThe remaining class methods have to be created according to the needs of the author of a form  field given.', 'Option files', '', 'inherit', 'open', 'open', '', '427-autosave', '', '', '2012-08-12 17:30:43', '2012-08-12 17:30:43', '', 427, 'http://wp1/uncategorized/427-autosave/', 0, 'revision', '', 0),
(432, 1, '2012-07-13 13:20:33', '2012-07-13 13:20:33', 'Jednym z kluczowych elementów wpływających na wygląd strony WWW jest właściwy wybór czcionek zastosowanych do prezentacji tekstu.\r\n\r\nGavernWP umożliwia łatwy wybór czcionek przypisanych do określonych przez użytkownika selektorów CSS.\r\n\r\nAby ułatwić obsługę wielu różnych czcionek na jednej stronie GavernWP obsługuje grupy czcionek - każa grupa pozwala na przypisanie danej czcionki do wybranych przez użytkownika selektorów:\r\n\r\n[screenshot]\r\n\r\nGrupy czcionek zdefiniowane są w pliku konfiguracyjnym <strong>fonts.json</strong>. Dodanie nowej grupy czcionek jest bardzo proste - wystarczy zdefiniować kolejny obiekt postaci:\r\n\r\n[code]{\r\n"full_name": "Full name of the fonts group",\r\n"short_name": "short name of the fonts group using only alphanumeric characters"\r\n}[/code]\r\n\r\nPo dodaniu takiego obiektu w tablicy zawartej w pliku <strong>fonts.json </strong>ujrzymy w panelu administracyjnym kolejną grupę czcionek, którą można zarządzać.\r\n\r\nDla każdej grupy czcionek należy określić trzy podstawowe wartości:\r\n<ul>\r\n	<li>rodzaj zastosowanej czcionki</li>\r\n	<li>czcionka danego rodzaju</li>\r\n	<li>selektory powiązane z daną czcionką</li>\r\n</ul>\r\nOkreślenie rodzaju czcionki ogranicza się do wyboru jednego z trzech typów czcionek:\r\n<ul>\r\n	<li><strong>Standard fonts</strong> - standardowe zestawy czcionek dostępne na większości komputerów - należy wybrać daną czcionkę z listy pojawiającej się pod polem wyboru rodzaju czcionki: [screenshot]</li>\r\n	<li><strong>Fonts Squirrel</strong> - czcionki pobrane ze strony <a href="http://www.fontsquirrel.com/" target="_blank">Font Squirrel</a> - należy pobrać @font-face kit danej czcionki i umieścić jego zawartość w katalogu <strong>fonts</strong>. Ważne jest by folder miał taką samą nazwę jak nazwa czcionki zastosowana w pliku <strong>stylesheet.css</strong> znajdującym się w nowym katalogu. Po dodaniu tak przygotowanego katalogu dana czcionka pojawi się na liście wyboru: [screenshot]</li>\r\n	<li><strong>Google Web Fonts</strong> - czcionki pochodzace z zasobów strony <a href="http://www.google.com/webfonts" target="_blank">Google Web Fonts</a> w tym wypadku należy określić adres URL danej czcionki: [screenshot]</li>\r\n</ul>\r\nOstatni etap to określenie selektorów zwiąanych z daną czcionką:\r\n\r\n[screenshot]\r\n\r\nPo zapisaniu ustawień efekty powinny być od razu widoczne na stronie - nie jest wymagane wykonywanie żadnych dodatkowych operacji.', 'Fonts settings', '', 'inherit', 'open', 'open', '', '410-revision-2', '', '', '2012-07-13 13:20:33', '2012-07-13 13:20:33', '', 410, 'http://wp1/uncategorized/410-revision-2/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(433, 1, '2012-08-12 17:58:57', '2012-08-12 17:58:57', 'Gavern Framework has a quite extensive files structure. It is similar to a standard structure of majority of the themes, however, because of many functionalities, there are some new elements.\n\n<!--more-->\n\nThe overall outline of files structure is presented below:\n<ol>\n	<li><strong>theme''s catalog</strong>\n<small>It includes all basic files and catalogs for a theme. It is worth seeing that Custom Pages templats have a <strong>theme.</strong> prefix at the beginning of their names which helps to find them in files structure.</small>\n<ol>\n	<li><strong>css</strong>\n<small>There are all CSS theme''s files in it. They are described in details in an entry about framework''s CSS code.\n</small>\n<ol>\n	<li><strong>back-end</strong>\n<small>To have everything ordered, CSS files connected with an administration panel were placed in this catalog.\n</small></li>\n</ol>\n</li>\n	<li><strong>fonts</strong>\n<small>This catalog is used for storing files with additional fonts. You have to remember that each font must have its own catalog including a stylesheet.css file. More information about fonts service can be found in an entry about <strong>Fonts</strong> in an administration panel.<strong></strong>\n</small></li>\n	<li><strong>gavern</strong>\n<small>A catalog including the base of whole GavernWP framework work.\n</small>\n<ol>\n	<li><strong>classes</strong>\n<small>Files with supporting classes used in framework''s code.\n</small></li>\n	<li><strong>config</strong>\n<small>Files including framework''s configuration. It has to be remembered that there are additional catalogs used for making transalations.\n</small></li>\n	<li><strong>form_elements</strong>\n<small>It includes a main file with a code which generates basic form elements in an administration panel, as well as, catalogs with elements created by a user.\n</small></li>\n	<li><strong>helpers</strong>\n<small>A collection of classes connected with specific framework''s tasks, e.g. with generating layout fragments.\n</small></li>\n	<li><strong>layouts</strong>\n<small>Files used for generating HTML code of an administration panel.\n</small></li>\n	<li><strong>options</strong>\n<small>Files which store options of particular sections of theme''s administration panel. Similarly to <strong>config</strong> catalog; there are also additional catalogs used for making translations.<strong></strong>\n</small></li>\n</ol>\n</li>\n	<li><strong>images</strong>\n<small>Graphic files used with a theme\n</small>\n<ol>\n	<li><strong>back-end</strong>\n<small>Files connected with an administration panel.\n</small></li>\n	<li><strong>headers</strong>\n<small>Default header''s images.\n</small></li>\n	<li><strong>post_formats</strong>\n<small>Images connected with entries formats.\n</small></li>\n</ol>\n</li>\n	<li><strong>js</strong>\n<small>JavaScript scripts files used in a the\n</small>\n<ol>\n	<li><strong>back-end</strong>\n<small>Likewise in <strong>css</strong> and <strong>images</strong> catalogs there are files included used in an administration panel.<strong></strong><strong></strong>\n</small></li>\n	<li><strong>templates</strong>\n<small>Additional JavaScript files used by some Custom Pages.\n</small></li>\n</ol>\n</li>\n	<li><strong>languages</strong>\n<small>Main files used for creating translations.\n</small></li>\n	<li><strong>layouts</strong>\n<small>Files used for generating subpages; they include elements which are used very often; e.g. a head section.\n</small></li>\n</ol>\n</li>\n</ol>\n&nbsp;', 'Framework structure', '', 'inherit', 'open', 'open', '', '330-autosave', '', '', '2012-08-12 17:58:57', '2012-08-12 17:58:57', '', 330, 'http://wp1/uncategorized/330-autosave/', 0, 'revision', '', 0),
(434, 1, '2012-07-09 09:44:17', '2012-07-09 09:44:17', 'Framework GavernWP posiada dość rozbudowaną strukturę plików. Jest ona w dużej mierze podobna do standardowej struktury większości szablonów jednak z racji wielu funkcjonalności pojawiają się w niej nowe elementy.\r\n\r\n<!--more-->\r\n\r\nOgólny zarys struktury plików prezentuje się następująco:\r\n<ol>\r\n	<li><strong>katalog szablonu</strong>\r\n<small>Zawiera on wszystkie podstawowe pliki i katalogi dla szablonu. Warto zauważyć, że szablony Custom Pages posiadają na poczatku nazwy prefiks <strong>template.</strong>, który ułatwia ich odnalezienie w strukturze plików.</small>\r\n<ol>\r\n	<li><strong>css</strong>\r\n<small>Znajdują się w nim wszystkie pliki CSS szablonu. Zostały one dokładniej omówione we wpisie dotyczącym kodu CSS frameworka.</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>Dla większego porządku pliki CSS dotyczące panelu administracyjnego zostały umieszczone w tym katalogu.</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>fonts</strong>\r\n<small>Katalog ten jest przeznaczony do przechowywania plików z dodatkowymi fontami. Należy pamiętać by każdy font posiadał swój katalog zawierający plik stylesheet.css. Więcej o obsłudze fontów zostało napisane we wpisie dotyczącym sekcji <strong>Fonts</strong> w panelu administracyjnym.</small></li>\r\n	<li><strong>gavern</strong>\r\n<small>Katalog zawierający podstawę działania całego frameworka GavernWP.</small>\r\n<ol>\r\n	<li><strong>classes</strong>\r\n<small>Pliki z klasami pomocniczymi, używanymi w kodzie frameworka.</small></li>\r\n	<li><strong>config</strong>\r\n<small>Pliki zawierające konfigurację frameworka. Należy pamiętać o tym, że stosowane są dodatkowe katalogi wykorzystywane do wykonywania tłumaczeń</small></li>\r\n	<li><strong>form_elements</strong>\r\n<small>Poza głównym plikiem zawierającym kod generujący podstawowe elementy formularzy w panelu administracyjnym, zawiera on katalogi z elementami stworzonymi przez użytkownika.</small></li>\r\n	<li><strong>helpers</strong>\r\n<small>Zbiór klas związanych z konkretnymi zadaniami frameworka np. generowaniem fragmentów layoutu.</small></li>\r\n	<li><strong>layouts</strong>\r\n<small>Pliki wykorzystywane do generowania kodu HTML panelu administracyjnego.</small></li>\r\n	<li><strong>options</strong>\r\n<small>Pliki przechowujące opcje poszczególnych sekcji panelu administracyjnego szablonu. Podobnie jak katalog <strong>config</strong> - tutaj także stosowane są dodatkowe katalogi wykorzystywane do wykonywania tłumaczeń.</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>images</strong>\r\n<small>Pliki graficzne wykorzystywane przez szablon</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>Pliki związane z panelem administracyjnym</small></li>\r\n	<li><strong>headers</strong>\r\n<small>Domyślne grafiki headera</small></li>\r\n	<li><strong>post_formats</strong>\r\n<small>Grafiki związane z formatami wpisów.</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>js</strong>\r\n<small>Pliki skryptów JavaScript wykorzystywane w szablonie</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>Podobnie jak w katalogach <strong>css</strong> oraz <strong>images</strong> zawarte są tutaj pliki wykorzystywane w panelu administracyjnym</small></li>\r\n	<li><strong>templates</strong>\r\n<small>Dodatkowe pliki JavaScript wykorzystywane przez niektóre Custom Pages</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>languages</strong>\r\n<small>Główne pliki wykorzystywane do tworzenia tłumaczeń</small></li>\r\n	<li><strong>layouts</strong>\r\n<small>Pliki wykorzystywane do generowania podstron - zawierają elementy, które są wielokrotnie wykorzystywane - np. sekcja head.</small></li>\r\n</ol>\r\n</li>\r\n</ol>\r\n&nbsp;', 'Framework structure', '', 'inherit', 'open', 'open', '', '330-revision-3', '', '', '2012-07-09 09:44:17', '2012-07-09 09:44:17', '', 330, 'http://wp1/uncategorized/330-revision-3/', 0, 'revision', '', 0),
(435, 1, '2012-08-14 20:01:56', '2012-08-14 20:01:56', 'oEmbeds is an important facility used while creating posts. Thanks to it, a user may embed in an entry easily, e.g. a movie from You Tube service by giving just a link to the movie - Wordpress will generate a movie from this link automatically.\n\nA few examples are presented below:\n\nYouTube\n\nhttp://www.youtube.com/watch?v=MdrC7kYTAX4\n\nTwitter\n\nhttps://twitter.com/gavickpro/status/221189052983025666\n\nFlickr\n\nhttp://www.flickr.com/photos/synectic/5489943396/', 'oEmbeds', '', 'inherit', 'open', 'open', '', '332-autosave', '', '', '2012-08-14 20:01:56', '2012-08-14 20:01:56', '', 332, 'http://wp1/uncategorized/332-autosave/', 0, 'revision', '', 0),
(436, 1, '2012-07-09 09:42:35', '2012-07-09 09:42:35', 'oEmbeds to ważne udogodnienie wykorzystywane przy tworzeniu postów. Dzięki nim użytkownik w łatwy sposób może osadzić we wpisie np. film z serwisu YouTube podając jedynie link do filmu - Wordpress automatycznie wygeneruje z takiego linka film.\r\n\r\nPrzykłady prezentujemy poniżej:\r\n\r\nYouTube\r\n\r\nhttp://www.youtube.com/watch?v=MdrC7kYTAX4\r\n\r\nTwitter\r\n\r\nhttps://twitter.com/gavickpro/status/221189052983025666\r\n\r\nFlickr\r\n\r\nhttp://www.flickr.com/photos/synectic/5489943396/', 'oEmbeds', '', 'inherit', 'open', 'open', '', '332-revision-4', '', '', '2012-07-09 09:42:35', '2012-07-09 09:42:35', '', 332, 'http://wp1/uncategorized/332-revision-4/', 0, 'revision', '', 0),
(437, 1, '2012-07-09 09:42:00', '2012-07-09 09:42:00', 'GavernWP posiada pełne wsparcie dla wykonywania tłumaczeń. Z racji pewnych różnic wynikających z wykorzystania plików JSON do generowania opcji szablonu tłumaczenie szablonu powinno odbywać się w trzech miejscach:\r\n<ol>\r\n	<li>z użyciem plików z katalogu lanugages</li>\r\n	<li>poprzez stworzenie katalogu danego języka w katalogu config</li>\r\n	<li>poprzez stworzenie katalogu danego języka w katalogu options</li>\r\n</ol>\r\nPierwszy etap jest standardową operacją opisaną dokładnie w dokumentacji Wordpressa. Skupmy się zatem na pozostałych dwóch etapach:\r\n\r\nStandardowo w katalogach <strong>config</strong> i <strong>options</strong> stworzony jest katalog <strong>en_US</strong>, który zawiera pliki konfiguracyjne JSON w języku angielskim. Aby więc przetłumaczyć szablon na inny język należy skopiować ten katalog i zmienić mu nazwę na odpowiadającą językowi używanemu w naszej instalacji np. <strong>pl_PL</strong>. Następnie należy zmienić wszystkie frazy anglojęzyczne na te w naszym języku.\r\n\r\nUWAGA! Nie wolno zmieniać nazw kluczy w plikach JSON jak też nazw własnych, gdyż są one wykorzystywane do poprawnego działania i odczytywania wartości.\r\n\r\nPrzykładowo w pliku widgets.json dla fragmentu:\r\n\r\n[code]{\r\n"name": "Top widgets",\r\n"id": "top",\r\n"description": "Widgets area on under the header of website",\r\n"before_widget": "&lt;div id=\\"%1$s\\" class=\\"box%2$s\\"&gt;",\r\n"after_widget": "&lt;/div&gt;",\r\n"before_title": "&lt;h3 class=\\"box-title\\"&gt;",\r\n"after_title": "&lt;/h3&gt;"\r\n},[/code]\r\n\r\nzmieniamy tylko frazy:\r\n<ul>\r\n	<li>"Top widgets"</li>\r\n	<li>"Widgets area on under the header of website"</li>\r\n</ul>\r\nPo tak wykonanej operacji w panelu administracyjnym pojawią się zdania w naszym rodzimym języku.\r\n\r\nWarto też pamietać, że w wypadku gdy GavernWP nie znajdzie katalogu odpowiadającego ustawionemu w konfiguracji językowi, zostaną wykorzystane pliki z katalogów <strong>en_US</strong>.', 'Translations', '', 'inherit', 'open', 'open', '', '335-revision-3', '', '', '2012-07-09 09:42:00', '2012-07-09 09:42:00', '', 335, 'http://wp1/uncategorized/335-revision-3/', 0, 'revision', '', 0),
(438, 1, '2012-07-09 09:41:00', '2012-07-09 09:41:00', 'Dla zapewnienia wysokiej elastyczności frameworka GavernWP, zdecydowaliśmy się na wykorzystanie plików w formacie JSON do przechowywania konfiguracji szablonu i układu opcji w panelu administracyjnym.\r\n\r\nW katalogu <strong>gavern/options/</strong> znajdziemy pliki odpowiadające za konfigurację szablonu:\r\n<ul>\r\n	<li><strong>fonts.json</strong> - plik przechowujący grupy czcionek szablonu. Domyślnie stworzone są trzy główne grupy. Aby stworzyć nową grupę wystarczy dodać kolejny obiekt do istniejącej w tym pliku tablicy obiektów.</li>\r\n	<li><strong>menus.json</strong> - w pliku tym znajdziemy miejsca na menu wykorzystywane w szablonie. Należy pamiętać, że w odróżnieniu do pliku fonts.json, poza dodaniem nowego obiektu trzeba też w kodzie szablonu dodać kod PHP generujący dane menu. Warto też pamiętać, że tylko jedno menu, może być menu głównym (pole <strong>main</strong> w obiekcie menu).</li>\r\n	<li><strong>opengraph.json</strong> - plik ten zawiera konfigurację pól używanych w bloku związanym z metabox-em używanym do generowania danych Open Graph. Nie zalecamy dokonywania w nim żadnych zmian bez poznania dokładnej implementacji tagów Open Graph we frameworku GavernWP.</li>\r\n	<li><strong>styles.json</strong> - plik ten jest wykorzystywany do generowania dodatkowych styli szablonu. Poza dodaniem nowego stylu, należy też pamietać o stworzeniu dodatkowego pliku CSS, który będzie ładowany przy zmianie stylu szablonu.</li>\r\n	<li><strong>template.json</strong> - najważniejszy plik konfiguracyjny. Zawiera on informacje o szablonie oraz pozwala wyłączyć wybrane elementy panelu administracyjnego szablonu. Nie jest zalecane dodawanie nowych pól do tego pliku gdyż bez dodatkowego kodu PHP nie zostaną one wykorzystane.</li>\r\n	<li><strong>widgets.json</strong> - plik zawierający listę wszystkich pozycji widżetów. Podobnie jak w wypadku pliku <strong>menus.json</strong>, należy pamietać, że poza dodaniem nowej pozycji widżetów, trzeba też dodać kod PHP generujący ją w szablonie.</li>\r\n	<li><strong>widgets.styles.json</strong> - plik stosowany do tworzenia nowych styli widżetów. Dzięki swojej implementacji pozwala przypisać dany styl tylko do danego typu widżetów lub też wykluczyć z danego stylu wybrane rodzaje widżetów.</li>\r\n</ul>\r\nBy lepiej zrozumieć format plików JSON polecamy lekturę oficjalne strony <a href="http://www.json.org/">tego formatu</a>.\r\n\r\n&nbsp;', 'JSON Configuration', '', 'inherit', 'open', 'open', '', '338-revision-3', '', '', '2012-07-09 09:41:00', '2012-07-09 09:41:00', '', 338, 'http://wp1/uncategorized/338-revision-3/', 0, 'revision', '', 0),
(439, 1, '2012-08-12 17:28:48', '2012-08-12 17:28:48', 'GavernWP has built - in support for <a title="Open Graph" href="http://opengraphprotocol.org/" target="_blank">Open Graph</a> protocol. Thanks to it, each post added may have metatags specified and during publishing a post given on Facebook, there will be information specified earlier by an author of an entry displayed:\n<ul>\n	<li>title</li>\n	<li>entry description</li>\n	<li>thumbnail connected with an entry</li>\n</ul>\nThanks to it, an author of a post has better influence on the information displayed on social media services. It''s also worth remembering that in the case when fields connected with Open Graph will not be filled, then GavernWP will try to fill them automatically basing on the entry data.\n\nSupport for Open Graph is a great supplement for a Social API system implemented in GavernWP.', 'Open Graph support', '', 'inherit', 'open', 'open', '', '341-autosave', '', '', '2012-08-12 17:28:48', '2012-08-12 17:28:48', '', 341, 'http://wp1/uncategorized/341-autosave/', 0, 'revision', '', 0),
(440, 1, '2012-08-12 18:03:08', '2012-08-12 18:03:08', 'GavernWP has an extensive mechanism allowing to create additional theme styles. We may distinguish two main groups of styles in this mechanism:\n<ul>\n	<li>style family</li>\n	<li>styles included in style family given</li>\n</ul>\nThe whole configuration is included in <strong>styles.json</strong> file:\n\n[code][{\n\n"family": "color",\n"family_desc": "Theme color",\n"family_tooltip": "You can select one of the theme colors",\n"styles": [\n{\n"name": "Color I",\n"value": "color1",\n"file": "style1.css"\n},\n{\n"name": "Color II",\n"value": "color2",\n"file": "style2.css"\n}\n]\n}][/code]\n\nAs you can see, it includes <strong>color</strong> style family which has two styles, namely: <strong>Color I</strong> and <strong>Color II</strong>.\n\nIn order to create new style family or a style for style family given, it is enough to create a next object in <strong>styles.json</strong> file and then create CSS files connected with a family given - in the case of <strong>color</strong> family, these are <strong>style1.css</strong> and <strong>style2.css</strong> files.\n\nGavernWP will load CSS files of a style given in a <strong>head</strong> section - chosen in an administration panel or, if there is a tool for choosing user''s styles switched on, they will be loaded based on a Cookie file storing data about a style used by a user.\n\nYou have to remember that for each style family there is at least one CSS file loaded. Therefore, creating coexisting style families like:\n<ul>\n	<li><strong>dark styles</strong> and <strong>light styles</strong></li>\n	<li><strong>blue styles</strong> and <strong>green styles</strong></li>\n</ul>\nis incorrect because at least one CSS style from each family will be loaded immediately. So the correct one is creating style families responsible for some elements of website styling, e.g. a separate family responsible for website coloring (<strong>colors</strong>) and a separate one for website background (<strong>patterns</strong>).\n\nGenerally, you have to care about particular style families in order not to overwrite one another.', 'Color Styles', '', 'inherit', 'open', 'open', '', '349-autosave', '', '', '2012-08-12 18:03:08', '2012-08-12 18:03:08', '', 349, 'http://wp1/uncategorized/349-autosave/', 0, 'revision', '', 0),
(441, 1, '2012-08-12 17:28:45', '2012-08-12 17:28:45', 'GavernWP makes possible to create templates based on Responsive Web Design. That''s why, it has two additional CSS styles:\n<ul>\n	<li>tablet.css</li>\n	<li>mobile.css</li>\n</ul>\nThanks to options available in an administration panel, it is possible to specify when these styles will be loaded.\n\nTwo column layout (if a column is switched on) is loaded when tablet.css file is not loaded.\n\nAt the moment of reaching maximum width for tablet.css file, page''s layout is changed into one column and the column itself is placed before or after page''s main content.\n\nAdditionally, in widget positions like top or bottom1/2/3, modules from three column layout are changed into one column  layout.\n\nAfter loading mobile.css file there is one column layout used everywhere.\n\nA very important improvement is a possibility of specifying whether a module will be loaded in tablet or mobile mode. More information can be found in Widget Rules entry.', 'Responsive Layout', '', 'inherit', 'open', 'open', '', '351-autosave', '', '', '2012-08-12 17:28:45', '2012-08-12 17:28:45', '', 351, 'http://wp1/uncategorized/351-autosave/', 0, 'revision', '', 0),
(442, 1, '2012-08-12 17:28:37', '2012-08-12 17:28:37', 'Each template''s subpage in GavernWP is created and based on one file from template''s main catalog, e.g. <strong>single.php</strong> and at least four additional files from <strong>layouts</strong> catalog:\n<ul>\n	<li><strong>header.php</strong> - this file includes starting page''s structure i.e. a head section and the whole headline with elements such as: logo, main menu, etc.</li>\n	<li><strong>before.php</strong> - there are all widget positions included in this file which are before page''s main content.</li>\n	<li><strong>after.php</strong> - this file is an equivalent of <strong>before.php</strong> file but with one difference - it includes widget positions which are after page''s main content.</li>\n	<li><strong>footer.php</strong> - similarly to <strong>header.php</strong> file, it includes a starting page''s structure as footer.php includes the ending page''s structure, i.e. a footer and and elements below.</li>\n</ul>\nThe above files with a file given from a main catalog, create a basic structure of each page. The remaining elements are generated by additional files or functions. The majority of of such files can be found in <strong>layouts</strong> catalog; e.g. files with names content.post.*.php, include constituents of each post. . Using these files allowed to restrict the amount of code in template''s main files and simplify its modification as change e.g. an entry footer requires modification of one or two files only.\n\nFunctions used for generating additional information displayed in posts are in <strong>gavern/helpers/helpers.layout.fragments.php</strong> file.', 'Template structure', '', 'inherit', 'open', 'open', '', '359-autosave', '', '', '2012-08-12 17:28:37', '2012-08-12 17:28:37', '', 359, 'http://wp1/uncategorized/359-autosave/', 0, 'revision', '', 0),
(443, 1, '2012-08-12 17:54:30', '2012-08-12 17:54:30', 'Widget rules is a mechanism which introduces a completely new way to manage widgets on a website. Thanks to it, it is possible to specify widget features such as:\n<ul>\n	<li>displaying on subpages chosen,</li>\n	<li>displaying on devices chosen,</li>\n	<li>displaying for a group of users chosen,</li>\n	<li>displaying with a widget style use chosen.</li>\n</ul>\nAfter switching on widget rules in theme''s advanced settings, under each widget, the following options should be displayed:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-371" title="Widgets ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="258" height="200" /></a>\n\nThe most extensive options are those connected with a widget visibility on subpages chosen - after choosing an option to show a widget on pages chosen (or an option not showing a widget on pages chosen), such a panel will appear:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg"><img class="aligncenter size-full wp-image-372" title="Widgets ‹ Meet Gavern WP — WordPress-1-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg" alt="" width="240" height="203" /></a>\n\nThen, you have to choose a page''s type to add, e.g. Category, and then give category ID:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg"><img class="aligncenter size-full wp-image-373" title="Widgets ‹ Meet Gavern WP — WordPress-2" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg" alt="" width="242" height="216" /></a>\n\nAfter clicking "Add page" button, a page will appear on a list of pages chosen on which in our case a widget will be displayed:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-374" title="Widgets ‹ Meet Gavern WP — WordPress-3" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="233" height="77" /></a>\n\nOf course, it is possible to add more pages:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-375" title="Widgets ‹ Meet Gavern WP — WordPress-4" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="230" height="100" /></a>\n\nTo make it clearer, , each page''s type is displayed with a different color. A page added can be removed by clicking a removing icon placed on the right side of each page.\n\nIn this way, you may set a widget so as to be shown on pages chosen or to be shown on all pages except the chosen ones.\n\nGenerally, widgets are shown on all pages.\n\nAn option of displaying a widget on devices chosen has five options to choose:\n<ul>\n	<li><strong>All devices</strong> - a widget will be displayed everytwhere - on every device</li>\n	<li><strong>Desktop</strong> - a widget will be displayed only when neither a <strong>tablet.css</strong> file nor a <strong>mobile.css</strong> is loaded <strong></strong></li>\n	<li><strong>Tablets</strong> - a widget displays only when a <strong>tablet.css</strong> file will be loaded and, at the same time, a <strong>mobile.css</strong> file will not be loaded <strong></strong></li>\n	<li><strong>Smartphones</strong> - a widget will be displayed only when a <strong>mobile.css</strong> file will be loaded</li>\n	<li><strong>Tablets/Smartphones</strong> - a widget will be displayed when at least one file will be loaded: <strong>tablet.css</strong> or <strong>mobile.css</strong>.</li>\n</ul>\nThanks to these settings, it is possible to limit significantly the amount of content displayed on devices with small screens.\n\nAn option of displaying widget for a chosen groups of users has four options to choose:\n<ul>\n	<li><strong>All users</strong> - a widget will be displayed to all users</li>\n	<li><strong>Only guests</strong> - a widget will be displayed to not logged in users</li>\n	<li><strong>Only registered users</strong> - a widget will be displayed to logged in users only</li>\n	<li><strong>Only administrator</strong> - a widget will be displayed to administrators only</li>\n</ul>\nThanks to this option, it is possible e.g. to display messages specified by using widgets for a group of users chosen.\n\nThe last optio from widget rules is an option for choosing a widget style - it causes appending to a widget main container an additional class giving styling specified by a user.\n\nWidget styles are defined in widget.styles.json file and in CSS code - in this case in <strong>css/wp.extensions.css</strong>.<strong></strong>', 'Widget rules', '', 'inherit', 'open', 'open', '', '370-autosave', '', '', '2012-08-12 17:54:30', '2012-08-12 17:54:30', '', 370, 'http://wp1/uncategorized/370-autosave/', 0, 'revision', '', 0),
(444, 1, '2012-08-12 18:07:28', '2012-08-12 18:07:28', 'GavernWP makes accessible options allowing for theme''s branding. Branding options are divided into two groups:\n<ul>\n	<li>theme''s branding</li>\n	<li>administration panel branding</li>\n</ul>\nThanks to theme''s branding options, a user may specify:\n<ul>\n	<li>specify page''s logo</li>\n	<li>specify theme''s footer content</li>\n	<li>decide about displaying a framework logo under page''s footer</li>\n</ul>\nMore information about branding options for a templat can be found in an entry devoted to a "Template branding" tab in an administration panel.\n\nAdministration panel branding options allow to define:\n<ul>\n	<li>a logo displayed next to a template''s name in an administration panel sidebar</li>\n	<li>a logo visible over a log in form to an administration panel</li>\n</ul>\nMore about branding options for an administration panel can be found in an entry devoted to "Back-end branding"  in an administration panel.', 'Branding', '', 'inherit', 'open', 'open', '', '377-autosave', '', '', '2012-08-12 18:07:28', '2012-08-12 18:07:28', '', 377, 'http://wp1/uncategorized/377-autosave/', 0, 'revision', '', 0),
(445, 1, '2012-08-12 18:11:21', '2012-08-12 18:11:21', 'GavernWP has an update section which allows to access information whether a template was updated to the latest version. In order to access an updates panel, you have to use "Updates" submenu from a main menu of template''s options:\n\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-6.jpg"><img class="aligncenter size-full wp-image-685" title="Updates" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-6.jpg" alt="" width="202" height="171" /></a>\n\nIf a theme was not updated, a list of updates will appear; which are newer than your theme version.\n\nHowever, when you have a theme in the latest version, you will see an appropriate message that a theme does not have any new updates to download.\n\nIt''s worth remembering that a free theme - MeetGavernWP is available through a public repository in a github service which allows to easy analysis of changes implemented in particular files. In the case of commercial themes, it is recommended to use tools like WinMerge (Windows) or File Merge (MacOS X) to compare changes in files. Each update in our update system has information about the list of modified files. Generally, it is recommended to compare only these files which you modified manually after loading a theme.', 'Updates', '', 'inherit', 'open', 'open', '', '382-autosave', '', '', '2012-08-12 18:11:21', '2012-08-12 18:11:21', '', 382, 'http://wp1/uncategorized/382-autosave/', 0, 'revision', '', 0),
(446, 1, '2012-08-12 18:37:21', '2012-08-12 18:37:21', 'Sometimes, there is a situation when you have to copy a configuration from one installation to another one. In order to simplify it, GavernWP has been equipped with import and export options of theme''s settings in "Import/Export" tab of a theme''s main menu:\n\n[screenshot]\n\nAfter entering a page of these settings, you will see the following form:\n\n[screenshot]\n\nIn order to export settings, it is enough to copy a text from an "Export" field and copy it to an "Import" field in a different theme.\n\n<strong>Note!</strong> While exporting settings, you have to remember that it is possible to copy settings between the same themes.\nTheme''s settings are available in JSON format, so it is possible to save these settings to a file and then modify them manually before loading to a different theme.\n\nTip: we recommend to make a dump of theme''s settings, thanks to it, you will be secured against not desired effects of greater changes in a theme''s configuration. Such settings dumps should be saved in a file which has in its name the date of making a dump, e.g.  <strong>meetgavernwp_backup_30_07_2012.json</strong>.', 'Import/Export settings', '', 'inherit', 'open', 'open', '', '384-autosave', '', '', '2012-08-12 18:37:21', '2012-08-12 18:37:21', '', 384, 'http://wp1/uncategorized/384-autosave/', 0, 'revision', '', 0),
(447, 1, '2012-08-12 18:31:13', '2012-08-12 18:31:13', 'To simplify shortcodes use available in themes based on GavernWP framework, a button for theme''s typography has been implemented which is available in a posts editor:\n\n&nbsp;\n\nBy clicking this button, you will see a list of available typography elements:\n\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-388" title="Add New Post ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="251" height="369" /></a>\n\nIt is possible to choose a version with a stylistic specified for the majority of elements. After choosing a particular style, a shortcode will appear which will be replaced in entry content by scripts to structure styled in a way given.\n\nPlease, note that adding a new Shortcode code requires three operations:\n<ul>\n	<li>adding an entry in shortcodes.js configuration file</li>\n	<li>adding PHP code supporting a shortcode given</li>\n	<li>adding optional CSS and JavaScript code (if a shortcode given requires it)</li>\n</ul>\n<strong>shortcodes.js</strong> file in <strong>config</strong> catalog includes entries which are replaced to menu structure visible after clicking a typography button - it includes <strong>$GAVERNWP_SHORTCODES</strong> variable which is a table including objects representing elements of a menu. Each object has three features: <strong>title</strong>, <strong>code</strong> and <strong>submenu</strong>. Let''s analyze this structure with a <strong>Highlight</strong> position:\n\n[code]{\n\n"title": "Highlight",\n"code": "[highlight]Your text[/highlight]",\n"submenu": [\n{\n"title": "Style I",\n"code": "[highlight style=\\"1\\"]Your text[/highlight]"\n},\n{\n"title": "Style II",\n"code": "[highlight style=\\"2\\"]Your text[/highlight]"\n},\n{\n"title": "Style III",\n"code": "[highlight style=\\"3\\"]Your text[/highlight]"\n}\n]\n},[/code]\n<ul>\n	<li><strong>title</strong> - it includes a menu positon name displayed by a script</li>\n	<li><strong>code</strong> - it is a shortcode code which will be added to an entry when clicking a menu position given - you have to remember that not all menu positions on the first level have a value in this field - if it was an empty sequence of symbols, it means for a script that clicking on a menu position given does not request any action.</li>\n	<li><strong>submenu</strong> - it is a table  of a submenu of a menu position given. Each submenu position is built the same as menu positions as these on the first level but with one difference - a submenu cannot have the next submenu, so you do not add a <strong>submenu</strong> feature in a submenu object.</li>\n</ul>\nLet''s say, we added our shortcode to a typography button using shortcodes.js file. So, there is one thing left to do - support our shortcode from a theme side.\n\nTo do this, you have to open <strong>gavern/helpers/helpers.shortcodes.php</strong> file.\n\nThis file is divided into three main sections starting with lines similar to:\n\n[code]if(get_option($tpl-&gt;name . ''_shortcodes1_state'', ''Y'') == ''Y'') {[/code]\n\nIt is a conditional  IF instruction connected with a group of typography elements given. Gavern icludes three groups:\n<ul>\n	<li>typography elements - functions connected with it have <strong>gavern_ts_</strong> prefix in the title</li>\n	<li>interactive elements - functions connected with it have <strong>gavern_ies_</strong> prefix in the title</li>\n	<li>elements characteristic for a particular theme - functions connected with it have <strong>gavern_tss_</strong> prefix in the title</li>\n</ul>\nWe recommend to add new typography elements in the last group - in Meet GavernWP theme, it is empty by default. Please, remember about using an appropriate prefix in a function name for a group given, e.g. in the case of the third group, it will be <strong>gavern_tss_</strong>. The code itself of a shortcode given has to be created according to guidelines described in<a href="http://codex.wordpress.org/Shortcode_API"> Shortcode API</a>.\n\nThe last step is rather optional and depends on your Shortcode type. If your Shortcode requires additional CSS or JavaScript code, you have to define it in <strong>shortcodes.*.css</strong> i <strong>shortcodes.*.js</strong> files, where <strong>*</strong> is a group name to which a Shortcode given was assigned.\n\nIt is very important to place elements of CSS and JavaScript code in an appropriate file, as it will give a possibility of optimizing whole theme code when switching off given group of Shortcodes codes.', 'Typography button', '', 'inherit', 'open', 'open', '', '386-autosave', '', '', '2012-08-12 18:31:13', '2012-08-12 18:31:13', '', 386, 'http://wp1/uncategorized/386-autosave/', 0, 'revision', '', 0),
(448, 1, '2012-08-12 18:40:15', '2012-08-12 18:40:15', 'In order to adjust stylistics of an administration panel to a GavernWP page, there are some options allowing to adjust the look of administration panel elements to a theme of a page given.\n\nYou will find the following options in a back-end branding tab:\n\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-19.jpg"><img class="aligncenter size-full wp-image-715" title="Back-end branding" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-19.jpg" alt="" width="711" height="335" /></a>\n\nThe first two options are connected with a logotype displayed on a log in page. You have to choose an image which will be used as a logo and then insert the size of the image chosen. In this way, you may achieve, e.g. the following log in panel:\n\n&nbsp;\n\nThe remaining two options are connected with template''s login displayed in a main menu of an administration panel:\n\n[screenshot]\n\nWe recommend to use an image in 16x16 size - bigger or smaller images may cause problems with menu layout.\n\n&nbsp;', 'Back-end branding settings', '', 'inherit', 'open', 'open', '', '392-autosave', '', '', '2012-08-12 18:40:15', '2012-08-12 18:40:15', '', 392, 'http://wp1/uncategorized/392-autosave/', 0, 'revision', '', 0),
(449, 1, '2012-08-12 18:09:22', '2012-08-12 18:09:22', 'GavernWP has basic support for a new option available in Wordpress 3.4 - an options editor with themes preview. Now, the most important options connected with theme''s style and its layout has been implemented to a live editor.\n\nIn order to reach it easier, we placed a direct link to this editor in the top part of themes'' options:\n\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-5.jpg"><img class="aligncenter size-full wp-image-683" title="Live Editor" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-5.jpg" alt="" width="217" height="206" /></a>\n\nAll options included in this editor are also available via traditional theme''s options panel.\n\nIn order to simplify adding your own options to a live editor, the whole code generating options is placed in a separate file: <strong>gavern/helpers/helpers.customizer.php</strong>.\n\nYou have to remember that all options and settings from a live editor are stored in the same place as their equivalents from an administration panel so settings change with a live editor causes changes in an options panel. That''s why, it is recommended not to use a traditional administration panel and a live editor at the same time because saving options with various values in two different places at the same time may not give the expected result.', 'Theme live editor', '', 'inherit', 'open', 'open', '', '380-autosave', '', '', '2012-08-12 18:09:22', '2012-08-12 18:09:22', '', 380, 'http://wp1/uncategorized/380-autosave/', 0, 'revision', '', 0),
(450, 1, '2012-10-28 10:04:52', '2012-10-28 10:04:52', 'Themes based on GavernWP framework have support for many useful solutions and technologies. The most important ones are:\n<ul>\n	<li><a title="Custom Page Styles" href="http://wp1/template-features/custom-page-styles-2/">Custom page styles</a> - they extend functionality of standard subpages.</li>\n	<li><a title="Typography" href="http://wp1/template-features/typography/">Typography</a> - an advanced list of elements gives a possibility to enhance posts about various add ons.</li>\n	<li><a title="Social API" href="http://wp1/template-features/social-api/">Social API</a> - it allows to add buttons for sharing posts in social network services very easily.</li>\n	<li><a title="Open Graph support" href="http://wp1/template-features/open-graph-support/">Open Graph</a> - it allows to specify the way in which content shared on Facebook will be visible.</li>\n	<li><a title="Threaded comments" href="http://wp1/template-features/threaded-comments-2/">Threaded comments</a> - they allow to make discussions under posts in a clear way.</li>\n	<li><a title="Branding" href="http://wp1/template-features/branding/">Branding</a> - it simplifies setting key elements of a website connected with its name or brand.</li>\n	<li><a title="Color Styles" href="http://wp1/uncategorized/color-styles/">Color styles</a> - thanks to color styles, it is possible to create many various color and stylistic versions of a theme.</li>\n</ul>\n&nbsp;', 'Main front-end features', '', 'inherit', 'open', 'open', '', '408-autosave', '', '', '2012-10-28 10:04:52', '2012-10-28 10:04:52', '', 408, 'http://wp1/uncategorized/408-autosave/', 0, 'revision', '', 0),
(451, 1, '2012-08-12 18:19:19', '2012-08-12 18:19:19', 'An advanced settings section includes settings which are connected with different aspects of GavernWP framework work:\n\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-659" title="Advanced settings" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="595" height="571" /></a>\n<ul>\n	<li><strong>Widget rules</strong> allows to switch on this mechanism. It is recommended to switch on this option in the case when you do not need to use widgets visible on a chosen subpages. Note that it will allow to optimize a little bit the speed of a website as operations of checking rules for each widget will not be made.</li>\n	<li><strong>Support for Google Chrome Frame</strong> - it switches on a metatag forcing use of  <a href="https://developers.google.com/chrome/chrome-frame/" target="_blank">Google Chrome Frame</a> plugin on Internet Explorer browsers if it is installed.</li>\n	<li><strong>Parse emoticons in the text widgets</strong> - it activates parsing emoticons to a graphic form in widgets.</li>\n	<li><strong>Parse shortcodes in the text widgets</strong> - it activates parsing of <a href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> in widgets.</li>\n	<li><strong>Use Thickbox</strong> - it allows to switch on Thickbox  script for presenting images included in posts.</li>\n	<li><strong>Value for the $content_width variable</strong> -  <strong>$content_width</strong> variable is used while creating thumbnails of images for posts, that''s why it has to be defined as an appropriate value - we recommend to set the value not bigger than the max. page''s width.</li>\n	<li><strong>Use the override.css file</strong> - thanks to switching on this option, an <strong>override.css</strong> file will appear at the end of the list of CSS files which allows to overwrite theme''s CSS rules easily without interference in existing CSS code.</li>\n	<li><strong>Enable support for Open Search</strong> - it allows to switch on support for  <a href="http://www.opensearch.org/Home" target="_blank">Open Search</a> technology.</li>\n	<li><strong>Enable support for Open Graph</strong> - it allows to switch on support for <a href="http://ogp.me/" target="_blank">Open Graph </a> technology - after switching on this option, an additional metabox will appear on a page for editing posts: <a href="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-692" title="OpenGraph metabox" src="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="810" height="554" /></a></li>\n</ul>', 'Advanced settings', '', 'inherit', 'open', 'open', '', '422-autosave', '', '', '2012-08-12 18:19:19', '2012-08-12 18:19:19', '', 422, 'http://wp1/uncategorized/422-autosave/', 0, 'revision', '', 0),
(452, 1, '2012-08-12 18:16:58', '2012-08-12 18:16:58', 'GavernWP has SEO settings built - in which allow to overwrite Wordpress standard SEO settings. After switching on "Use Gavern SEO settings" option, a lot of options connected with SEO will appear:\n\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-7.jpg"><img class="aligncenter size-full wp-image-688" title="SEO settings" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-7.jpg" alt="" width="575" height="617" /></a>\n\nThe first group of options is connected with page''s title:\n<ul>\n	<li><strong>Use blogname in title</strong> - this option allows to switch on showing a blogname in the title</li>\n	<li><strong>Separator used in title</strong> - it specifies a separator which is between a title description and a pages''s name</li>\n	<li><strong>Title - description</strong> - it allows to specify page''s title description (the first part of a title - before a separator)</li>\n	<li><strong>Title - blogname</strong> - it allows to specify page''s name (the second part of a title after a separator)</li>\n</ul>\nThe remaining options allow to switch on advanced management of <strong>keywords</strong> and <strong>description</strong> metatags:\n\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-8.jpg"><img class="aligncenter size-full wp-image-689" title="Metatags" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-8.jpg" alt="" width="579" height="234" /></a>\n\nIn the case of a homepage, these metatags values are specified in a SEO settings panel whereas in the case of subpages, there are two settings available for both metatags:\n<ul>\n	<li><strong>Disabled</strong></li>\n	<li><strong>Enabled (custom field in the post editor)</strong></li>\n</ul>\nWhen you switch on these settings, under a posts editor two additional fields will appear:\n\n&nbsp;\n\nIf you fill them in, metatags used on one subpage with an entry will be created.', 'SEO settings', '', 'inherit', 'open', 'open', '', '413-autosave', '', '', '2012-08-12 18:16:58', '2012-08-12 18:16:58', '', 413, 'http://wp1/uncategorized/413-autosave/', 0, 'revision', '', 0),
(453, 1, '2012-07-17 12:25:24', '2012-07-17 12:25:24', 'In order to make GavernWP framework more flexible, we decided to use files in JSON format for storing template''s configuration and options layout in an administration panel.\r\n\r\nYou may find files responsible for template''s configuration in <strong>gavern/options/</strong> catalog:<strong></strong>\r\n<ul>\r\n	<li><strong>fonts.json</strong> - a file which stores template''s groups of fonts. By default, there are three main gropus created. In order to create a new group, it is enough to add a next object to the object table existing in this file.plik przechowujący grupy czcionek szablonu.</li>\r\n	<li><strong>menus.json</strong> - you will find space for menu used in a template in this file. You have to remember that except adding a new object, you have to add PHP code generating menu data in template''s code. It is also worth remembering that there could be one main menu (<strong>main</strong> field in menu object).<strong></strong></li>\r\n	<li><strong>opengraph.json</strong> - plik ten zawiera konfigurację pól używanych w bloku związanym z metabox-em używanym do generowania danych Open Graph. Nie zalecamy dokonywania w nim żadnych zmian bez poznania dokładnej implementacji tagów Open Graph we frameworku GavernWP.</li>\r\n	<li><strong>styles.json</strong> - plik ten jest wykorzystywany do generowania dodatkowych styli szablonu. Poza dodaniem nowego stylu, należy też pamietać o stworzeniu dodatkowego pliku CSS, który będzie ładowany przy zmianie stylu szablonu.</li>\r\n	<li><strong>template.json</strong> - najważniejszy plik konfiguracyjny. Zawiera on informacje o szablonie oraz pozwala wyłączyć wybrane elementy panelu administracyjnego szablonu. Nie jest zalecane dodawanie nowych pól do tego pliku gdyż bez dodatkowego kodu PHP nie zostaną one wykorzystane.</li>\r\n	<li><strong>widgets.json</strong> - plik zawierający listę wszystkich pozycji widżetów. Podobnie jak w wypadku pliku <strong>menus.json</strong>, należy pamietać, że poza dodaniem nowej pozycji widżetów, trzeba też dodać kod PHP generujący ją w szablonie.</li>\r\n	<li><strong>widgets.styles.json</strong> - plik stosowany do tworzenia nowych styli widżetów. Dzięki swojej implementacji pozwala przypisać dany styl tylko do danego typu widżetów lub też wykluczyć z danego stylu wybrane rodzaje widżetów.</li>\r\n</ul>\r\nBy lepiej zrozumieć format plików JSON polecamy lekturę oficjalne strony <a href="http://www.json.org/">tego formatu</a>.\r\n\r\n&nbsp;', 'JSON Configuration', '', 'inherit', 'open', 'open', '', '338-revision-4', '', '', '2012-07-17 12:25:24', '2012-07-17 12:25:24', '', 338, 'http://wp1/uncategorized/338-revision-4/', 0, 'revision', '', 0),
(454, 1, '2012-07-09 09:40:13', '2012-07-09 09:40:13', 'GavernWP posiada wbudowane wsparcie dla protokołu <a title="Open Graph" href="http://opengraphprotocol.org/" target="_blank">Open Graph</a>. Dzięki temu każdy dodawany post może posiadać określone metatagi, które sprawią, że podczas udostępniania danego posta na Facebooku pojawią się określone wcześniej przez autora wpisu informacje:\r\n<ul>\r\n	<li>tytuł</li>\r\n	<li>opis wpisu</li>\r\n	<li>miniaturka związana z wpisem</li>\r\n</ul>\r\nDzięki temu autor posta może lepiej wpływać na to co pojawia się w mediach społecznościowych. Dodatkowo warto pamiętać, że w wypadku gdy pola związane z Open Graph, nie zostaną wypełnione, wtedy GavernWP spróbuje wypełnić je automatycznie na bazie danych wpisu.\r\n\r\nWsparcie dla Open Graph jest świetnym uzupełnieniem dla zaimplementowanego w GavernWP systemu Social API.', 'Open Graph support', '', 'inherit', 'open', 'open', '', '341-revision-2', '', '', '2012-07-09 09:40:13', '2012-07-09 09:40:13', '', 341, 'http://wp1/uncategorized/341-revision-2/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(455, 1, '2012-07-18 22:04:32', '2012-07-18 22:04:32', 'GavernWP has built - in support for <a title="Open Graph" href="http://opengraphprotocol.org/" target="_blank">Open Graph</a> protocol. Thanks to it, each post added may have metatags specified which Dzięki temu każdy dodawany post może posiadać określone metatagi, które sprawią, że podczas udostępniania danego posta na Facebooku pojawią się określone wcześniej przez autora wpisu informacje:\r\n<ul>\r\n	<li>tytuł</li>\r\n	<li>opis wpisu</li>\r\n	<li>miniaturka związana z wpisem</li>\r\n</ul>\r\nDzięki temu autor posta może lepiej wpływać na to co pojawia się w mediach społecznościowych. Dodatkowo warto pamiętać, że w wypadku gdy pola związane z Open Graph, nie zostaną wypełnione, wtedy GavernWP spróbuje wypełnić je automatycznie na bazie danych wpisu.\r\n\r\nWsparcie dla Open Graph jest świetnym uzupełnieniem dla zaimplementowanego w GavernWP systemu Social API.', 'Open Graph support', '', 'inherit', 'open', 'open', '', '341-revision-3', '', '', '2012-07-18 22:04:32', '2012-07-18 22:04:32', '', 341, 'http://wp1/uncategorized/341-revision-3/', 0, 'revision', '', 0),
(456, 1, '2012-07-09 09:56:08', '2012-07-09 09:56:08', 'GavernWP posiada rozbudowany mechanizm pozwalający na tworzenie dodatkowych styli szablonu. W mechaniźmie tym można rozróżnić dwie główne grupy styli:\r\n<ul>\r\n	<li>rodzina styli</li>\r\n	<li>style wchodzące w skład danej rodziny styli</li>\r\n</ul>\r\nCała konfiguracja zawarta jest w pliku<strong> styles.json</strong>:\r\n\r\n[code][{\r\n\r\n"family": "color",\r\n"family_desc": "Template color",\r\n"family_tooltip": "You can select one of the template colors",\r\n"styles": [\r\n{\r\n"name": "Color I",\r\n"value": "color1",\r\n"file": "style1.css"\r\n},\r\n{\r\n"name": "Color II",\r\n"value": "color2",\r\n"file": "style2.css"\r\n}\r\n]\r\n}][/code]\r\n\r\nJak widać zawiera on rodzinę styli <strong>color</strong>, która posiada dwa style: <strong>Color I</strong> i <strong>Color II</strong>.\r\n\r\nAby stworzyć nową rodzinę styli lub styl wchodzący w skład danej rodziny styli wystarczy stworzyć kolejny obiekt w pliku <strong>styles.json</strong> a następnie stworzyć pliki CSS powiązane z daną rodziną - w wypadku rodziny <strong>color</strong> są to pliki <strong>style1.css</strong> oraz <strong>style2.css</strong>.\r\n\r\nGavernWP sam wczyta w sekcji <strong>head</strong> pliki CSS danego stylu - wybrane w panelu administracyjnym lub jeżeli jest włączone narzędzie do wyboru styli użytkownika - zostaną one wczytane na bazie pliku Cookie przechowującego dane o wybranym stylu użytkownika.\r\n\r\nNależy przy tym pamiętać, że dla każdej rodziny styli wczytywany jest co najmniej jeden plik CSS. Dlatego też tworzenie współistniejących rodzin styli takich jak:\r\n<ul>\r\n	<li><strong>dark styles</strong> i <strong>light styles</strong></li>\r\n	<li><strong>blue styles</strong> i <strong>green styles</strong></li>\r\n</ul>\r\njest niepoprawne, gdyż co najmniej jeden styl CSS z każdej rodziny będzie od razu wczytany. Za to poprawnym jest stworzenie rodzin styli odpowiadających za pewne elementy stylowania strony np. oddzielna rodzina odpowiadająca za kolorystykę strony (<strong>colors</strong>) i oddzielna rodzina odpowiadająca za tło strony (<strong>patterns</strong>).\r\n\r\nOgólnie należy zadbać o to by poszczególne rodziny styli nie nadpisywały się wzajemnie.', 'Color Styles', '', 'inherit', 'open', 'open', '', '349-revision-2', '', '', '2012-07-09 09:56:08', '2012-07-09 09:56:08', '', 349, 'http://wp1/uncategorized/349-revision-2/', 0, 'revision', '', 0),
(457, 1, '2012-07-09 10:24:12', '2012-07-09 10:24:12', 'GavernWP umożliwia tworzenie szablonów w oparciu o Responsive Web Design. Dlatego też posiada on dwa dodatkowe style CSS:\r\n<ul>\r\n	<li>tablet.css</li>\r\n	<li>mobile.css</li>\r\n</ul>\r\nDzięki opcjom dostępnym w panelu administracyjnym można określić kiedy dokładnie będą wczytywane te style CSS.\r\n\r\nUkład dwukolumnowy (o ile kolumna jest włączona) wczytywany jest wtedy gdy nie jest wczytywany plik tablet.css.\r\n\r\nW momencie osiągnięcia granicznej szerokości dla pliku tablet.css układ strony przekształcany jest w jednokolumnowy a sama kolumna ląduję przed lub za treścią główną strony.\r\n\r\nDodatkowo w pozycjach widżetów takich jak top czy bottom1/2/3 moduły z układu trójkolumnowego przekształcają się na układ jednokolumnowy.\r\n\r\nNatomiast po wczytaniu pliku mobile.css wszędzie stosowany jest układ jednokolumnowy.\r\n\r\nBardzo ważnym udogodnieniem jest możliwość określenia czy moduł będzie wczytywany w trybie tabletowym lub mobilnym - więcej na ten temat można znaleźć we wpisie poświęconym Widget Rules.', 'Responsive Layout', '', 'inherit', 'open', 'open', '', '351-revision-2', '', '', '2012-07-09 10:24:12', '2012-07-09 10:24:12', '', 351, 'http://wp1/uncategorized/351-revision-2/', 0, 'revision', '', 0),
(458, 1, '2012-07-09 10:28:40', '2012-07-09 10:28:40', '<a href="http://www.opensearch.org/Home" target="_blank">Open Search</a> to technologia pozwalająca na stworzenie własnego silnika wyszukiwania wykorzystywanego przez przeglądarkę. Dzięki temu np. w przeglądarce Firefox użytkownik może po wejściu na naszą stronę opartą o framework GavernWP, zdefiniować nową wyszukiwarkę - dzięki temu w wypadku bardziej rozbudowanych witryn np. katalogów danych, wyszukiwanie staje się znacząco prostsze.\r\n\r\nWłączenie wsparcia dla Open Search wymaga włączenia jednej opcji w panelu administracyjnym w zakładce ustawień zaawansowanych. Wszystkie pozostałe operacje wykonywane są przez GavernWP.', 'Open Search support', '', 'inherit', 'open', 'open', '', '353-revision-2', '', '', '2012-07-09 10:28:40', '2012-07-09 10:28:40', '', 353, 'http://wp1/uncategorized/353-revision-2/', 0, 'revision', '', 0),
(459, 1, '2012-07-09 10:36:35', '2012-07-09 10:36:35', 'Dzięki Social API dodanie do wpisu przycisków udostępniania postów w najpopularniejszych portalach społecznościowych jest banalnie proste.\r\n\r\nSocial API wspiera obecnie cztery serwisy:\r\n<ul>\r\n	<li>Facebook</li>\r\n	<li>Google+</li>\r\n	<li>Twitter</li>\r\n	<li>Pinterest</li>\r\n</ul>\r\nPrzyciski udostępniania dodawane są z reguły pod wpisem. Wszelkie dane dodatkowe potrzebne do udostępnienia pobierane sa z treści wpisu lub metatagów OpenGraph.\r\n\r\nDzięki rozbudowanym opcjom konfiguracyjnym, można samodzielnie dobrać wygląd przycisków zgodnie z obecnie dostępnymi parametrami konfiguracyjnymi.\r\n\r\nCo najważniejsze zakres działania Social API można ograniczyć do konkretnych postów lub też wyłączyć z jego działania tylko wybrane posty.', 'Social API', '', 'inherit', 'open', 'open', '', '356-revision-2', '', '', '2012-07-09 10:36:35', '2012-07-09 10:36:35', '', 356, 'http://wp1/uncategorized/356-revision-2/', 0, 'revision', '', 0),
(460, 1, '2012-07-19 21:53:19', '2012-07-19 21:53:19', 'Thanks to Social API, adding buttons to an entry for sharing posts in the most popular social network services is very easy.\r\n\r\nAt the moment, Social API supports four services:\r\n<ul>\r\n	<li>Facebook</li>\r\n	<li>Google+</li>\r\n	<li>Twitter</li>\r\n	<li>Pinterest</li>\r\n</ul>\r\nButtons for sharing are generally added under an entry. All contact data needed for sharing are loaded from entry content or from OpenGraph metatags.\r\n\r\nThanks to extensive configuration options, it is possible to adjust buttons look in accordance with available configuration parameters.\r\n\r\nThe most important thing is that the work of Social API can be limited to specific posts or switch off some posts fro its work.', 'Social API', '', 'inherit', 'open', 'open', '', '356-revision-3', '', '', '2012-07-19 21:53:19', '2012-07-19 21:53:19', '', 356, 'http://wp1/uncategorized/356-revision-3/', 0, 'revision', '', 0),
(461, 1, '2012-07-10 06:25:25', '2012-07-10 06:25:25', 'Każda podstrona szablonu w GavernWP tworzona jest na podstawie jednego pliku z katalogu głównego szablonu np. <strong>single.php</strong> oraz co najmniej czterech plików dodatkowych z katalogu <strong>layouts</strong>:\r\n<ul>\r\n	<li><strong>header.php</strong> - plik ten zawiera początkową strukturę strony tj. sekcję head oraz cały nagłówek strony z elementami takimi jak logo, menu główne itd.</li>\r\n	<li><strong>before.php</strong> - w pliku tym zawarte są wszystkie pozycje widżetów, które znajdują się przed główną treścią strony.</li>\r\n	<li><strong>after.php</strong> - plik ten jest odpowiednikiem pliku <strong>before.php</strong>, z tą różnicą, że zawiera pozycje widżetów, które znajdują się po głównej treści strony.</li>\r\n	<li><strong>footer.php</strong> - tak jak plik <strong>header.php</strong> zawiera początkową strukturę strony tak <strong>footer.php</strong> zawiera końcową strukturę strony tj. stopkę i elementy znajdujące się pod nią.</li>\r\n</ul>\r\nPowyższe pliki wraz z danym plikiem z katalogu głównego, tworzą podstawową strukturę każdej strony. Pozostałe elementy są generowane przez dodatkowe pliki lub funkcje. Większość takich plików można znaleźć w katalogu <strong>layouts</strong> - dla przykładu pliki o nazwach <strong>content.post.*.php</strong> zawierają składowe elementy każdego posta. Zastosowanie takich plików pozwoliło na znaczne ograniczenie ilości kodu w głównych plikach szablonu oraz ułatwia jego modyfikację gdyż zmiana np. stopki wpisu wymaga modyfikacji jednego lub dwóch a nie kilkunastu plików.\r\n\r\nFunkcje używane do generowania dodatkowych informacji wyświetlanych w postach, znajdują się w pliku <strong>gavern/helpers/helpers.layout.fragments.php</strong>.', 'Template structure', '', 'inherit', 'open', 'open', '', '359-revision-2', '', '', '2012-07-10 06:25:25', '2012-07-10 06:25:25', '', 359, 'http://wp1/uncategorized/359-revision-2/', 0, 'revision', '', 0),
(462, 1, '2012-07-20 08:46:20', '2012-07-20 08:46:20', 'Each template''s subpage in GavernWP is created and based on one file from template''s main catalog, e.g. <strong>single.php</strong> and at least four additional files from <strong>layouts</strong> catalog:\r\n<ul>\r\n	<li><strong>header.php</strong> - this file includes starting page''s structure i.e. a head sectionplik ten zawiera początkową strukturę strony tj. sekcję head oraz cały nagłówek strony z elementami takimi jak logo, menu główne itd.</li>\r\n	<li><strong>before.php</strong> - w pliku tym zawarte są wszystkie pozycje widżetów, które znajdują się przed główną treścią strony.</li>\r\n	<li><strong>after.php</strong> - plik ten jest odpowiednikiem pliku <strong>before.php</strong>, z tą różnicą, że zawiera pozycje widżetów, które znajdują się po głównej treści strony.</li>\r\n	<li><strong>footer.php</strong> - tak jak plik <strong>header.php</strong> zawiera początkową strukturę strony tak <strong>footer.php</strong> zawiera końcową strukturę strony tj. stopkę i elementy znajdujące się pod nią.</li>\r\n</ul>\r\nPowyższe pliki wraz z danym plikiem z katalogu głównego, tworzą podstawową strukturę każdej strony. Pozostałe elementy są generowane przez dodatkowe pliki lub funkcje. Większość takich plików można znaleźć w katalogu <strong>layouts</strong> - dla przykładu pliki o nazwach <strong>content.post.*.php</strong> zawierają składowe elementy każdego posta. Zastosowanie takich plików pozwoliło na znaczne ograniczenie ilości kodu w głównych plikach szablonu oraz ułatwia jego modyfikację gdyż zmiana np. stopki wpisu wymaga modyfikacji jednego lub dwóch a nie kilkunastu plików.\r\n\r\nFunkcje używane do generowania dodatkowych informacji wyświetlanych w postach, znajdują się w pliku <strong>gavern/helpers/helpers.layout.fragments.php</strong>.', 'Template structure', '', 'inherit', 'open', 'open', '', '359-revision-3', '', '', '2012-07-20 08:46:20', '2012-07-20 08:46:20', '', 359, 'http://wp1/uncategorized/359-revision-3/', 0, 'revision', '', 0),
(463, 1, '2012-07-10 06:48:59', '2012-07-10 06:48:59', 'Kod CSS szablonu podzielony jest na kilka plików, wczytywanych w określonej kolejności. Wszystkie te pliki znajdują się w katalogu <strong>css</strong>. Należy pamiętać, że kolejność tych plików jest bardzo ważna i jej zmiana może powodować nieprzewidywalne zmiany wyglądu szablonu, ze względu na stosowanie w kodzie CSS zasady przechodzenia od stylowania ogólnego do stylowania szczegółowego.\r\n\r\nLista plików CSS wykorzystywanych w szablonie prezentuje się następująco (kolejność według zalecanej kolejności wczytywania tych plików):\r\n<ol>\r\n	<li><strong>normalize.css</strong> - kod CSS unifikujący stylowanie elementów strony we wszystkich przeglądarkach.</li>\r\n	<li><strong>template.css</strong> - najważniejszy plik CSS, odpowiadający za stylowanie układu strony, podstawową typografię, bazowe stylowanie widżetów itd.</li>\r\n	<li><strong>wp.css</strong> - reguły CSS, które odpowiadają za stylowanie elementów Wordpressa np. formularza komentarzy, samych komentarzy czy elementów postów.</li>\r\n	<li><strong>shortcodes.*.css</strong> (optional) - grupa plików CSS, które są odpowiedzialne za stylowanie elementów typografii wstawianych do postów za pomoca Shortcodes.</li>\r\n	<li><strong>stuff.css</strong> - zawiera stylowanie dodatkowych elementów szablonu takich jak breadcrumbs czy font-size switcher.</li>\r\n	<li><strong>wp.extensions.css</strong> - reguły CSS związane ze stylowaniem standardowych widżetów udostępnianych razem z Wordpressem.</li>\r\n	<li><strong>extensions.css (optional)</strong> - plik CSS, który należy samodzielnie dodać w wypadku gdy chcemy ostylować dodatkowe widżety. W wypadku małych zmian w stylowaniu widżetów zalecamy zamiast tego pliku zastosować plik <strong>override.css</strong>.</li>\r\n	<li><strong>tablet.css</strong> - reguły CSS wykorzystywane przy wyświetlaniu strony na urządzeniach typu tablet.</li>\r\n	<li><strong>mobile.css</strong> - reguły CSS wykorzystyane przy wyświetlaniu strony na urządzeniach typu smartfon.</li>\r\n	<li><strong>ie*.css</strong> - plik lub grupa plików CSS wykorzystywanych do poprawienia wyglądu strony w przeglądarce Internet Explorer.</li>\r\n	<li><strong>style*.css</strong> - plik lub grupa plików CSS wykorzystywanych do zmiany kolorystyki lub ogólnej stylistyki szablonu - wczytywane automatycznie przez mechanizm odpowiadający za kolorystykę szablonu.</li>\r\n	<li><strong>override.css</strong> (optional) - w pliku tym można dodać własne reguły CSS, które nadpiszą istniejące reguły w poprzednich plikach - idealne rozwiązanie do modyfikacji szablonu bez modyfikowania pozostałych plików CSS.</li>\r\n</ol>\r\nDodatkowo kod CSS używany w samym szablonie znajdziemy też w katalogu <strong>templates</strong>, gdzie znajdują się pliki CSS wczytywane tylko na wybranych stylach podstron np. potrzebne do poprawnego działania galerii.', 'Template CSS', '', 'inherit', 'open', 'open', '', '361-revision-2', '', '', '2012-07-10 06:48:59', '2012-07-10 06:48:59', '', 361, 'http://wp1/uncategorized/361-revision-2/', 0, 'revision', '', 0),
(464, 1, '2012-07-10 07:04:27', '2012-07-10 07:04:27', 'GavernWP posiada wsparcie dla komentarzy z podziałem na wątki. Dzięki temu dyskusje prowadzone w komentarzach pod danym postem są dużo czytelniejsze.\r\n\r\nWszystkie opcje związane z konfiguracją komentarzy można ustawić korzystając ze standardowych opcji w panelu administracyjnym Wordpress (<em>Settings &gt; Discussion</em>). Wątki w komentarzach włączane są dzięki opcji "<em><label for="thread_comments">Enable threaded (nested) comments</label></em>" i określeniu maksymalnej głębokości zagnieżdżeń odpowiedzi w wątkach.\r\n\r\nZa generowanie kodu HTML komentarzy w GavernWP odpowiadają dwa pliki:\r\n<ul>\r\n	<li><strong>comments.php</strong> - zawiera on kod generujący listę komentarzy oraz formularz ich dodawania.</li>\r\n	<li><strong>gavern/helpers/helper.layout.fragments.php</strong> - w funkcji <strong>gavern_comment_template</strong> znajduje się kod odpowiadający za wygenerowanie kodu danego komentarza.</li>\r\n</ul>\r\nKod CSS odpowiadający za stylistykę komentarzy i formularza dodawania komentarzy znajduje się w pliku <strong>css/wp.css</strong>.', 'Threaded comments', '', 'inherit', 'open', 'open', '', '364-revision-2', '', '', '2012-07-10 07:04:27', '2012-07-10 07:04:27', '', 364, 'http://wp1/uncategorized/364-revision-2/', 0, 'revision', '', 0),
(465, 1, '2012-07-20 13:11:15', '2012-07-20 13:11:15', 'GavernWP has support for comments with a division into threads. posiada wsparcie dla komentarzy z podziałem na wątki. Dzięki temu dyskusje prowadzone w komentarzach pod danym postem są dużo czytelniejsze.\r\n\r\nWszystkie opcje związane z konfiguracją komentarzy można ustawić korzystając ze standardowych opcji w panelu administracyjnym Wordpress (<em>Settings &gt; Discussion</em>). Wątki w komentarzach włączane są dzięki opcji "<em><label for="thread_comments">Enable threaded (nested) comments</label></em>" i określeniu maksymalnej głębokości zagnieżdżeń odpowiedzi w wątkach.\r\n\r\nZa generowanie kodu HTML komentarzy w GavernWP odpowiadają dwa pliki:\r\n<ul>\r\n	<li><strong>comments.php</strong> - zawiera on kod generujący listę komentarzy oraz formularz ich dodawania.</li>\r\n	<li><strong>gavern/helpers/helper.layout.fragments.php</strong> - w funkcji <strong>gavern_comment_template</strong> znajduje się kod odpowiadający za wygenerowanie kodu danego komentarza.</li>\r\n</ul>\r\nKod CSS odpowiadający za stylistykę komentarzy i formularza dodawania komentarzy znajduje się w pliku <strong>css/wp.css</strong>.', 'Threaded comments', '', 'inherit', 'open', 'open', '', '364-revision-3', '', '', '2012-07-20 13:11:15', '2012-07-20 13:11:15', '', 364, 'http://wp1/uncategorized/364-revision-3/', 0, 'revision', '', 0),
(466, 1, '2012-07-10 07:18:36', '2012-07-10 07:18:36', 'GavernWP udostępnia kilka własnych styli podstron. Dzięki nim możliwe jest lepsze wykorzystanie możliwości Wordpressa oraz dostosowanie stron do wybranej tematyki.\r\n\r\nWszystkie dodatkowe style podstron są umieszczone w katalogu głównym w plikach <strong>template.*.php</strong>. Standardowo GavernWP zawiera następujace rodzaje podstron:\r\n<ul>\r\n	<li><strong>template.archive.php</strong> - strona archiwum, zawiera listę ostatnich postów, kategorii oraz listę linków do archiwów miesięcznych</li>\r\n	<li><strong>template.contact.php</strong> - strona z formularzem kontaktowym, który pozwala na wysłanie maila pod określony w konfiguracji Wordpressa adres e-mail.</li>\r\n	<li><strong>template.fullwidth.php</strong> - układ strony bez bocznego sidebar''a.</li>\r\n	<li><strong>template.gallery.php</strong> - strona generująca animowaną galerię zdjęć z wykorzystaniem dostępnego w Wordpress mechanizmu załączników - wystarczy przypisać załączniki do takiej strony by pojawiły się one jako slajdy w galerii. Zalecane jest wybieranie zdjęć, które mają taki sam rozmiar.</li>\r\n	<li><strong>template.login.php</strong> - strona generująca formularz logowania dla użytkowników - po zalogowaniu wyświetla użytkownikowi informacje o jego nazwie użytkownika oraz przycisk do wylogowania się.</li>\r\n	<li><strong>template.tagcloud.php</strong> - strona generująca tag cloud naszej witryny.</li>\r\n</ul>\r\nGłówne style CSS od podstron znajdują się w pliku <strong>css/stuff.css</strong>, jednak należy pamiętać, że niektóre bardziej rozbudowane pliki podstron mogą dodatkowo wczytywać pliki CSS i JavaScript z katalogów <strong>css/templates/</strong> oraz <strong>js/templates/</strong>.\r\n\r\nAby wczytać w ten sposób dodatkowe pliki wystarczy zdefiniować drugi parametr funkcji <strong>gk_load</strong> (patrz: kod wywołania funkcji <strong>gk_load</strong> w pliku <strong>template.gallery.php</strong>).', 'Custom Page Styles', '', 'inherit', 'open', 'open', '', '367-revision-2', '', '', '2012-07-10 07:18:36', '2012-07-10 07:18:36', '', 367, 'http://wp1/uncategorized/367-revision-2/', 0, 'revision', '', 0),
(467, 1, '2012-07-23 08:52:22', '2012-07-23 08:52:22', 'GavernWP makes accessible a few own styles of subpages. Thanks to them, it is possible to use Wordpress possiblitities better  and adjusting pages to themes chosen.\r\n\r\nWszystkie dodatkowe style podstron są umieszczone w katalogu głównym w plikach <strong>template.*.php</strong>. Standardowo GavernWP zawiera następujace rodzaje podstron:\r\n<ul>\r\n	<li><strong>template.archive.php</strong> - strona archiwum, zawiera listę ostatnich postów, kategorii oraz listę linków do archiwów miesięcznych</li>\r\n	<li><strong>template.contact.php</strong> - strona z formularzem kontaktowym, który pozwala na wysłanie maila pod określony w konfiguracji Wordpressa adres e-mail.</li>\r\n	<li><strong>template.fullwidth.php</strong> - układ strony bez bocznego sidebar''a.</li>\r\n	<li><strong>template.gallery.php</strong> - strona generująca animowaną galerię zdjęć z wykorzystaniem dostępnego w Wordpress mechanizmu załączników - wystarczy przypisać załączniki do takiej strony by pojawiły się one jako slajdy w galerii. Zalecane jest wybieranie zdjęć, które mają taki sam rozmiar.</li>\r\n	<li><strong>template.login.php</strong> - strona generująca formularz logowania dla użytkowników - po zalogowaniu wyświetla użytkownikowi informacje o jego nazwie użytkownika oraz przycisk do wylogowania się.</li>\r\n	<li><strong>template.tagcloud.php</strong> - strona generująca tag cloud naszej witryny.</li>\r\n</ul>\r\nGłówne style CSS od podstron znajdują się w pliku <strong>css/stuff.css</strong>, jednak należy pamiętać, że niektóre bardziej rozbudowane pliki podstron mogą dodatkowo wczytywać pliki CSS i JavaScript z katalogów <strong>css/templates/</strong> oraz <strong>js/templates/</strong>.\r\n\r\nAby wczytać w ten sposób dodatkowe pliki wystarczy zdefiniować drugi parametr funkcji <strong>gk_load</strong> (patrz: kod wywołania funkcji <strong>gk_load</strong> w pliku <strong>template.gallery.php</strong>).', 'Custom Page Styles', '', 'inherit', 'open', 'open', '', '367-revision-3', '', '', '2012-07-23 08:52:22', '2012-07-23 08:52:22', '', 367, 'http://wp1/uncategorized/367-revision-3/', 0, 'revision', '', 0),
(468, 1, '2012-07-23 08:57:07', '2012-07-23 08:57:07', 'GavernWP makes accessible a few own styles of subpages. Thanks to them, it is possible to use Wordpress possiblitities better  and adjusting pages to themes chosen.\r\n\r\nAll additional subpages styles are placed in a main catalog in <strong>template.*.php</strong> files. GavernWP has the following subpages:\r\n<ul>\r\n	<li><strong>template.archive.php</strong> - strona archiwum, zawiera listę ostatnich postów, kategorii oraz listę linków do archiwów miesięcznych</li>\r\n	<li><strong>template.contact.php</strong> - strona z formularzem kontaktowym, który pozwala na wysłanie maila pod określony w konfiguracji Wordpressa adres e-mail.</li>\r\n	<li><strong>template.fullwidth.php</strong> - układ strony bez bocznego sidebar''a.</li>\r\n	<li><strong>template.gallery.php</strong> - strona generująca animowaną galerię zdjęć z wykorzystaniem dostępnego w Wordpress mechanizmu załączników - wystarczy przypisać załączniki do takiej strony by pojawiły się one jako slajdy w galerii. Zalecane jest wybieranie zdjęć, które mają taki sam rozmiar.</li>\r\n	<li><strong>template.login.php</strong> - strona generująca formularz logowania dla użytkowników - po zalogowaniu wyświetla użytkownikowi informacje o jego nazwie użytkownika oraz przycisk do wylogowania się.</li>\r\n	<li><strong>template.tagcloud.php</strong> - strona generująca tag cloud naszej witryny.</li>\r\n</ul>\r\nGłówne style CSS od podstron znajdują się w pliku <strong>css/stuff.css</strong>, jednak należy pamiętać, że niektóre bardziej rozbudowane pliki podstron mogą dodatkowo wczytywać pliki CSS i JavaScript z katalogów <strong>css/templates/</strong> oraz <strong>js/templates/</strong>.\r\n\r\nAby wczytać w ten sposób dodatkowe pliki wystarczy zdefiniować drugi parametr funkcji <strong>gk_load</strong> (patrz: kod wywołania funkcji <strong>gk_load</strong> w pliku <strong>template.gallery.php</strong>).', 'Custom Page Styles', '', 'inherit', 'open', 'open', '', '367-revision-4', '', '', '2012-07-23 08:57:07', '2012-07-23 08:57:07', '', 367, 'http://wp1/uncategorized/367-revision-4/', 0, 'revision', '', 0),
(469, 1, '2012-07-23 09:14:23', '2012-07-23 09:14:23', 'GavernWP makes accessible a few own styles of subpages. Thanks to them, it is possible to use Wordpress possiblitities better  and adjusting pages to themes chosen.\r\n\r\nAll additional subpages styles are placed in a main catalog in <strong>template.*.php</strong> files. GavernWP has the following subpages:\r\n<ul>\r\n	<li><strong>template.archive.php</strong> - an archive page, in includes a list of recent posts, categories and a list of links to monthly archives.</li>\r\n	<li><strong>template.contact.php</strong> - a page with a contact form which allows to send an email to an email address specified in a Wordpress configuration.</li>\r\n	<li><strong>template.fullwidth.php</strong> - a page''s layout without a sidebar.</li>\r\n	<li><strong>template.gallery.php</strong> - a page generating an animated gallery of images with a mechanism of attachments available in Wordpress - it is enough to assign attachments to such a page that they will show as slides in a gallery. It is recommened to choose images with the same size.</li>\r\n	<li><strong>template.login.php</strong> - a page generating a login form for users - after logging in, it displays information about his/her username and a button to log out.</li>\r\n	<li><strong>template.tagcloud.php</strong> - strona generująca tag cloud naszej witryny.</li>\r\n</ul>\r\nGłówne style CSS od podstron znajdują się w pliku <strong>css/stuff.css</strong>, jednak należy pamiętać, że niektóre bardziej rozbudowane pliki podstron mogą dodatkowo wczytywać pliki CSS i JavaScript z katalogów <strong>css/templates/</strong> oraz <strong>js/templates/</strong>.\r\n\r\nAby wczytać w ten sposób dodatkowe pliki wystarczy zdefiniować drugi parametr funkcji <strong>gk_load</strong> (patrz: kod wywołania funkcji <strong>gk_load</strong> w pliku <strong>template.gallery.php</strong>).', 'Custom Page Styles', '', 'inherit', 'open', 'open', '', '367-revision-5', '', '', '2012-07-23 09:14:23', '2012-07-23 09:14:23', '', 367, 'http://wp1/uncategorized/367-revision-5/', 0, 'revision', '', 0),
(470, 1, '2012-07-10 07:59:29', '2012-07-10 07:59:29', 'Widget rules to mechanizm, który wprowadza zupełnie nowy sposób zarządzania widżetami na stronie. Dzięki niemu można określić dla widżeta takie właściwości jak:\r\n<ul>\r\n	<li>wyświetlanie na wybranych podstronach</li>\r\n	<li>wyświetlanie na wybranym typie urządzeń</li>\r\n	<li>wyświetlanie dla wybranej grupy użytkowników</li>\r\n	<li>wyświetlanie z użyciem wybranego stylu widżetu</li>\r\n</ul>\r\nPo włączeniu widget rules w zaawansowanych ustawieniach szablonu, pod każdym widżetem powinny pojawić się następujace opcje:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-371" title="Widgets ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="258" height="200" /></a>\r\n\r\nNajbardziej rozbudowane są opcje związane z widocznością widżetu na wybranych podstronach - po wybraniu opcji pokazywania widżetu na wybranych stronach (lub opcji nie pokazywania widżetu na wybranych stronach) pojawi się następujacy panel:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg"><img class="aligncenter size-full wp-image-372" title="Widgets ‹ Meet Gavern WP — WordPress-1-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg" alt="" width="240" height="203" /></a>\r\n\r\nNależy następnie wybrać typ strony do dodania np. Category a następnie podać ID kategorii:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg"><img class="aligncenter size-full wp-image-373" title="Widgets ‹ Meet Gavern WP — WordPress-2" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg" alt="" width="242" height="216" /></a>\r\n\r\nPo kliknięciu przycisku "Add page" strona pojawi się na liście wybranych stron na których w naszym wypadku będzie wyświetlany widżet:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-374" title="Widgets ‹ Meet Gavern WP — WordPress-3" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="233" height="77" /></a>\r\n\r\nStron można oczywiście dodać kilka:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-375" title="Widgets ‹ Meet Gavern WP — WordPress-4" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="230" height="100" /></a>\r\n\r\nDla zwiększenia czytelności każdy rodzaj strony wyświetlany jest w innym kolorze. Dodaną już stronę można usunąć klikając ikonę usuwania umieszczoną po prawej stronie każdej ze stron.\r\n\r\nW ten sposób można ustawić widżet tak by pojawiał się na wybranych stronach lub żeby pojawiał się on na wszystkich strona poza tymi wybranymi.\r\n\r\nStandardowo widżety pokazywane są na wszystkich podstronach.\r\n\r\nOpcja wyświetlania widżetu na wybranych urządeniach posiada pięć opcji do wyboru:\r\n<ul>\r\n	<li><strong>All devices</strong> - widżet będzie wyświetlany wszędzie - na każdym urządzeniu</li>\r\n	<li><strong>Desktop</strong> - widżet będzie wyświetlany tylko wtedy gdy nie jest wczytany ani plik <strong>tablet.css</strong> ani plik <strong>mobile.css</strong></li>\r\n	<li><strong>Tablets</strong> - widżet wyświetli się tylko wtedy kiedy wczytany będzie plik <strong>tablet.css</strong> i jednocześnie nie będzie wczytany plik <strong>mobile.css</strong></li>\r\n	<li><strong>Smartphones</strong> - widżet wyświetli się tylko wtedy kiedy wczytany będzie plik <strong>mobile.css</strong>.</li>\r\n	<li><strong>Tablets/Smartphones</strong> - widżet wyświetli się gdy wczytany będzie co najmniej jeden z plików <strong>tablet.css</strong> lub <strong>mobile.css</strong>.</li>\r\n</ul>\r\nDzięki tym ustawieniom można znacząco ograniczyć ilość treści wyświetlanych na urządzeniach o małych ekranach.\r\n\r\nOpcja wyświetlania widżetu dla wybranych grup użytkowników posiada cztery opcje do wyboru:\r\n<ul>\r\n	<li><strong>All users</strong> - widżet pojawi się wszystkim użytkownikom</li>\r\n	<li><strong>Only guests</strong> - widżet pojawi się tylko niezalogowanym użytkownikom</li>\r\n	<li><strong>Only registered users</strong> - widżet pojawi się tylko zalogowanym użytkownikom</li>\r\n	<li><strong>Only administrator</strong> - widżet pojawi się tylko administratorom</li>\r\n</ul>\r\nDzięki tej opcji można np. wyświetlać określone wiadomości poprzeż użycie widżetów przeznaczone dla wybranej grupy użytkowników.\r\n\r\nOstatnią opcję składającą się na widget rules stanowi opcja wyboru stylu widżetu - powoduje ona dopisanie do głównego kontenera widżetu dodatkowej klasy nadającej określone przez użytkownika stylowanie.\r\n\r\nStyle widżetów zdefiniowane są w pliku widget.styles.json oraz w kodzie CSS - w tym wypadku w <strong>css/wp.extensions.css</strong>.', 'Widget rules', '', 'inherit', 'open', 'open', '', '370-revision-2', '', '', '2012-07-10 07:59:29', '2012-07-10 07:59:29', '', 370, 'http://wp1/uncategorized/370-revision-2/', 0, 'revision', '', 0),
(471, 1, '2012-07-23 09:39:43', '2012-07-23 09:39:43', 'Widget rules is a mechanism which introduces a completely new way to manage widgets on a website. Thanks to it, it is possible to specify widget features such as:\r\n<ul>\r\n	<li>displaying on subpages chosen,</li>\r\n	<li>displaying on devices chosen,</li>\r\n	<li>displaying for a group of users chosen,</li>\r\n	<li>displaying with a widget style use chosen.</li>\r\n</ul>\r\nAfter switching on widget rules in template''s advanced settings, under each widget, the following options should display Po włączeniu widget rules w zaawansowanych ustawieniach szablonu, pod każdym widżetem powinny pojawić się następujace opcje:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-371" title="Widgets ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="258" height="200" /></a>\r\n\r\nNajbardziej rozbudowane są opcje związane z widocznością widżetu na wybranych podstronach - po wybraniu opcji pokazywania widżetu na wybranych stronach (lub opcji nie pokazywania widżetu na wybranych stronach) pojawi się następujacy panel:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg"><img class="aligncenter size-full wp-image-372" title="Widgets ‹ Meet Gavern WP — WordPress-1-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg" alt="" width="240" height="203" /></a>\r\n\r\nNależy następnie wybrać typ strony do dodania np. Category a następnie podać ID kategorii:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg"><img class="aligncenter size-full wp-image-373" title="Widgets ‹ Meet Gavern WP — WordPress-2" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg" alt="" width="242" height="216" /></a>\r\n\r\nPo kliknięciu przycisku "Add page" strona pojawi się na liście wybranych stron na których w naszym wypadku będzie wyświetlany widżet:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-374" title="Widgets ‹ Meet Gavern WP — WordPress-3" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="233" height="77" /></a>\r\n\r\nStron można oczywiście dodać kilka:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-375" title="Widgets ‹ Meet Gavern WP — WordPress-4" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="230" height="100" /></a>\r\n\r\nDla zwiększenia czytelności każdy rodzaj strony wyświetlany jest w innym kolorze. Dodaną już stronę można usunąć klikając ikonę usuwania umieszczoną po prawej stronie każdej ze stron.\r\n\r\nW ten sposób można ustawić widżet tak by pojawiał się na wybranych stronach lub żeby pojawiał się on na wszystkich strona poza tymi wybranymi.\r\n\r\nStandardowo widżety pokazywane są na wszystkich podstronach.\r\n\r\nOpcja wyświetlania widżetu na wybranych urządeniach posiada pięć opcji do wyboru:\r\n<ul>\r\n	<li><strong>All devices</strong> - widżet będzie wyświetlany wszędzie - na każdym urządzeniu</li>\r\n	<li><strong>Desktop</strong> - widżet będzie wyświetlany tylko wtedy gdy nie jest wczytany ani plik <strong>tablet.css</strong> ani plik <strong>mobile.css</strong></li>\r\n	<li><strong>Tablets</strong> - widżet wyświetli się tylko wtedy kiedy wczytany będzie plik <strong>tablet.css</strong> i jednocześnie nie będzie wczytany plik <strong>mobile.css</strong></li>\r\n	<li><strong>Smartphones</strong> - widżet wyświetli się tylko wtedy kiedy wczytany będzie plik <strong>mobile.css</strong>.</li>\r\n	<li><strong>Tablets/Smartphones</strong> - widżet wyświetli się gdy wczytany będzie co najmniej jeden z plików <strong>tablet.css</strong> lub <strong>mobile.css</strong>.</li>\r\n</ul>\r\nDzięki tym ustawieniom można znacząco ograniczyć ilość treści wyświetlanych na urządzeniach o małych ekranach.\r\n\r\nOpcja wyświetlania widżetu dla wybranych grup użytkowników posiada cztery opcje do wyboru:\r\n<ul>\r\n	<li><strong>All users</strong> - widżet pojawi się wszystkim użytkownikom</li>\r\n	<li><strong>Only guests</strong> - widżet pojawi się tylko niezalogowanym użytkownikom</li>\r\n	<li><strong>Only registered users</strong> - widżet pojawi się tylko zalogowanym użytkownikom</li>\r\n	<li><strong>Only administrator</strong> - widżet pojawi się tylko administratorom</li>\r\n</ul>\r\nDzięki tej opcji można np. wyświetlać określone wiadomości poprzeż użycie widżetów przeznaczone dla wybranej grupy użytkowników.\r\n\r\nOstatnią opcję składającą się na widget rules stanowi opcja wyboru stylu widżetu - powoduje ona dopisanie do głównego kontenera widżetu dodatkowej klasy nadającej określone przez użytkownika stylowanie.\r\n\r\nStyle widżetów zdefiniowane są w pliku widget.styles.json oraz w kodzie CSS - w tym wypadku w <strong>css/wp.extensions.css</strong>.', 'Widget rules', '', 'inherit', 'open', 'open', '', '370-revision-3', '', '', '2012-07-23 09:39:43', '2012-07-23 09:39:43', '', 370, 'http://wp1/uncategorized/370-revision-3/', 0, 'revision', '', 0),
(472, 1, '2012-07-23 09:48:37', '2012-07-23 09:48:37', 'Widget rules is a mechanism which introduces a completely new way to manage widgets on a website. Thanks to it, it is possible to specify widget features such as:\r\n<ul>\r\n	<li>displaying on subpages chosen,</li>\r\n	<li>displaying on devices chosen,</li>\r\n	<li>displaying for a group of users chosen,</li>\r\n	<li>displaying with a widget style use chosen.</li>\r\n</ul>\r\nAfter switching on widget rules in template''s advanced settings, under each widget, the following options should be displayed:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-371" title="Widgets ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="258" height="200" /></a>\r\n\r\nThe most extensive options are those connected with a widget visibility on subpages chosen - after choosing an option to show a widget on pages chosen (or an option not showing a widget on pages chosen) Najbardziej rozbudowane są opcje związane z widocznością widżetu na wybranych podstronach - po wybraniu opcji pokazywania widżetu na wybranych stronach (lub opcji nie pokazywania widżetu na wybranych stronach) pojawi się następujacy panel:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg"><img class="aligncenter size-full wp-image-372" title="Widgets ‹ Meet Gavern WP — WordPress-1-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg" alt="" width="240" height="203" /></a>\r\n\r\nNależy następnie wybrać typ strony do dodania np. Category a następnie podać ID kategorii:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg"><img class="aligncenter size-full wp-image-373" title="Widgets ‹ Meet Gavern WP — WordPress-2" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg" alt="" width="242" height="216" /></a>\r\n\r\nPo kliknięciu przycisku "Add page" strona pojawi się na liście wybranych stron na których w naszym wypadku będzie wyświetlany widżet:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-374" title="Widgets ‹ Meet Gavern WP — WordPress-3" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="233" height="77" /></a>\r\n\r\nStron można oczywiście dodać kilka:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-375" title="Widgets ‹ Meet Gavern WP — WordPress-4" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="230" height="100" /></a>\r\n\r\nDla zwiększenia czytelności każdy rodzaj strony wyświetlany jest w innym kolorze. Dodaną już stronę można usunąć klikając ikonę usuwania umieszczoną po prawej stronie każdej ze stron.\r\n\r\nW ten sposób można ustawić widżet tak by pojawiał się na wybranych stronach lub żeby pojawiał się on na wszystkich strona poza tymi wybranymi.\r\n\r\nStandardowo widżety pokazywane są na wszystkich podstronach.\r\n\r\nOpcja wyświetlania widżetu na wybranych urządeniach posiada pięć opcji do wyboru:\r\n<ul>\r\n	<li><strong>All devices</strong> - widżet będzie wyświetlany wszędzie - na każdym urządzeniu</li>\r\n	<li><strong>Desktop</strong> - widżet będzie wyświetlany tylko wtedy gdy nie jest wczytany ani plik <strong>tablet.css</strong> ani plik <strong>mobile.css</strong></li>\r\n	<li><strong>Tablets</strong> - widżet wyświetli się tylko wtedy kiedy wczytany będzie plik <strong>tablet.css</strong> i jednocześnie nie będzie wczytany plik <strong>mobile.css</strong></li>\r\n	<li><strong>Smartphones</strong> - widżet wyświetli się tylko wtedy kiedy wczytany będzie plik <strong>mobile.css</strong>.</li>\r\n	<li><strong>Tablets/Smartphones</strong> - widżet wyświetli się gdy wczytany będzie co najmniej jeden z plików <strong>tablet.css</strong> lub <strong>mobile.css</strong>.</li>\r\n</ul>\r\nDzięki tym ustawieniom można znacząco ograniczyć ilość treści wyświetlanych na urządzeniach o małych ekranach.\r\n\r\nOpcja wyświetlania widżetu dla wybranych grup użytkowników posiada cztery opcje do wyboru:\r\n<ul>\r\n	<li><strong>All users</strong> - widżet pojawi się wszystkim użytkownikom</li>\r\n	<li><strong>Only guests</strong> - widżet pojawi się tylko niezalogowanym użytkownikom</li>\r\n	<li><strong>Only registered users</strong> - widżet pojawi się tylko zalogowanym użytkownikom</li>\r\n	<li><strong>Only administrator</strong> - widżet pojawi się tylko administratorom</li>\r\n</ul>\r\nDzięki tej opcji można np. wyświetlać określone wiadomości poprzeż użycie widżetów przeznaczone dla wybranej grupy użytkowników.\r\n\r\nOstatnią opcję składającą się na widget rules stanowi opcja wyboru stylu widżetu - powoduje ona dopisanie do głównego kontenera widżetu dodatkowej klasy nadającej określone przez użytkownika stylowanie.\r\n\r\nStyle widżetów zdefiniowane są w pliku widget.styles.json oraz w kodzie CSS - w tym wypadku w <strong>css/wp.extensions.css</strong>.', 'Widget rules', '', 'inherit', 'open', 'open', '', '370-revision-4', '', '', '2012-07-23 09:48:37', '2012-07-23 09:48:37', '', 370, 'http://wp1/uncategorized/370-revision-4/', 0, 'revision', '', 0),
(473, 1, '2012-07-23 09:56:53', '2012-07-23 09:56:53', 'Widget rules is a mechanism which introduces a completely new way to manage widgets on a website. Thanks to it, it is possible to specify widget features such as:\r\n<ul>\r\n	<li>displaying on subpages chosen,</li>\r\n	<li>displaying on devices chosen,</li>\r\n	<li>displaying for a group of users chosen,</li>\r\n	<li>displaying with a widget style use chosen.</li>\r\n</ul>\r\nAfter switching on widget rules in template''s advanced settings, under each widget, the following options should be displayed:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-371" title="Widgets ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="258" height="200" /></a>\r\n\r\nThe most extensive options are those connected with a widget visibility on subpages chosen - after choosing an option to show a widget on pages chosen (or an option not showing a widget on pages chosen), such a panel will appear:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg"><img class="aligncenter size-full wp-image-372" title="Widgets ‹ Meet Gavern WP — WordPress-1-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg" alt="" width="240" height="203" /></a>\r\n\r\nThen, you have to choose a page''s type to add, e.g. Category, and then give category ID:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg"><img class="aligncenter size-full wp-image-373" title="Widgets ‹ Meet Gavern WP — WordPress-2" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg" alt="" width="242" height="216" /></a>\r\n\r\nAfter clicking "Add page" button, a page will appear on a list of pages chosen on which in our case a widget will be displayed:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-374" title="Widgets ‹ Meet Gavern WP — WordPress-3" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="233" height="77" /></a>\r\n\r\nOf course, it is possible to add more pages:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-375" title="Widgets ‹ Meet Gavern WP — WordPress-4" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="230" height="100" /></a>\r\n\r\nDla zwiększenia czytelności każdy rodzaj strony wyświetlany jest w innym kolorze. Dodaną już stronę można usunąć klikając ikonę usuwania umieszczoną po prawej stronie każdej ze stron.\r\n\r\nW ten sposób można ustawić widżet tak by pojawiał się na wybranych stronach lub żeby pojawiał się on na wszystkich strona poza tymi wybranymi.\r\n\r\nStandardowo widżety pokazywane są na wszystkich podstronach.\r\n\r\nOpcja wyświetlania widżetu na wybranych urządeniach posiada pięć opcji do wyboru:\r\n<ul>\r\n	<li><strong>All devices</strong> - widżet będzie wyświetlany wszędzie - na każdym urządzeniu</li>\r\n	<li><strong>Desktop</strong> - widżet będzie wyświetlany tylko wtedy gdy nie jest wczytany ani plik <strong>tablet.css</strong> ani plik <strong>mobile.css</strong></li>\r\n	<li><strong>Tablets</strong> - widżet wyświetli się tylko wtedy kiedy wczytany będzie plik <strong>tablet.css</strong> i jednocześnie nie będzie wczytany plik <strong>mobile.css</strong></li>\r\n	<li><strong>Smartphones</strong> - widżet wyświetli się tylko wtedy kiedy wczytany będzie plik <strong>mobile.css</strong>.</li>\r\n	<li><strong>Tablets/Smartphones</strong> - widżet wyświetli się gdy wczytany będzie co najmniej jeden z plików <strong>tablet.css</strong> lub <strong>mobile.css</strong>.</li>\r\n</ul>\r\nDzięki tym ustawieniom można znacząco ograniczyć ilość treści wyświetlanych na urządzeniach o małych ekranach.\r\n\r\nOpcja wyświetlania widżetu dla wybranych grup użytkowników posiada cztery opcje do wyboru:\r\n<ul>\r\n	<li><strong>All users</strong> - widżet pojawi się wszystkim użytkownikom</li>\r\n	<li><strong>Only guests</strong> - widżet pojawi się tylko niezalogowanym użytkownikom</li>\r\n	<li><strong>Only registered users</strong> - widżet pojawi się tylko zalogowanym użytkownikom</li>\r\n	<li><strong>Only administrator</strong> - widżet pojawi się tylko administratorom</li>\r\n</ul>\r\nDzięki tej opcji można np. wyświetlać określone wiadomości poprzeż użycie widżetów przeznaczone dla wybranej grupy użytkowników.\r\n\r\nOstatnią opcję składającą się na widget rules stanowi opcja wyboru stylu widżetu - powoduje ona dopisanie do głównego kontenera widżetu dodatkowej klasy nadającej określone przez użytkownika stylowanie.\r\n\r\nStyle widżetów zdefiniowane są w pliku widget.styles.json oraz w kodzie CSS - w tym wypadku w <strong>css/wp.extensions.css</strong>.', 'Widget rules', '', 'inherit', 'open', 'open', '', '370-revision-5', '', '', '2012-07-23 09:56:53', '2012-07-23 09:56:53', '', 370, 'http://wp1/uncategorized/370-revision-5/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(474, 1, '2012-07-23 11:08:54', '2012-07-23 11:08:54', 'Widget rules is a mechanism which introduces a completely new way to manage widgets on a website. Thanks to it, it is possible to specify widget features such as:\r\n<ul>\r\n	<li>displaying on subpages chosen,</li>\r\n	<li>displaying on devices chosen,</li>\r\n	<li>displaying for a group of users chosen,</li>\r\n	<li>displaying with a widget style use chosen.</li>\r\n</ul>\r\nAfter switching on widget rules in template''s advanced settings, under each widget, the following options should be displayed:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-371" title="Widgets ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="258" height="200" /></a>\r\n\r\nThe most extensive options are those connected with a widget visibility on subpages chosen - after choosing an option to show a widget on pages chosen (or an option not showing a widget on pages chosen), such a panel will appear:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg"><img class="aligncenter size-full wp-image-372" title="Widgets ‹ Meet Gavern WP — WordPress-1-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg" alt="" width="240" height="203" /></a>\r\n\r\nThen, you have to choose a page''s type to add, e.g. Category, and then give category ID:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg"><img class="aligncenter size-full wp-image-373" title="Widgets ‹ Meet Gavern WP — WordPress-2" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg" alt="" width="242" height="216" /></a>\r\n\r\nAfter clicking "Add page" button, a page will appear on a list of pages chosen on which in our case a widget will be displayed:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-374" title="Widgets ‹ Meet Gavern WP — WordPress-3" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="233" height="77" /></a>\r\n\r\nOf course, it is possible to add more pages:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-375" title="Widgets ‹ Meet Gavern WP — WordPress-4" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="230" height="100" /></a>\r\n\r\nTo make it clearer, , each page''s type is displayed with a different color. A page added can be removed by clicking a removing icon placed on the right side of each page.\r\n\r\nIn this way, you may set a widget so as to be shown on pages chosen or to be shown on all pages except the chosen ones.\r\n\r\nGenerally, widgets are shown on all pages.\r\n\r\nAn option of displaying a widget on devices chosen has five options to choose:\r\n<ul>\r\n	<li><strong>All devices</strong> - a widget will be displayed everytwhere - on every device</li>\r\n	<li><strong>Desktop</strong> - a widget will be displayed only when neither a <strong>tablet.css</strong> file nor a <strong>mobile.css</strong> is loaded <strong></strong></li>\r\n	<li><strong>Tablets</strong> - a widget displays only when a <strong>tablet.css</strong> file will be loaded and, at the same time, a <strong>mobile.css</strong> file will not be loaded <strong></strong></li>\r\n	<li><strong>Smartphones</strong> - a widget will be displayed only when a <strong>mobile.css</strong> file will be loaded</li>\r\n	<li><strong>Tablets/Smartphones</strong> - a widget will be displayed when at least one file will be loaded: <strong>tablet.css</strong> or <strong>mobile.css</strong>.</li>\r\n</ul>\r\nDzięki tym ustawieniom można znacząco ograniczyć ilość treści wyświetlanych na urządzeniach o małych ekranach.\r\n\r\nOpcja wyświetlania widżetu dla wybranych grup użytkowników posiada cztery opcje do wyboru:\r\n<ul>\r\n	<li><strong>All users</strong> - widżet pojawi się wszystkim użytkownikom</li>\r\n	<li><strong>Only guests</strong> - widżet pojawi się tylko niezalogowanym użytkownikom</li>\r\n	<li><strong>Only registered users</strong> - widżet pojawi się tylko zalogowanym użytkownikom</li>\r\n	<li><strong>Only administrator</strong> - widżet pojawi się tylko administratorom</li>\r\n</ul>\r\nDzięki tej opcji można np. wyświetlać określone wiadomości poprzeż użycie widżetów przeznaczone dla wybranej grupy użytkowników.\r\n\r\nOstatnią opcję składającą się na widget rules stanowi opcja wyboru stylu widżetu - powoduje ona dopisanie do głównego kontenera widżetu dodatkowej klasy nadającej określone przez użytkownika stylowanie.\r\n\r\nStyle widżetów zdefiniowane są w pliku widget.styles.json oraz w kodzie CSS - w tym wypadku w <strong>css/wp.extensions.css</strong>.', 'Widget rules', '', 'inherit', 'open', 'open', '', '370-revision-6', '', '', '2012-07-23 11:08:54', '2012-07-23 11:08:54', '', 370, 'http://wp1/uncategorized/370-revision-6/', 0, 'revision', '', 0),
(475, 1, '2012-07-11 13:32:57', '2012-07-11 13:32:57', 'GavernWP udostępnia opcje pozwalające na branding szablonu. Opcje brandingu podzielone są na dwie grupy:\r\n<ul>\r\n	<li>branding szablonu</li>\r\n	<li>branding panelu administracyjnego</li>\r\n</ul>\r\nDzięki opcjom brandingu szablonu użytkownik może określić:\r\n<ul>\r\n	<li>logo strony</li>\r\n	<li>treść stopki szablonu</li>\r\n	<li>zdecydować o wyświetlaniu loga frameworka pod stopką strony</li>\r\n</ul>\r\nWięcej o opcjach brandingu dla szablonu znajduje się we wpisie poświęconym zakładce "Template branding" w panelu administracyjnym.\r\n\r\nOpcje brandingu panelu administracyjnego pozwalają na zdefiniowanie:\r\n<ul>\r\n	<li>loga wyświetlanego obok nazwy szablonu w sidebarze panelu administracyjnego</li>\r\n	<li>loga widocznego nad formularzem logowania do panelu administracyjnego</li>\r\n</ul>\r\nWięcej o opcjach brandingu dla panelu administracyjnego znajduje się we wpisie poświęconym zakładce "Back-end branding" w panelu administracyjnym.', 'Branding', '', 'inherit', 'open', 'open', '', '377-revision-2', '', '', '2012-07-11 13:32:57', '2012-07-11 13:32:57', '', 377, 'http://wp1/uncategorized/377-revision-2/', 0, 'revision', '', 0),
(476, 1, '2012-07-11 13:44:19', '2012-07-11 13:44:19', 'GavernWP posiada podstawowe wsparcie dla nowej opcji dostępnej w Wordpress 3.4 - edytora opcji z podglądem szablonu. Obecnie w live editor zaimplementowano najważniejsze opcje związane ze stylem szablonu i jego układem.\r\n\r\nAby można było łatwiej dostać się do tego edytora umieściliśmy w górnej części opcji szablonu bezpośredni link do edytora:\r\n\r\n[screenshot]\r\n\r\nWszystkie opcje zawarte w tym edytorze dostępne są również poprzez tradycyjny panel opcji szablonu.\r\n\r\nAby ułatwić dodawanie własnych opcji do live editor cały kod generujący opcje umieszczono w oddzielnym pliku <strong>gavern/helpers/helpers.customizer.php</strong>.\r\n\r\nNależy pamiętać, że wszystkie opcje i ustawienia z live editor są przechowywane w tym samym miejscu co ich odpowiedniki z panelu admistracyjnego zatem zmiana ustawień z użyciem live editor pociąga za sobą zmiany w zwykłym panelu opcji. Dlatego też zalecane jest nie uruchamianie w tym samym momencie tradycyjnego panelu administracyjnego szablonu i live editor, gdyż może zaistnieć sytuacja gdy zapis opcji w obu miejscach naraz o różnych wartościach dla tego samego parametru da rezultat inny niż oczekiwany.', 'Theme live editor', '', 'inherit', 'open', 'open', '', '380-revision-2', '', '', '2012-07-11 13:44:19', '2012-07-11 13:44:19', '', 380, 'http://wp1/uncategorized/380-revision-2/', 0, 'revision', '', 0),
(477, 1, '2012-07-11 13:50:49', '2012-07-11 13:50:49', 'GavernWP posiada sekcję aktualizacji, która pozwala na dostęp do informacji o tym czy szablon jest zaktualizowany do ostatniej wersji. Aby dostać się do panelu aktualizacji należy skorzystać z subemnu "Updates" menu głównego opcji szablonu:\r\n\r\n[screenshot]\r\n\r\nJeżeli nasz szablon jest nieaktualny, pojawi się nam lista aktualizacji, które są nowsze niż nasza wersja szablonu:\r\n\r\n[screenshot]\r\n\r\nNatomiast gdy nasz szablon jest w najnowszej wersji, ujrzymy stosowny komunikat o tym, że szablon nie posiada żadnych nowych aktualizacji do pobrania:\r\n\r\n[screenshot]\r\n\r\nWarto też pamiętać, że darmowy szablon MeetGavernWP jest dostępny poprzez publiczne repozytorium w serwisie github, co pozwala na łatwą analizę zmian wprowadzanych w poszczególnych plikach. W wypadku szablonów komercyjnych do porównywania zmian w plikach zalecane jest wykorzystanie narzędzi typu WinMerge (Windows) lub File Merge (MacOS X). Każda aktualizacja w naszym systemie aktualizacji posiada informację o liście zmodyfikowanych plików. Ogólnie zalecane jest porównywanie tylko tych plików, które sami ręcznie modyfikowaliśmy po pobraniu szablonu.', 'Updates', '', 'inherit', 'open', 'open', '', '382-revision-2', '', '', '2012-07-11 13:50:49', '2012-07-11 13:50:49', '', 382, 'http://wp1/uncategorized/382-revision-2/', 0, 'revision', '', 0),
(478, 1, '2012-07-25 09:44:52', '2012-07-25 09:44:52', 'GavernWP has an update section which allows to access information whether a template was updated to the latest version. In order to access an updates panel, you have to use "Updates" submenu from a main menu of template''s options:\r\n\r\n[screenshot]\r\n\r\nIf a template was not updatedJeżeli nasz szablon jest nieaktualny, pojawi się nam lista aktualizacji, które są nowsze niż nasza wersja szablonu:\r\n\r\n[screenshot]\r\n\r\nNatomiast gdy nasz szablon jest w najnowszej wersji, ujrzymy stosowny komunikat o tym, że szablon nie posiada żadnych nowych aktualizacji do pobrania:\r\n\r\n[screenshot]\r\n\r\nWarto też pamiętać, że darmowy szablon MeetGavernWP jest dostępny poprzez publiczne repozytorium w serwisie github, co pozwala na łatwą analizę zmian wprowadzanych w poszczególnych plikach. W wypadku szablonów komercyjnych do porównywania zmian w plikach zalecane jest wykorzystanie narzędzi typu WinMerge (Windows) lub File Merge (MacOS X). Każda aktualizacja w naszym systemie aktualizacji posiada informację o liście zmodyfikowanych plików. Ogólnie zalecane jest porównywanie tylko tych plików, które sami ręcznie modyfikowaliśmy po pobraniu szablonu.', 'Updates', '', 'inherit', 'open', 'open', '', '382-revision-3', '', '', '2012-07-25 09:44:52', '2012-07-25 09:44:52', '', 382, 'http://wp1/uncategorized/382-revision-3/', 0, 'revision', '', 0),
(479, 1, '2012-07-11 13:59:23', '2012-07-11 13:59:23', 'Czasem spotykamy się z sytuacją kiedy to musimy skopiować konfigurację z jednej instalacji szablonu do innej. Aby ułatwić to zadanie GavernWP został wyposażony w opcje importu i eksportu ustawień szablonu dostępne w zakładce "Import/Export" menu głównego szablonu:\r\n\r\n[screenshot]\r\n\r\nPo wejściu na stronę tych ustawień ujrzymy następujący formularz:\r\n\r\n[screenshot]\r\n\r\nAby wyeksportować ustawienia wystarczy skopiować tekst z pola "Export" i skopiować go do pola "Import" w innym szablonie.\r\n\r\n<strong>Uwaga!</strong> Eksportując ustawienia należy pamiętać, że możliwe jest jedynie kopiowanie ustawień pomiędzy tymi samymi szablonami.\r\n\r\nUstawienia szablonu dostępne są w czytelnym dla człowieka formacie JSON, zatem można te ustawienia zapisać do pliku a następnie zmodyfikować je ręcznie przed wgraniem do innego szablonu.\r\n\r\n<strong>Wskazówka:</strong> zalecamy wykonanie co jakiś czas zrzutu ustawień szablonu, dzięki temu można zabezpieczyć się przed niepożądanymi efektami większych zmian w konfiguracji szablonu. Takie zrzuty ustawień powinny być zapisane w pliku posiadającym w nazwię datę wykonania zrzutu np. <strong>meetgavernwp_backup_30_07_2012.json</strong>.', 'Import/Export settings', '', 'inherit', 'open', 'open', '', '384-revision-2', '', '', '2012-07-11 13:59:23', '2012-07-11 13:59:23', '', 384, 'http://wp1/uncategorized/384-revision-2/', 0, 'revision', '', 0),
(480, 1, '2012-07-25 10:14:47', '2012-07-25 10:14:47', 'Sometimes, there is a situation when you have to copy a configuration from one installation to another one. In order to simplify it, GavernWP has been equipped with import and export options of template''s settings in "Import/Export" tab of a template''s main menu:\r\n\r\n[screenshot]\r\n\r\nAfter Po wejściu na stronę tych ustawień ujrzymy następujący formularz:\r\n\r\n[screenshot]\r\n\r\nAby wyeksportować ustawienia wystarczy skopiować tekst z pola "Export" i skopiować go do pola "Import" w innym szablonie.\r\n\r\n<strong>Uwaga!</strong> Eksportując ustawienia należy pamiętać, że możliwe jest jedynie kopiowanie ustawień pomiędzy tymi samymi szablonami.\r\n\r\nUstawienia szablonu dostępne są w czytelnym dla człowieka formacie JSON, zatem można te ustawienia zapisać do pliku a następnie zmodyfikować je ręcznie przed wgraniem do innego szablonu.\r\n\r\n<strong>Wskazówka:</strong> zalecamy wykonanie co jakiś czas zrzutu ustawień szablonu, dzięki temu można zabezpieczyć się przed niepożądanymi efektami większych zmian w konfiguracji szablonu. Takie zrzuty ustawień powinny być zapisane w pliku posiadającym w nazwię datę wykonania zrzutu np. <strong>meetgavernwp_backup_30_07_2012.json</strong>.', 'Import/Export settings', '', 'inherit', 'open', 'open', '', '384-revision-3', '', '', '2012-07-25 10:14:47', '2012-07-25 10:14:47', '', 384, 'http://wp1/uncategorized/384-revision-3/', 0, 'revision', '', 0),
(481, 1, '2012-07-25 10:41:36', '2012-07-25 10:41:36', 'Sometimes, there is a situation when you have to copy a configuration from one installation to another one. In order to simplify it, GavernWP has been equipped with import and export options of template''s settings in "Import/Export" tab of a template''s main menu:\r\n\r\n[screenshot]\r\n\r\nAfter entering a page of these settings, you will see the following form:\r\n\r\n[screenshot]\r\n\r\nIn order to export settings, it is enough to copy a text from an "Export" field and copy it to an "Import" field in a different template.\r\n\r\nAby wyeksportować ustawienia wystarczy skopiować tekst z pola "Export" i skopiować go do pola "Import" w innym szablonie.\r\n\r\n<strong>Uwaga!</strong> Eksportując ustawienia należy pamiętać, że możliwe jest jedynie kopiowanie ustawień pomiędzy tymi samymi szablonami.\r\n\r\nUstawienia szablonu dostępne są w czytelnym dla człowieka formacie JSON, zatem można te ustawienia zapisać do pliku a następnie zmodyfikować je ręcznie przed wgraniem do innego szablonu.\r\n\r\n<strong>Wskazówka:</strong> zalecamy wykonanie co jakiś czas zrzutu ustawień szablonu, dzięki temu można zabezpieczyć się przed niepożądanymi efektami większych zmian w konfiguracji szablonu. Takie zrzuty ustawień powinny być zapisane w pliku posiadającym w nazwię datę wykonania zrzutu np. <strong>meetgavernwp_backup_30_07_2012.json</strong>.', 'Import/Export settings', '', 'inherit', 'open', 'open', '', '384-revision-4', '', '', '2012-07-25 10:41:36', '2012-07-25 10:41:36', '', 384, 'http://wp1/uncategorized/384-revision-4/', 0, 'revision', '', 0),
(482, 1, '2012-07-25 10:55:14', '2012-07-25 10:55:14', 'Sometimes, there is a situation when you have to copy a configuration from one installation to another one. In order to simplify it, GavernWP has been equipped with import and export options of template''s settings in "Import/Export" tab of a template''s main menu:\r\n\r\n[screenshot]\r\n\r\nAfter entering a page of these settings, you will see the following form:\r\n\r\n[screenshot]\r\n\r\nIn order to export settings, it is enough to copy a text from an "Export" field and copy it to an "Import" field in a different template.\r\n\r\n&nbsp;\r\n\r\n<strong>Uwaga!</strong> Eksportując ustawienia należy pamiętać, że możliwe jest jedynie kopiowanie ustawień pomiędzy tymi samymi szablonami.\r\n\r\nUstawienia szablonu dostępne są w czytelnym dla człowieka formacie JSON, zatem można te ustawienia zapisać do pliku a następnie zmodyfikować je ręcznie przed wgraniem do innego szablonu.\r\n\r\n<strong>Wskazówka:</strong> zalecamy wykonanie co jakiś czas zrzutu ustawień szablonu, dzięki temu można zabezpieczyć się przed niepożądanymi efektami większych zmian w konfiguracji szablonu. Takie zrzuty ustawień powinny być zapisane w pliku posiadającym w nazwię datę wykonania zrzutu np. <strong>meetgavernwp_backup_30_07_2012.json</strong>.', 'Import/Export settings', '', 'inherit', 'open', 'open', '', '384-revision-5', '', '', '2012-07-25 10:55:14', '2012-07-25 10:55:14', '', 384, 'http://wp1/uncategorized/384-revision-5/', 0, 'revision', '', 0),
(483, 1, '2012-07-25 11:22:52', '2012-07-25 11:22:52', 'Sometimes, there is a situation when you have to copy a configuration from one installation to another one. In order to simplify it, GavernWP has been equipped with import and export options of template''s settings in "Import/Export" tab of a template''s main menu:\r\n\r\n[screenshot]\r\n\r\nAfter entering a page of these settings, you will see the following form:\r\n\r\n[screenshot]\r\n\r\nIn order to export settings, it is enough to copy a text from an "Export" field and copy it to an "Import" field in a different template.\r\n\r\n<strong>Note!</strong> While exporting settings, you have to remember that it is possible to copy settings between the same templates.\r\nTemplate''s settings are available in JSON format, so it is possible to save these settings to a file and then modify them manually before loading to a different template.\r\n\r\nTip: we recommend\r\n\r\n<strong>Wskazówka:</strong> zalecamy wykonanie co jakiś czas zrzutu ustawień szablonu, dzięki temu można zabezpieczyć się przed niepożądanymi efektami większych zmian w konfiguracji szablonu. Takie zrzuty ustawień powinny być zapisane w pliku posiadającym w nazwię datę wykonania zrzutu np. <strong>meetgavernwp_backup_30_07_2012.json</strong>.', 'Import/Export settings', '', 'inherit', 'open', 'open', '', '384-revision-6', '', '', '2012-07-25 11:22:52', '2012-07-25 11:22:52', '', 384, 'http://wp1/uncategorized/384-revision-6/', 0, 'revision', '', 0),
(484, 1, '2012-07-11 14:52:14', '2012-07-11 14:52:14', 'Dla ułatwienia wykorzystania shortcodes dostępnych w szablonach opartych o framework GavernWP zaimplementowano przycisk od typografii szablonu dostępny w edytorze postów:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg"><img class="aligncenter size-full wp-image-387" title="Add New Post ‹ Meet Gavern WP — WordPress" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg" alt="" width="308" height="107" /></a>\r\n\r\nKlikając na ten przycisk ujrzymy listę dostępnych elementów typografii:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-388" title="Add New Post ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="251" height="369" /></a>\r\n\r\nDla większości elementów można wybrać wersję z określoną stylistyką. Po wybraniu konkretnego stylu pojawi się kod shortcode, który zostanie zamieniony w treści wpisu przez skrypty na konkretną strukturę ostylowaną w dany sposób.\r\n\r\nNależy zwrócić uwagę na fakt, że dodanie nowego kodu Shortcode wymaga trzech operacji:\r\n<ul>\r\n	<li>dodania wpisu w pliku konfiguracyjnym shortcodes.js</li>\r\n	<li>dodania kodu PHP obsługującego dany shortcode</li>\r\n	<li>dodania opcjonalnego kodu CSS i JavaScript (o ile wymaga tego dany shortcode)</li>\r\n</ul>\r\nPlik <strong>shortcodes.js</strong> w katalogu <strong>config</strong> zawiera wpisy, które są zamieniane na strukturę menu widocznego po kliknięciu w przycisk typografii - zawiera on zmienną <strong>$GAVERNWP_SHORTCODES</strong>, która jest tablicą zawierającą obiekty reprezentujące elementy menu wyboru. Każdy obiekt posiada trzy właściwości: <strong>title</strong>, <strong>code</strong> oraz <strong>submenu</strong>. Omówmy tą strukturę na przykładzie pozycji <strong>Highlight</strong>:\r\n\r\n[code]{\r\n\r\n"title": "Highlight",\r\n"code": "[highlight]Your text[/highlight]",\r\n"submenu": [\r\n{\r\n"title": "Style I",\r\n"code": "[highlight style=\\"1\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style II",\r\n"code": "[highlight style=\\"2\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style III",\r\n"code": "[highlight style=\\"3\\"]Your text[/highlight]"\r\n}\r\n]\r\n},[/code]\r\n<ul>\r\n	<li><strong>title</strong> - zawiera nazwę pozycji menu wyświetlaną przez skrypt</li>\r\n	<li><strong>code</strong> - jest to kod shortcode, który zostanie dodany do wpisu w momencie kliknięcia danej pozycji menu - należy pamiętać, że nie wszystkie pozycje menu na pierwszym poziomie posiadają wartość w tym polu - jeżeli jest ona pustym ciągiem znaków oznacza to dla skryptu, że kliknięcie w daną pozycję menu ma nie wywoływać żadnej akcji.</li>\r\n	<li><strong>submenu</strong> - jest to tablica podmenu danej pozycji menu. Każda pozycja podmenu jest zbudowana tak samo jak pozycje menu na pierwszym poziomie, z tą różnicą, że podmenu nie może mieć kolejnego podmenu, zatem nie dodajemy w obiekcie podmenu właściwości <strong>submenu</strong>.</li>\r\n</ul>\r\nPrzyjmijmy, że dodaliśmy już nasz shortcode do przycisku typografii korzystając z pliku shortcodes.js. Pozostaje nam kwestia obsługi naszego shortcode po stronie szablonu.\r\n\r\nW tym celu należy otworzyć plik<strong> gavern/helpers/helpers.shortcodes.php</strong>.\r\n\r\nPlik ten jest podzielony na trzy główne sekcje zaczynające się od linijek podobnych do:\r\n\r\n[code]if(get_option($tpl-&gt;name . ''_shortcodes1_state'', ''Y'') == ''Y'') {[/code]\r\n\r\nJest to instrukcja warunkowa IF związana z daną grupą elementów typografii. Gavern zawiera trzy takie grupy:\r\n<ul>\r\n	<li>elementy typografii - funkcje z nią związane mają prefiks <strong>gavern_ts_</strong> w nazwie</li>\r\n	<li>elementy interaktywne - funkcje z nią związane mają prefiks <strong>gavern_ies_</strong> w nazwie</li>\r\n	<li>elementy chrakterystyczne dla danego szablonu - funkcje z nią związane mają prefiks <strong>gavern_tss_</strong> w nazwie</li>\r\n</ul>\r\nNowe elementy typografii zalecamy dodawać w tej ostatniej grupie - w szablonie Meet GavernWPdomyślnie jest ona pusta. Zalecamy pamiętać o zastosowaniu stosownego dla danej grupy prefiksu w nazwie funkcji np. w wypadku trzeciej grupy będzie to <strong>gavern_tss_</strong>. Sam kod danego Shortcode należy tworzyć według wytycznych opisanych w <a href="http://codex.wordpress.org/Shortcode_API">Shortcode API</a>.\r\n\r\nOstatni krok jest opcjonalny i zależny od typu naszego Shortcode. Jeżeli nasz Shortcode wymaga dodatkowego kod CSS lub JavaScript należy zdefiniować go w plikach <strong>shortcodes.*.css</strong> i <strong>shortcodes.*.js</strong>, gdzie <strong>*</strong> oznacza nazwę grupy do której przypisaliśmy dany Shortcode.\r\n\r\nJest bardzo ważne, by umieścić elementy kodu CSS i JavaScript w odpowiednim pliku, gdyż umożliwi to optymalizację kodu całego szablonu w momencie wyłączenia z użytkowania danej grupy kodów Shortcodes.', 'Typography button', '', 'inherit', 'open', 'open', '', '386-revision-2', '', '', '2012-07-11 14:52:14', '2012-07-11 14:52:14', '', 386, 'http://wp1/uncategorized/386-revision-2/', 0, 'revision', '', 0),
(485, 1, '2012-07-25 12:52:08', '2012-07-25 12:52:08', 'For simplifying shortcodes use available in templates based on GavernWP framework, a button for template''s typography has been implemented which is available in a posts editor:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg"><img class="aligncenter size-full wp-image-387" title="Add New Post ‹ Meet Gavern WP — WordPress" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg" alt="" width="308" height="107" /></a>\r\n\r\nBy clicking this button, you will see a list of available typography elements:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-388" title="Add New Post ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="251" height="369" /></a>\r\n\r\nIt is possible to choose a version with a stylistic specified for the majority of elements. After choosing a particular style, a shortcode will appear which will be replaced in entry content\r\n\r\nDla większości elementów można wybrać wersję z określoną stylistyką. Po wybraniu konkretnego stylu pojawi się kod shortcode, który zostanie zamieniony w treści wpisu przez skrypty na konkretną strukturę ostylowaną w dany sposób.\r\n\r\nNależy zwrócić uwagę na fakt, że dodanie nowego kodu Shortcode wymaga trzech operacji:\r\n<ul>\r\n	<li>dodania wpisu w pliku konfiguracyjnym shortcodes.js</li>\r\n	<li>dodania kodu PHP obsługującego dany shortcode</li>\r\n	<li>dodania opcjonalnego kodu CSS i JavaScript (o ile wymaga tego dany shortcode)</li>\r\n</ul>\r\nPlik <strong>shortcodes.js</strong> w katalogu <strong>config</strong> zawiera wpisy, które są zamieniane na strukturę menu widocznego po kliknięciu w przycisk typografii - zawiera on zmienną <strong>$GAVERNWP_SHORTCODES</strong>, która jest tablicą zawierającą obiekty reprezentujące elementy menu wyboru. Każdy obiekt posiada trzy właściwości: <strong>title</strong>, <strong>code</strong> oraz <strong>submenu</strong>. Omówmy tą strukturę na przykładzie pozycji <strong>Highlight</strong>:\r\n\r\n[code]{\r\n\r\n"title": "Highlight",\r\n"code": "[highlight]Your text[/highlight]",\r\n"submenu": [\r\n{\r\n"title": "Style I",\r\n"code": "[highlight style=\\"1\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style II",\r\n"code": "[highlight style=\\"2\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style III",\r\n"code": "[highlight style=\\"3\\"]Your text[/highlight]"\r\n}\r\n]\r\n},[/code]\r\n<ul>\r\n	<li><strong>title</strong> - zawiera nazwę pozycji menu wyświetlaną przez skrypt</li>\r\n	<li><strong>code</strong> - jest to kod shortcode, który zostanie dodany do wpisu w momencie kliknięcia danej pozycji menu - należy pamiętać, że nie wszystkie pozycje menu na pierwszym poziomie posiadają wartość w tym polu - jeżeli jest ona pustym ciągiem znaków oznacza to dla skryptu, że kliknięcie w daną pozycję menu ma nie wywoływać żadnej akcji.</li>\r\n	<li><strong>submenu</strong> - jest to tablica podmenu danej pozycji menu. Każda pozycja podmenu jest zbudowana tak samo jak pozycje menu na pierwszym poziomie, z tą różnicą, że podmenu nie może mieć kolejnego podmenu, zatem nie dodajemy w obiekcie podmenu właściwości <strong>submenu</strong>.</li>\r\n</ul>\r\nPrzyjmijmy, że dodaliśmy już nasz shortcode do przycisku typografii korzystając z pliku shortcodes.js. Pozostaje nam kwestia obsługi naszego shortcode po stronie szablonu.\r\n\r\nW tym celu należy otworzyć plik<strong> gavern/helpers/helpers.shortcodes.php</strong>.\r\n\r\nPlik ten jest podzielony na trzy główne sekcje zaczynające się od linijek podobnych do:\r\n\r\n[code]if(get_option($tpl-&gt;name . ''_shortcodes1_state'', ''Y'') == ''Y'') {[/code]\r\n\r\nJest to instrukcja warunkowa IF związana z daną grupą elementów typografii. Gavern zawiera trzy takie grupy:\r\n<ul>\r\n	<li>elementy typografii - funkcje z nią związane mają prefiks <strong>gavern_ts_</strong> w nazwie</li>\r\n	<li>elementy interaktywne - funkcje z nią związane mają prefiks <strong>gavern_ies_</strong> w nazwie</li>\r\n	<li>elementy chrakterystyczne dla danego szablonu - funkcje z nią związane mają prefiks <strong>gavern_tss_</strong> w nazwie</li>\r\n</ul>\r\nNowe elementy typografii zalecamy dodawać w tej ostatniej grupie - w szablonie Meet GavernWPdomyślnie jest ona pusta. Zalecamy pamiętać o zastosowaniu stosownego dla danej grupy prefiksu w nazwie funkcji np. w wypadku trzeciej grupy będzie to <strong>gavern_tss_</strong>. Sam kod danego Shortcode należy tworzyć według wytycznych opisanych w <a href="http://codex.wordpress.org/Shortcode_API">Shortcode API</a>.\r\n\r\nOstatni krok jest opcjonalny i zależny od typu naszego Shortcode. Jeżeli nasz Shortcode wymaga dodatkowego kod CSS lub JavaScript należy zdefiniować go w plikach <strong>shortcodes.*.css</strong> i <strong>shortcodes.*.js</strong>, gdzie <strong>*</strong> oznacza nazwę grupy do której przypisaliśmy dany Shortcode.\r\n\r\nJest bardzo ważne, by umieścić elementy kodu CSS i JavaScript w odpowiednim pliku, gdyż umożliwi to optymalizację kodu całego szablonu w momencie wyłączenia z użytkowania danej grupy kodów Shortcodes.', 'Typography button', '', 'inherit', 'open', 'open', '', '386-revision-3', '', '', '2012-07-25 12:52:08', '2012-07-25 12:52:08', '', 386, 'http://wp1/uncategorized/386-revision-3/', 0, 'revision', '', 0),
(486, 1, '2012-07-25 13:14:17', '2012-07-25 13:14:17', 'For simplifying shortcodes use available in templates based on GavernWP framework, a button for template''s typography has been implemented which is available in a posts editor:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg"><img class="aligncenter size-full wp-image-387" title="Add New Post ‹ Meet Gavern WP — WordPress" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg" alt="" width="308" height="107" /></a>\r\n\r\nBy clicking this button, you will see a list of available typography elements:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-388" title="Add New Post ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="251" height="369" /></a>\r\n\r\nIt is possible to choose a version with a stylistic specified for the majority of elements. After choosing a particular style, a shortcode will appear which will be replaced in entry content\r\n\r\nDla większości elementów można wybrać wersję z określoną stylistyką. Po wybraniu konkretnego stylu pojawi się kod shortcode, który zostanie zamieniony w treści wpisu przez skrypty na konkretną strukturę ostylowaną w dany sposób.\r\n\r\nNależy zwrócić uwagę na fakt, że dodanie nowego kodu Shortcode wymaga trzech operacji:\r\n<ul>\r\n	<li>dodania wpisu w pliku konfiguracyjnym shortcodes.js</li>\r\n	<li>dodania kodu PHP obsługującego dany shortcode</li>\r\n	<li>dodania opcjonalnego kodu CSS i JavaScript (o ile wymaga tego dany shortcode)</li>\r\n</ul>\r\nPlik <strong>shortcodes.js</strong> w katalogu <strong>config</strong> zawiera wpisy, które są zamieniane na strukturę menu widocznego po kliknięciu w przycisk typografii - zawiera on zmienną <strong>$GAVERNWP_SHORTCODES</strong>, która jest tablicą zawierającą obiekty reprezentujące elementy menu wyboru. Każdy obiekt posiada trzy właściwości: <strong>title</strong>, <strong>code</strong> oraz <strong>submenu</strong>. Omówmy tą strukturę na przykładzie pozycji <strong>Highlight</strong>:\r\n\r\n[code]{\r\n\r\n"title": "Highlight",\r\n"code": "[highlight]Your text[/highlight]",\r\n"submenu": [\r\n{\r\n"title": "Style I",\r\n"code": "[highlight style=\\"1\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style II",\r\n"code": "[highlight style=\\"2\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style III",\r\n"code": "[highlight style=\\"3\\"]Your text[/highlight]"\r\n}\r\n]\r\n},[/code]\r\n<ul>\r\n	<li><strong>title</strong> - zawiera nazwę pozycji menu wyświetlaną przez skrypt</li>\r\n	<li><strong>code</strong> - jest to kod shortcode, który zostanie dodany do wpisu w momencie kliknięcia danej pozycji menu - należy pamiętać, że nie wszystkie pozycje menu na pierwszym poziomie posiadają wartość w tym polu - jeżeli jest ona pustym ciągiem znaków oznacza to dla skryptu, że kliknięcie w daną pozycję menu ma nie wywoływać żadnej akcji.</li>\r\n	<li><strong>submenu</strong> - jest to tablica podmenu danej pozycji menu. Każda pozycja podmenu jest zbudowana tak samo jak pozycje menu na pierwszym poziomie, z tą różnicą, że podmenu nie może mieć kolejnego podmenu, zatem nie dodajemy w obiekcie podmenu właściwości <strong>submenu</strong>.</li>\r\n</ul>\r\nPrzyjmijmy, że dodaliśmy już nasz shortcode do przycisku typografii korzystając z pliku shortcodes.js. Pozostaje nam kwestia obsługi naszego shortcode po stronie szablonu.\r\n\r\nW tym celu należy otworzyć plik<strong> gavern/helpers/helpers.shortcodes.php</strong>.\r\n\r\nPlik ten jest podzielony na trzy główne sekcje zaczynające się od linijek podobnych do:\r\n\r\n[code]if(get_option($tpl-&gt;name . ''_shortcodes1_state'', ''Y'') == ''Y'') {[/code]\r\n\r\nJest to instrukcja warunkowa IF związana z daną grupą elementów typografii. Gavern zawiera trzy takie grupy:\r\n<ul>\r\n	<li>elementy typografii - funkcje z nią związane mają prefiks <strong>gavern_ts_</strong> w nazwie</li>\r\n	<li>elementy interaktywne - funkcje z nią związane mają prefiks <strong>gavern_ies_</strong> w nazwie</li>\r\n	<li>elementy chrakterystyczne dla danego szablonu - funkcje z nią związane mają prefiks <strong>gavern_tss_</strong> w nazwie</li>\r\n</ul>\r\nNowe elementy typografii zalecamy dodawać w tej ostatniej grupie - w szablonie Meet GavernWPdomyślnie jest ona pusta. Zalecamy pamiętać o zastosowaniu stosownego dla danej grupy prefiksu w nazwie funkcji np. w wypadku trzeciej grupy będzie to <strong>gavern_tss_</strong>. Sam kod danego Shortcode należy tworzyć według wytycznych opisanych w <a href="http://codex.wordpress.org/Shortcode_API">Shortcode API</a>.\r\n\r\nOstatni krok jest opcjonalny i zależny od typu naszego Shortcode. Jeżeli nasz Shortcode wymaga dodatkowego kod CSS lub JavaScript należy zdefiniować go w plikach <strong>shortcodes.*.css</strong> i <strong>shortcodes.*.js</strong>, gdzie <strong>*</strong> oznacza nazwę grupy do której przypisaliśmy dany Shortcode.\r\n\r\nJest bardzo ważne, by umieścić elementy kodu CSS i JavaScript w odpowiednim pliku, gdyż umożliwi to optymalizację kodu całego szablonu w momencie wyłączenia z użytkowania danej grupy kodów Shortcodes.', 'Typography button', '', 'inherit', 'open', 'open', '', '386-revision-4', '', '', '2012-07-25 13:14:17', '2012-07-25 13:14:17', '', 386, 'http://wp1/uncategorized/386-revision-4/', 0, 'revision', '', 0),
(487, 1, '2012-07-23 13:32:29', '2012-07-23 13:32:29', 'GavernWP has basic support for a new option available in Wordpress 3.4 - an options editor with templates preview. posiada podstawowe wsparcie dla nowej opcji dostępnej w Wordpress 3.4 - edytora opcji z podglądem szablonu. Obecnie w live editor zaimplementowano najważniejsze opcje związane ze stylem szablonu i jego układem.\r\n\r\nAby można było łatwiej dostać się do tego edytora umieściliśmy w górnej części opcji szablonu bezpośredni link do edytora:\r\n\r\n[screenshot]\r\n\r\nWszystkie opcje zawarte w tym edytorze dostępne są również poprzez tradycyjny panel opcji szablonu.\r\n\r\nAby ułatwić dodawanie własnych opcji do live editor cały kod generujący opcje umieszczono w oddzielnym pliku <strong>gavern/helpers/helpers.customizer.php</strong>.\r\n\r\nNależy pamiętać, że wszystkie opcje i ustawienia z live editor są przechowywane w tym samym miejscu co ich odpowiedniki z panelu admistracyjnego zatem zmiana ustawień z użyciem live editor pociąga za sobą zmiany w zwykłym panelu opcji. Dlatego też zalecane jest nie uruchamianie w tym samym momencie tradycyjnego panelu administracyjnego szablonu i live editor, gdyż może zaistnieć sytuacja gdy zapis opcji w obu miejscach naraz o różnych wartościach dla tego samego parametru da rezultat inny niż oczekiwany.', 'Theme live editor', '', 'inherit', 'open', 'open', '', '380-revision-3', '', '', '2012-07-23 13:32:29', '2012-07-23 13:32:29', '', 380, 'http://wp1/uncategorized/380-revision-3/', 0, 'revision', '', 0),
(488, 1, '2012-07-26 08:40:36', '2012-07-26 08:40:36', 'GavernWP has basic support for a new option available in Wordpress 3.4 - an options editor with templates preview. posiada podstawowe wsparcie dla nowej opcji dostępnej w Wordpress 3.4 - edytora opcji z podglądem szablonu. Obecnie w live editor zaimplementowano najważniejsze opcje związane ze stylem szablonu i jego układem.\n\nAby można było łatwiej dostać się do tego edytora umieściliśmy w górnej części opcji szablonu bezpośredni link do edytora:\n\n[screenshot]\n\nWszystkie opcje zawarte w tym edytorze dostępne są również poprzez tradycyjny panel opcji szablonu.\n\nAby ułatwić dodawanie własnych opcji do live editor cały kod generujący opcje umieszczono w oddzielnym pliku <strong>gavern/helpers/helpers.customizer.php</strong>.\n\nNależy pamiętać, że wszystkie opcje i ustawienia z live editor są przechowywane w tym samym miejscu co ich odpowiedniki z panelu admistracyjnego zatem zmiana ustawień z użyciem live editor pociąga za sobą zmiany w zwykłym panelu opcji. Dlatego też zalecane jest nie uruchamianie w tym samym momencie tradycyjnego panelu administracyjnego szablonu i live editor, gdyż może zaistnieć sytuacja gdy zapis opcji w obu miejscach naraz o różnych wartościach dla tego samego parametru da rezultat inny niż oczekiwany.', 'Theme live editor', '', 'inherit', 'open', 'open', '', '380-revision-4', '', '', '2012-07-26 08:40:36', '2012-07-26 08:40:36', '', 380, 'http://wp1/uncategorized/380-revision-4/', 0, 'revision', '', 0),
(489, 1, '2012-07-26 08:46:09', '2012-07-26 08:46:09', 'GavernWP has basic support for a new option available in Wordpress 3.4 - an options editor with templates preview. Now, the most important options connected with template''s style and its layout has been implemented to a live editor.\r\n\r\nIn order to reach it easier, we placed a direct link to this editor in the top part of templates'' options:\r\n\r\n[screenshot]\r\n\r\nWszystkie opcje zawarte w tym edytorze dostępne są również poprzez tradycyjny panel opcji szablonu.\r\n\r\nAby ułatwić dodawanie własnych opcji do live editor cały kod generujący opcje umieszczono w oddzielnym pliku <strong>gavern/helpers/helpers.customizer.php</strong>.\r\n\r\nNależy pamiętać, że wszystkie opcje i ustawienia z live editor są przechowywane w tym samym miejscu co ich odpowiedniki z panelu admistracyjnego zatem zmiana ustawień z użyciem live editor pociąga za sobą zmiany w zwykłym panelu opcji. Dlatego też zalecane jest nie uruchamianie w tym samym momencie tradycyjnego panelu administracyjnego szablonu i live editor, gdyż może zaistnieć sytuacja gdy zapis opcji w obu miejscach naraz o różnych wartościach dla tego samego parametru da rezultat inny niż oczekiwany.', 'Theme live editor', '', 'inherit', 'open', 'open', '', '380-revision-5', '', '', '2012-07-26 08:46:09', '2012-07-26 08:46:09', '', 380, 'http://wp1/uncategorized/380-revision-5/', 0, 'revision', '', 0),
(490, 1, '2012-07-14 08:04:05', '2012-07-14 08:04:05', 'Sekcja ustawień zaawansowanych zawiera ustawienia, które są związane z wieloma różnymi aspektami działania frameworka GavernWP:\r\n\r\n[screenshot]\r\n<ul>\r\n	<li><strong>Widget rules</strong> pozwala wyłączyć ten mechanizm. Zalecamy wyłączenie tej opcji wtedy, kiedy nie potrzebujemy korzystać z widżetów widocznych tylko na wybranych podstronach. Należy zauważyć, że pozwoli to lekko zoptymalizować szybkość działania strony, gdyż operacje sprawdzania reguł dla każdego widżetu nie będą wykonywane.</li>\r\n	<li><strong>Support for Google Chrome Frame</strong> - włącza metatag wymuszający użycie plugina <a href="https://developers.google.com/chrome/chrome-frame/" target="_blank">Google Chrome Frame</a> na przeglądarkach Internet Explorer o ile jest on zainstalowany.</li>\r\n	<li><strong>Parse emoticons in the text widgets</strong> - aktywuje parsowanie emotikon do postaci graficznej w widżetach.</li>\r\n	<li><strong>Parse shortcodes in the text widgets</strong> - aktywuje parsowanie <a href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> w widżetach.</li>\r\n	<li><strong>Use Thickbox</strong> - pozwala na włączenie użycia skryptu Thickbox do prezentacji grafik zawartych w postach.</li>\r\n	<li><strong>Value for the $content_width variable</strong> - zmienna <strong>$content_width</strong> jest wykorzystywana przy tworzeniu miniatur grafik dla postów, dlatego należy ją zdefiniować jako odpowiednią wartość - polecamy podać wartość nie większą niż maksymalna szerokość strony.</li>\r\n	<li><strong>Use the override.css file</strong> - dzięki włączeniu tej opcji na końcu listy plików CSS pojawi się plik <strong>override.css</strong>, który pozwala na łatwe nadpisywanie reguł CSS szablonu bez ingerencji w istniejący kod CSS.</li>\r\n	<li><strong>Enable support for Open Search</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://www.opensearch.org/Home" target="_blank">Open Search</a>.</li>\r\n	<li><strong>Enable support for Open Graph</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://ogp.me/" target="_blank">Open Graph</a> - po włączeniu tej opcji na stronie edycji postów pojawi się dodatkowy metabox: [screenshot]</li>\r\n</ul>', 'Advanced settings', '', 'inherit', 'open', 'open', '', '422-revision-2', '', '', '2012-07-14 08:04:05', '2012-07-14 08:04:05', '', 422, 'http://wp1/uncategorized/422-revision-2/', 0, 'revision', '', 0),
(491, 1, '2012-07-26 13:21:23', '2012-07-26 13:21:23', 'An advanced settings section includes settings which are connected with different aspects of GavernWP framework work:\r\n\r\n[screenshot]\r\n<ul>\r\n	<li><strong>Widget rules</strong> pozwala wyłączyć ten mechanizm. Zalecamy wyłączenie tej opcji wtedy, kiedy nie potrzebujemy korzystać z widżetów widocznych tylko na wybranych podstronach. Należy zauważyć, że pozwoli to lekko zoptymalizować szybkość działania strony, gdyż operacje sprawdzania reguł dla każdego widżetu nie będą wykonywane.</li>\r\n	<li><strong>Support for Google Chrome Frame</strong> - włącza metatag wymuszający użycie plugina <a href="https://developers.google.com/chrome/chrome-frame/" target="_blank">Google Chrome Frame</a> na przeglądarkach Internet Explorer o ile jest on zainstalowany.</li>\r\n	<li><strong>Parse emoticons in the text widgets</strong> - aktywuje parsowanie emotikon do postaci graficznej w widżetach.</li>\r\n	<li><strong>Parse shortcodes in the text widgets</strong> - aktywuje parsowanie <a href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> w widżetach.</li>\r\n	<li><strong>Use Thickbox</strong> - pozwala na włączenie użycia skryptu Thickbox do prezentacji grafik zawartych w postach.</li>\r\n	<li><strong>Value for the $content_width variable</strong> - zmienna <strong>$content_width</strong> jest wykorzystywana przy tworzeniu miniatur grafik dla postów, dlatego należy ją zdefiniować jako odpowiednią wartość - polecamy podać wartość nie większą niż maksymalna szerokość strony.</li>\r\n	<li><strong>Use the override.css file</strong> - dzięki włączeniu tej opcji na końcu listy plików CSS pojawi się plik <strong>override.css</strong>, który pozwala na łatwe nadpisywanie reguł CSS szablonu bez ingerencji w istniejący kod CSS.</li>\r\n	<li><strong>Enable support for Open Search</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://www.opensearch.org/Home" target="_blank">Open Search</a>.</li>\r\n	<li><strong>Enable support for Open Graph</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://ogp.me/" target="_blank">Open Graph</a> - po włączeniu tej opcji na stronie edycji postów pojawi się dodatkowy metabox: [screenshot]</li>\r\n</ul>', 'Advanced settings', '', 'inherit', 'open', 'open', '', '422-revision-3', '', '', '2012-07-26 13:21:23', '2012-07-26 13:21:23', '', 422, 'http://wp1/uncategorized/422-revision-3/', 0, 'revision', '', 0),
(492, 1, '2012-07-26 13:27:46', '2012-07-26 13:27:46', 'An advanced settings section includes settings which are connected with different aspects of GavernWP framework work:\r\n\r\n[screenshot]\r\n<ul>\r\n	<li><strong>Widget rules</strong> allows to switch on this mechanism. It is recommended to switch on this option in the case when you do not need to use widgets visible on a chosen subpages. Note that it will allow to optimize a little bit the speed of a website as operations of checking rules for each widget will not be made.</li>\r\n	<li><strong>Support for Google Chrome Frame</strong> - włącza metatag wymuszający użycie plugina <a href="https://developers.google.com/chrome/chrome-frame/" target="_blank">Google Chrome Frame</a> na przeglądarkach Internet Explorer o ile jest on zainstalowany.</li>\r\n	<li><strong>Parse emoticons in the text widgets</strong> - aktywuje parsowanie emotikon do postaci graficznej w widżetach.</li>\r\n	<li><strong>Parse shortcodes in the text widgets</strong> - aktywuje parsowanie <a href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> w widżetach.</li>\r\n	<li><strong>Use Thickbox</strong> - pozwala na włączenie użycia skryptu Thickbox do prezentacji grafik zawartych w postach.</li>\r\n	<li><strong>Value for the $content_width variable</strong> - zmienna <strong>$content_width</strong> jest wykorzystywana przy tworzeniu miniatur grafik dla postów, dlatego należy ją zdefiniować jako odpowiednią wartość - polecamy podać wartość nie większą niż maksymalna szerokość strony.</li>\r\n	<li><strong>Use the override.css file</strong> - dzięki włączeniu tej opcji na końcu listy plików CSS pojawi się plik <strong>override.css</strong>, który pozwala na łatwe nadpisywanie reguł CSS szablonu bez ingerencji w istniejący kod CSS.</li>\r\n	<li><strong>Enable support for Open Search</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://www.opensearch.org/Home" target="_blank">Open Search</a>.</li>\r\n	<li><strong>Enable support for Open Graph</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://ogp.me/" target="_blank">Open Graph</a> - po włączeniu tej opcji na stronie edycji postów pojawi się dodatkowy metabox: [screenshot]</li>\r\n</ul>', 'Advanced settings', '', 'inherit', 'open', 'open', '', '422-revision-4', '', '', '2012-07-26 13:27:46', '2012-07-26 13:27:46', '', 422, 'http://wp1/uncategorized/422-revision-4/', 0, 'revision', '', 0),
(493, 1, '2012-07-26 13:36:36', '2012-07-26 13:36:36', 'An advanced settings section includes settings which are connected with different aspects of GavernWP framework work:\r\n\r\n[screenshot]\r\n<ul>\r\n	<li><strong>Widget rules</strong> allows to switch on this mechanism. It is recommended to switch on this option in the case when you do not need to use widgets visible on a chosen subpages. Note that it will allow to optimize a little bit the speed of a website as operations of checking rules for each widget will not be made.</li>\r\n	<li><strong>Support for Google Chrome Frame</strong> - it switches on a metatag forcing use of  <a href="https://developers.google.com/chrome/chrome-frame/" target="_blank">Google Chrome Frame</a> plugin on Internet Explorer browsers if it is installed.</li>\r\n	<li><strong>Parse emoticons in the text widgets</strong> - it activates parsing emoticons to a graphic form in widgets.</li>\r\n	<li><strong>Parse shortcodes in the text widgets</strong> - it activates parsing of <a href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> in widgets.</li>\r\n	<li><strong>Use Thickbox</strong> - it allows to switch on Thickbox  script for presenting images included in posts.</li>\r\n	<li><strong>Value for the $content_width variable</strong> -  <strong>$content_width</strong> variable is used while creating thumbnails of images for posts, that''s why it has to be defined as an appropriate value - we resommend to set the value not bigger than the maximal page''s width. jest wykorzystywana przy tworzeniu miniatur grafik dla postów, dlatego należy ją zdefiniować jako odpowiednią wartość - polecamy podać wartość nie większą niż maksymalna szerokość strony.</li>\r\n	<li><strong>Use the override.css file</strong> - dzięki włączeniu tej opcji na końcu listy plików CSS pojawi się plik <strong>override.css</strong>, który pozwala na łatwe nadpisywanie reguł CSS szablonu bez ingerencji w istniejący kod CSS.</li>\r\n	<li><strong>Enable support for Open Search</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://www.opensearch.org/Home" target="_blank">Open Search</a>.</li>\r\n	<li><strong>Enable support for Open Graph</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://ogp.me/" target="_blank">Open Graph</a> - po włączeniu tej opcji na stronie edycji postów pojawi się dodatkowy metabox: [screenshot]</li>\r\n</ul>', 'Advanced settings', '', 'inherit', 'open', 'open', '', '422-revision-5', '', '', '2012-07-26 13:36:36', '2012-07-26 13:36:36', '', 422, 'http://wp1/uncategorized/422-revision-5/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(494, 1, '2012-07-27 08:06:37', '2012-07-27 08:06:37', 'An advanced settings section includes settings which are connected with different aspects of GavernWP framework work:\r\n\r\n[screenshot]\r\n<ul>\r\n	<li><strong>Widget rules</strong> allows to switch on this mechanism. It is recommended to switch on this option in the case when you do not need to use widgets visible on a chosen subpages. Note that it will allow to optimize a little bit the speed of a website as operations of checking rules for each widget will not be made.</li>\r\n	<li><strong>Support for Google Chrome Frame</strong> - it switches on a metatag forcing use of  <a href="https://developers.google.com/chrome/chrome-frame/" target="_blank">Google Chrome Frame</a> plugin on Internet Explorer browsers if it is installed.</li>\r\n	<li><strong>Parse emoticons in the text widgets</strong> - it activates parsing emoticons to a graphic form in widgets.</li>\r\n	<li><strong>Parse shortcodes in the text widgets</strong> - it activates parsing of <a href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> in widgets.</li>\r\n	<li><strong>Use Thickbox</strong> - it allows to switch on Thickbox  script for presenting images included in posts.</li>\r\n	<li><strong>Value for the $content_width variable</strong> -  <strong>$content_width</strong> variable is used while creating thumbnails of images for posts, that''s why it has to be defined as an appropriate value - we recommend to set the value not bigger than the max. page''s width.</li>\r\n	<li><strong>Use the override.css file</strong> - thanks to switching on this option, an <strong>override.css</strong> file will appear at the end of the list of CSS files which allows to overwrite template''s CSS rules easily without interference in existing CSS code.</li>\r\n	<li><strong>Enable support for Open Search</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://www.opensearch.org/Home" target="_blank">Open Search</a>.</li>\r\n	<li><strong>Enable support for Open Graph</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://ogp.me/" target="_blank">Open Graph</a> - po włączeniu tej opcji na stronie edycji postów pojawi się dodatkowy metabox: [screenshot]</li>\r\n</ul>', 'Advanced settings', '', 'inherit', 'open', 'open', '', '422-revision-6', '', '', '2012-07-27 08:06:37', '2012-07-27 08:06:37', '', 422, 'http://wp1/uncategorized/422-revision-6/', 0, 'revision', '', 0),
(495, 1, '2012-07-27 08:40:27', '2012-07-27 08:40:27', 'An advanced settings section includes settings which are connected with different aspects of GavernWP framework work:\r\n\r\n[screenshot]\r\n<ul>\r\n	<li><strong>Widget rules</strong> allows to switch on this mechanism. It is recommended to switch on this option in the case when you do not need to use widgets visible on a chosen subpages. Note that it will allow to optimize a little bit the speed of a website as operations of checking rules for each widget will not be made.</li>\r\n	<li><strong>Support for Google Chrome Frame</strong> - it switches on a metatag forcing use of  <a href="https://developers.google.com/chrome/chrome-frame/" target="_blank">Google Chrome Frame</a> plugin on Internet Explorer browsers if it is installed.</li>\r\n	<li><strong>Parse emoticons in the text widgets</strong> - it activates parsing emoticons to a graphic form in widgets.</li>\r\n	<li><strong>Parse shortcodes in the text widgets</strong> - it activates parsing of <a href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> in widgets.</li>\r\n	<li><strong>Use Thickbox</strong> - it allows to switch on Thickbox  script for presenting images included in posts.</li>\r\n	<li><strong>Value for the $content_width variable</strong> -  <strong>$content_width</strong> variable is used while creating thumbnails of images for posts, that''s why it has to be defined as an appropriate value - we recommend to set the value not bigger than the max. page''s width.</li>\r\n	<li><strong>Use the override.css file</strong> - thanks to switching on this option, an <strong>override.css</strong> file will appear at the end of the list of CSS files which allows to overwrite template''s CSS rules easily without interference in existing CSS code.</li>\r\n	<li><strong>Enable support for Open Search</strong> - it allows to switch on support for  <a href="http://www.opensearch.org/Home" target="_blank">Open Search</a> technology.</li>\r\n	<li><strong>Enable support for Open Graph</strong> - pozwala na włączenie wsparcia dla technologii <a href="http://ogp.me/" target="_blank">Open Graph</a> - po włączeniu tej opcji na stronie edycji postów pojawi się dodatkowy metabox: [screenshot]</li>\r\n</ul>', 'Advanced settings', '', 'inherit', 'open', 'open', '', '422-revision-7', '', '', '2012-07-27 08:40:27', '2012-07-27 08:40:27', '', 422, 'http://wp1/uncategorized/422-revision-7/', 0, 'revision', '', 0),
(496, 1, '2012-07-14 09:17:02', '2012-07-14 09:17:02', 'W GavernWP modyfikacja zawartości panelu administracyjnego jest bardzo łatwa - opiera się na plikach JSON, zawierających listę opcji. Dzięki temu tworzenie nowych opcji dostępnych w panelu administracyjnym jest bardzo łatwe.\r\n\r\nPliki opcji znajdują się w katalogu gavern/options w folderze związanym z aktualnie używanym językiem. W katalogu znajdziemy dwie główne grupy plików:\r\n<ul>\r\n	<li>plik <strong>tabs.json</strong> - zawiera on listę sekcji widocznych w panelu administracyjnym po prawej stronie: [screensthot] każda sekcja jest opisana tablicą postaci [code]["Basic", "options.basic", "enabled"][/code] pierwszy element tablicy to nazwa sekcji wyświetlana w panelu, drugi element to nazwa pliku bez rozszerzenia "<strong>.json</strong>", którzy przechowuje listę dostępnych w danej sekcji opcji, a trzecia wartość odnosi się do tego czy dana sekcja jest widoczna w panelu. W tym przypadku zostanie w panelu wyświetlony tab <strong>Basic</strong> na podstawie zawartości pliku <strong>options.basic.json</strong>.</li>\r\n	<li>pliki <strong>options.*.json</strong> - zawierają one listę opcji dostępnych w danej sekcji - ich nazwy są ściśle powiązane z zawartością pliku <strong>tabs.json</strong>.</li>\r\n</ul>\r\nKażdy plik options.*.json zawiera w przechowywanym obiekcie trzy główne pola:\r\n<ul>\r\n	<li><strong>groupname</strong> - jest to tytuł sekcji</li>\r\n	<li><strong>groupdesc</strong> - określa opis sekcji wyświetlany bezpośrednio pod tytułem sekcji</li>\r\n	<li><strong>fields</strong> - zawiera tablicę obiektów pól wyświetlanych pod tytułem i opisem sekcji</li>\r\n</ul>\r\nKażde pole definiowane jest przez obiekt zawierający następujące pola:\r\n<ul>\r\n	<li><strong>name</strong> - określa nazwę opcji jaka będzie związana z danym polem. Do nazwy opcji automatycznie jest dodawany prefiks będący nazwą szablonu (przechowywany w zmiennej globalnej <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- określa typ pola. Standardowe rodzaje pól to:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - pole zawierające tekst opisu - nie jest stosowane do przechowywania żadnej wartości opcji</li>\r\n	<li><strong>Text</strong> - najprostsze pole tekstowe pozwalające na wprowadzanie krótkich wartości tekstowych</li>\r\n	<li><strong>Textarea</strong> - pole tekstowe służące do wprowadzania większej ilości wartości tekstowych</li>\r\n	<li><strong>Select</strong> - pole wyboru</li>\r\n	<li><strong>Switcher</strong> - pole wyboru ograniczone do dwóch opcji: "Enabled" i "Disabled"</li>\r\n	<li><strong>Media</strong> - pole pozwalające na wybór grafiki</li>\r\n	<li><strong>WidthHeight</strong> - pole pozwalające na określenie dwóch wartości definiujących szerokość i wysokość (najczęściej wykorzystywane wraz z polem Media).</li>\r\n</ul>\r\nPola te zdefiniowane są w pliku <strong>gavern/form_elements/standard.php</strong> a ich kod powstał na bazie dziedziczenia z klasy <strong>GKFormInput</strong>. Warto pamiętać, że pliki związane z opcjami parsowane są przez plik <strong>gavern/form.parser.php</strong>.Dodatkowo w katalogu <strong>gavern/form_elements</strong> można tworzyć własne typy pól. W GavernWP standardowo zawarliśmy następujące rodzaje pól:\r\n<ul>\r\n	<li><strong>Fonts</strong> - jest to pole generujące opcje związane z wyborem fontów - zastosowane w sekcji <strong>Fonts</strong>.</li>\r\n	<li><strong>Menu</strong> - pole pozwalające wygenerować opcje związane z menu strony - zastosowane w sekcji Navigation.</li>\r\n	<li><strong>TemplateStyle</strong> - pole pozwalające wybrać styl strony - zastosowane na poczatku sekcji <strong>Basic</strong>.</li>\r\n</ul>\r\nOpis tworzenia własnych rodzajów pól szerzej opiszemy w dalszej części tego artykułu.</li>\r\n	<li><strong>label</strong> - określa tekst etykiety widocznej obok pola</li>\r\n	<li><strong>tooltip</strong> - (opcjonalne) pozwala określić treść tooltipa, który pojawi się po najechaniu na etykietę danego pola.</li>\r\n	<li><strong>default</strong> - domyślna wartość danego pola.</li>\r\n	<li><strong>class</strong> - (opcjonalne) pole to pozwala określić klasy CSS dodawane do elementu podczas jego generowania (o ile taką funkcjonalność obsługuje kod pola)</li>\r\n	<li><strong>format</strong> - (opcjonalne) pole określające w postaci wyrażenia regularnego pożądaną zawartosć pola. Przykładowo wartość: [code][a-zA-Z]{2,5}[/code] określa, że dane pole będzie poprawnie wypełnione tylko wtedy, gdy użytkownik poda jako jego wartość ciąg liter dużych lub małych o długości 2 do 5 znaków</li>\r\n	<li><strong>required</strong> - (opcjonalne) pozwala określić czy wypełnienie danego pola jest wymagane</li>\r\n	<li><strong>visibility</strong> - (opcjonalne) określa kiedy dane pole jest widoczne. Reguły widoczności rozdzielane są przecinkiem i tworzone są w formacie <strong>FIELD_NAME=VALUE</strong> - w wypadku kilku reguł widoczności są one traktowane jako połączone operatorem <strong>AND</strong>. Wartość <strong>FIELD_NAME</strong> to nazwa pola bez prefiksu z nazwą szablonu. Przykładowo zapis: [code]option1=10,option2=20[/code] sprawi, że dane pole będzie widoczne dopiero wtedy gdy opcja o nazwie <strong>option1</strong> zostanie ustawiona na wartość <strong>10</strong> i jednocześnie opcja <strong>option2</strong> będzie mieć wartość <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (opcjonalne) pole to jest wykorzystywane do przechowywania dodatkowych wartości np. w wypadku pola typu <strong>Select</strong> do przechowywania nazw i wartości opcji. Jest to pole bardzo przydatne w wypadku tworzenia bardziej rozbudowanych pól, które mogą wymagać dodatkowych opcji konfiguracyjnych.</li>\r\n</ul>\r\nPo dodaniu nowej opcji należy pamiętać o obsłużeniu jej w samym szablonie. Wartość opcji pobieramy używając funkcji get_option według schematu:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\ngdzie <strong>OPTION_NAME</strong> to nazwa opcji z pliku JSON a <strong>DEFAULT_VALUE</strong> to wartość domyślna opcji, która zostanie wykorzystana w momencie kiedy użytkownik sam nie określił jeszcze wartości danej opcji. Co ważne przed <strong>OPTION_NAME</strong> znajduje się znak "<strong>_</strong>", którego nie wolno pominąć. Prefiks z nazwą szablonu jest dodawany w celu rozróżnienia wartości opcji różnych szablonów.\r\n<h3>Tworzenie własnych pól opcji</h3>\r\nPrzy tworzeniu nowego rodzaju pola należy zaczać od stworzenia katalogu zgodnego z nazwą pola np. <strong>CustomField</strong> w katalogu <strong>gavern/form_elements</strong>. Następnie w katalogu tym należy stworzyć plik config.json i wypełnić go według schematu:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\nPola <strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> muszą zawierać konkretne wartości, natomiast pola <strong>js</strong> i <strong>css</strong> są opcjonalne - pozwalają określić czy dane pole ma wykorzystywać dodatkowy kod CSS i JavaScript (wtedy należy jako ich wartość podać nazwę plików z katalogu pola). Należy też stworzyć plik <strong>customfield.php</strong> zawierający klasę <strong>GKFormInputCustomField</strong> dziedziczącą po klasie <strong>GKFormInput</strong>.\r\n\r\nNależy też zadbać o to by plik <strong>customfield.php</strong> zawierał na początku kod zabezpieczający:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nKażda klasa pola powinna zawierać co namniej jedną publiczną metodę - <strong>output</strong> nie pobierającą żadnych dodatkowych argumentów. Metoda ta musi zwracać kod HTML danego pola. Właściwości pola z pliku JSON są dostępne jako pola klasy np. właściwość <strong>required</strong> dostępna jest jako:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nDrugą ważną publiczną metodą każdej klasy pola formularza jest metoda <strong>getValue</strong>, która pobiera jeden argument - <strong>$default</strong>. Jej wykorzystanie jest opcjonalne i przydatne tylko wtedy, kiedy wartość danego pola korzysta z więcej niż jednego pola w bazie danych. Wtedy warto tą metodę nadpisać - jako przykład polecamy lekturę kodu standardowego pola <strong>WidthHeight</strong>, gdzie nadpisanie metody getValue zostało wykorzystane do przechowywania wartości dwóch pól formularza w obrębie jednego głównego pola tworzonego przez klasę <strong>GKInputFormWidthHeight</strong>.\r\n\r\nPozostałe metody klasy powinny być tworzone według uznania autora danego pola formularza.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-2', '', '', '2012-07-14 09:17:02', '2012-07-14 09:17:02', '', 427, 'http://wp1/uncategorized/427-revision-2/', 0, 'revision', '', 0),
(497, 1, '2012-07-27 08:50:49', '2012-07-27 08:50:49', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\n&nbsp;\r\n\r\nPliki opcji znajdują się w katalogu gavern/options w folderze związanym z aktualnie używanym językiem. W katalogu znajdziemy dwie główne grupy plików:\r\n<ul>\r\n	<li>plik <strong>tabs.json</strong> - zawiera on listę sekcji widocznych w panelu administracyjnym po prawej stronie: [screensthot] każda sekcja jest opisana tablicą postaci [code]["Basic", "options.basic", "enabled"][/code] pierwszy element tablicy to nazwa sekcji wyświetlana w panelu, drugi element to nazwa pliku bez rozszerzenia "<strong>.json</strong>", którzy przechowuje listę dostępnych w danej sekcji opcji, a trzecia wartość odnosi się do tego czy dana sekcja jest widoczna w panelu. W tym przypadku zostanie w panelu wyświetlony tab <strong>Basic</strong> na podstawie zawartości pliku <strong>options.basic.json</strong>.</li>\r\n	<li>pliki <strong>options.*.json</strong> - zawierają one listę opcji dostępnych w danej sekcji - ich nazwy są ściśle powiązane z zawartością pliku <strong>tabs.json</strong>.</li>\r\n</ul>\r\nKażdy plik options.*.json zawiera w przechowywanym obiekcie trzy główne pola:\r\n<ul>\r\n	<li><strong>groupname</strong> - jest to tytuł sekcji</li>\r\n	<li><strong>groupdesc</strong> - określa opis sekcji wyświetlany bezpośrednio pod tytułem sekcji</li>\r\n	<li><strong>fields</strong> - zawiera tablicę obiektów pól wyświetlanych pod tytułem i opisem sekcji</li>\r\n</ul>\r\nKażde pole definiowane jest przez obiekt zawierający następujące pola:\r\n<ul>\r\n	<li><strong>name</strong> - określa nazwę opcji jaka będzie związana z danym polem. Do nazwy opcji automatycznie jest dodawany prefiks będący nazwą szablonu (przechowywany w zmiennej globalnej <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- określa typ pola. Standardowe rodzaje pól to:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - pole zawierające tekst opisu - nie jest stosowane do przechowywania żadnej wartości opcji</li>\r\n	<li><strong>Text</strong> - najprostsze pole tekstowe pozwalające na wprowadzanie krótkich wartości tekstowych</li>\r\n	<li><strong>Textarea</strong> - pole tekstowe służące do wprowadzania większej ilości wartości tekstowych</li>\r\n	<li><strong>Select</strong> - pole wyboru</li>\r\n	<li><strong>Switcher</strong> - pole wyboru ograniczone do dwóch opcji: "Enabled" i "Disabled"</li>\r\n	<li><strong>Media</strong> - pole pozwalające na wybór grafiki</li>\r\n	<li><strong>WidthHeight</strong> - pole pozwalające na określenie dwóch wartości definiujących szerokość i wysokość (najczęściej wykorzystywane wraz z polem Media).</li>\r\n</ul>\r\nPola te zdefiniowane są w pliku <strong>gavern/form_elements/standard.php</strong> a ich kod powstał na bazie dziedziczenia z klasy <strong>GKFormInput</strong>. Warto pamiętać, że pliki związane z opcjami parsowane są przez plik <strong>gavern/form.parser.php</strong>.Dodatkowo w katalogu <strong>gavern/form_elements</strong> można tworzyć własne typy pól. W GavernWP standardowo zawarliśmy następujące rodzaje pól:\r\n<ul>\r\n	<li><strong>Fonts</strong> - jest to pole generujące opcje związane z wyborem fontów - zastosowane w sekcji <strong>Fonts</strong>.</li>\r\n	<li><strong>Menu</strong> - pole pozwalające wygenerować opcje związane z menu strony - zastosowane w sekcji Navigation.</li>\r\n	<li><strong>TemplateStyle</strong> - pole pozwalające wybrać styl strony - zastosowane na poczatku sekcji <strong>Basic</strong>.</li>\r\n</ul>\r\nOpis tworzenia własnych rodzajów pól szerzej opiszemy w dalszej części tego artykułu.</li>\r\n	<li><strong>label</strong> - określa tekst etykiety widocznej obok pola</li>\r\n	<li><strong>tooltip</strong> - (opcjonalne) pozwala określić treść tooltipa, który pojawi się po najechaniu na etykietę danego pola.</li>\r\n	<li><strong>default</strong> - domyślna wartość danego pola.</li>\r\n	<li><strong>class</strong> - (opcjonalne) pole to pozwala określić klasy CSS dodawane do elementu podczas jego generowania (o ile taką funkcjonalność obsługuje kod pola)</li>\r\n	<li><strong>format</strong> - (opcjonalne) pole określające w postaci wyrażenia regularnego pożądaną zawartosć pola. Przykładowo wartość: [code][a-zA-Z]{2,5}[/code] określa, że dane pole będzie poprawnie wypełnione tylko wtedy, gdy użytkownik poda jako jego wartość ciąg liter dużych lub małych o długości 2 do 5 znaków</li>\r\n	<li><strong>required</strong> - (opcjonalne) pozwala określić czy wypełnienie danego pola jest wymagane</li>\r\n	<li><strong>visibility</strong> - (opcjonalne) określa kiedy dane pole jest widoczne. Reguły widoczności rozdzielane są przecinkiem i tworzone są w formacie <strong>FIELD_NAME=VALUE</strong> - w wypadku kilku reguł widoczności są one traktowane jako połączone operatorem <strong>AND</strong>. Wartość <strong>FIELD_NAME</strong> to nazwa pola bez prefiksu z nazwą szablonu. Przykładowo zapis: [code]option1=10,option2=20[/code] sprawi, że dane pole będzie widoczne dopiero wtedy gdy opcja o nazwie <strong>option1</strong> zostanie ustawiona na wartość <strong>10</strong> i jednocześnie opcja <strong>option2</strong> będzie mieć wartość <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (opcjonalne) pole to jest wykorzystywane do przechowywania dodatkowych wartości np. w wypadku pola typu <strong>Select</strong> do przechowywania nazw i wartości opcji. Jest to pole bardzo przydatne w wypadku tworzenia bardziej rozbudowanych pól, które mogą wymagać dodatkowych opcji konfiguracyjnych.</li>\r\n</ul>\r\nPo dodaniu nowej opcji należy pamiętać o obsłużeniu jej w samym szablonie. Wartość opcji pobieramy używając funkcji get_option według schematu:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\ngdzie <strong>OPTION_NAME</strong> to nazwa opcji z pliku JSON a <strong>DEFAULT_VALUE</strong> to wartość domyślna opcji, która zostanie wykorzystana w momencie kiedy użytkownik sam nie określił jeszcze wartości danej opcji. Co ważne przed <strong>OPTION_NAME</strong> znajduje się znak "<strong>_</strong>", którego nie wolno pominąć. Prefiks z nazwą szablonu jest dodawany w celu rozróżnienia wartości opcji różnych szablonów.\r\n<h3>Tworzenie własnych pól opcji</h3>\r\nPrzy tworzeniu nowego rodzaju pola należy zaczać od stworzenia katalogu zgodnego z nazwą pola np. <strong>CustomField</strong> w katalogu <strong>gavern/form_elements</strong>. Następnie w katalogu tym należy stworzyć plik config.json i wypełnić go według schematu:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\nPola <strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> muszą zawierać konkretne wartości, natomiast pola <strong>js</strong> i <strong>css</strong> są opcjonalne - pozwalają określić czy dane pole ma wykorzystywać dodatkowy kod CSS i JavaScript (wtedy należy jako ich wartość podać nazwę plików z katalogu pola). Należy też stworzyć plik <strong>customfield.php</strong> zawierający klasę <strong>GKFormInputCustomField</strong> dziedziczącą po klasie <strong>GKFormInput</strong>.\r\n\r\nNależy też zadbać o to by plik <strong>customfield.php</strong> zawierał na początku kod zabezpieczający:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nKażda klasa pola powinna zawierać co namniej jedną publiczną metodę - <strong>output</strong> nie pobierającą żadnych dodatkowych argumentów. Metoda ta musi zwracać kod HTML danego pola. Właściwości pola z pliku JSON są dostępne jako pola klasy np. właściwość <strong>required</strong> dostępna jest jako:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nDrugą ważną publiczną metodą każdej klasy pola formularza jest metoda <strong>getValue</strong>, która pobiera jeden argument - <strong>$default</strong>. Jej wykorzystanie jest opcjonalne i przydatne tylko wtedy, kiedy wartość danego pola korzysta z więcej niż jednego pola w bazie danych. Wtedy warto tą metodę nadpisać - jako przykład polecamy lekturę kodu standardowego pola <strong>WidthHeight</strong>, gdzie nadpisanie metody getValue zostało wykorzystane do przechowywania wartości dwóch pól formularza w obrębie jednego głównego pola tworzonego przez klasę <strong>GKInputFormWidthHeight</strong>.\r\n\r\nPozostałe metody klasy powinny być tworzone według uznania autora danego pola formularza.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-3', '', '', '2012-07-27 08:50:49', '2012-07-27 08:50:49', '', 427, 'http://wp1/uncategorized/427-revision-3/', 0, 'revision', '', 0),
(498, 1, '2012-07-27 09:00:40', '2012-07-27 09:00:40', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main\r\n\r\nPliki opcji znajdują się w katalogu gavern/options w folderze związanym z aktualnie używanym językiem. W katalogu znajdziemy dwie główne grupy plików:\r\n<ul>\r\n	<li>plik <strong>tabs.json</strong> - zawiera on listę sekcji widocznych w panelu administracyjnym po prawej stronie: [screensthot] każda sekcja jest opisana tablicą postaci [code]["Basic", "options.basic", "enabled"][/code] pierwszy element tablicy to nazwa sekcji wyświetlana w panelu, drugi element to nazwa pliku bez rozszerzenia "<strong>.json</strong>", którzy przechowuje listę dostępnych w danej sekcji opcji, a trzecia wartość odnosi się do tego czy dana sekcja jest widoczna w panelu. W tym przypadku zostanie w panelu wyświetlony tab <strong>Basic</strong> na podstawie zawartości pliku <strong>options.basic.json</strong>.</li>\r\n	<li>pliki <strong>options.*.json</strong> - zawierają one listę opcji dostępnych w danej sekcji - ich nazwy są ściśle powiązane z zawartością pliku <strong>tabs.json</strong>.</li>\r\n</ul>\r\nKażdy plik options.*.json zawiera w przechowywanym obiekcie trzy główne pola:\r\n<ul>\r\n	<li><strong>groupname</strong> - jest to tytuł sekcji</li>\r\n	<li><strong>groupdesc</strong> - określa opis sekcji wyświetlany bezpośrednio pod tytułem sekcji</li>\r\n	<li><strong>fields</strong> - zawiera tablicę obiektów pól wyświetlanych pod tytułem i opisem sekcji</li>\r\n</ul>\r\nKażde pole definiowane jest przez obiekt zawierający następujące pola:\r\n<ul>\r\n	<li><strong>name</strong> - określa nazwę opcji jaka będzie związana z danym polem. Do nazwy opcji automatycznie jest dodawany prefiks będący nazwą szablonu (przechowywany w zmiennej globalnej <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- określa typ pola. Standardowe rodzaje pól to:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - pole zawierające tekst opisu - nie jest stosowane do przechowywania żadnej wartości opcji</li>\r\n	<li><strong>Text</strong> - najprostsze pole tekstowe pozwalające na wprowadzanie krótkich wartości tekstowych</li>\r\n	<li><strong>Textarea</strong> - pole tekstowe służące do wprowadzania większej ilości wartości tekstowych</li>\r\n	<li><strong>Select</strong> - pole wyboru</li>\r\n	<li><strong>Switcher</strong> - pole wyboru ograniczone do dwóch opcji: "Enabled" i "Disabled"</li>\r\n	<li><strong>Media</strong> - pole pozwalające na wybór grafiki</li>\r\n	<li><strong>WidthHeight</strong> - pole pozwalające na określenie dwóch wartości definiujących szerokość i wysokość (najczęściej wykorzystywane wraz z polem Media).</li>\r\n</ul>\r\nPola te zdefiniowane są w pliku <strong>gavern/form_elements/standard.php</strong> a ich kod powstał na bazie dziedziczenia z klasy <strong>GKFormInput</strong>. Warto pamiętać, że pliki związane z opcjami parsowane są przez plik <strong>gavern/form.parser.php</strong>.Dodatkowo w katalogu <strong>gavern/form_elements</strong> można tworzyć własne typy pól. W GavernWP standardowo zawarliśmy następujące rodzaje pól:\r\n<ul>\r\n	<li><strong>Fonts</strong> - jest to pole generujące opcje związane z wyborem fontów - zastosowane w sekcji <strong>Fonts</strong>.</li>\r\n	<li><strong>Menu</strong> - pole pozwalające wygenerować opcje związane z menu strony - zastosowane w sekcji Navigation.</li>\r\n	<li><strong>TemplateStyle</strong> - pole pozwalające wybrać styl strony - zastosowane na poczatku sekcji <strong>Basic</strong>.</li>\r\n</ul>\r\nOpis tworzenia własnych rodzajów pól szerzej opiszemy w dalszej części tego artykułu.</li>\r\n	<li><strong>label</strong> - określa tekst etykiety widocznej obok pola</li>\r\n	<li><strong>tooltip</strong> - (opcjonalne) pozwala określić treść tooltipa, który pojawi się po najechaniu na etykietę danego pola.</li>\r\n	<li><strong>default</strong> - domyślna wartość danego pola.</li>\r\n	<li><strong>class</strong> - (opcjonalne) pole to pozwala określić klasy CSS dodawane do elementu podczas jego generowania (o ile taką funkcjonalność obsługuje kod pola)</li>\r\n	<li><strong>format</strong> - (opcjonalne) pole określające w postaci wyrażenia regularnego pożądaną zawartosć pola. Przykładowo wartość: [code][a-zA-Z]{2,5}[/code] określa, że dane pole będzie poprawnie wypełnione tylko wtedy, gdy użytkownik poda jako jego wartość ciąg liter dużych lub małych o długości 2 do 5 znaków</li>\r\n	<li><strong>required</strong> - (opcjonalne) pozwala określić czy wypełnienie danego pola jest wymagane</li>\r\n	<li><strong>visibility</strong> - (opcjonalne) określa kiedy dane pole jest widoczne. Reguły widoczności rozdzielane są przecinkiem i tworzone są w formacie <strong>FIELD_NAME=VALUE</strong> - w wypadku kilku reguł widoczności są one traktowane jako połączone operatorem <strong>AND</strong>. Wartość <strong>FIELD_NAME</strong> to nazwa pola bez prefiksu z nazwą szablonu. Przykładowo zapis: [code]option1=10,option2=20[/code] sprawi, że dane pole będzie widoczne dopiero wtedy gdy opcja o nazwie <strong>option1</strong> zostanie ustawiona na wartość <strong>10</strong> i jednocześnie opcja <strong>option2</strong> będzie mieć wartość <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (opcjonalne) pole to jest wykorzystywane do przechowywania dodatkowych wartości np. w wypadku pola typu <strong>Select</strong> do przechowywania nazw i wartości opcji. Jest to pole bardzo przydatne w wypadku tworzenia bardziej rozbudowanych pól, które mogą wymagać dodatkowych opcji konfiguracyjnych.</li>\r\n</ul>\r\nPo dodaniu nowej opcji należy pamiętać o obsłużeniu jej w samym szablonie. Wartość opcji pobieramy używając funkcji get_option według schematu:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\ngdzie <strong>OPTION_NAME</strong> to nazwa opcji z pliku JSON a <strong>DEFAULT_VALUE</strong> to wartość domyślna opcji, która zostanie wykorzystana w momencie kiedy użytkownik sam nie określił jeszcze wartości danej opcji. Co ważne przed <strong>OPTION_NAME</strong> znajduje się znak "<strong>_</strong>", którego nie wolno pominąć. Prefiks z nazwą szablonu jest dodawany w celu rozróżnienia wartości opcji różnych szablonów.\r\n<h3>Tworzenie własnych pól opcji</h3>\r\nPrzy tworzeniu nowego rodzaju pola należy zaczać od stworzenia katalogu zgodnego z nazwą pola np. <strong>CustomField</strong> w katalogu <strong>gavern/form_elements</strong>. Następnie w katalogu tym należy stworzyć plik config.json i wypełnić go według schematu:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\nPola <strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> muszą zawierać konkretne wartości, natomiast pola <strong>js</strong> i <strong>css</strong> są opcjonalne - pozwalają określić czy dane pole ma wykorzystywać dodatkowy kod CSS i JavaScript (wtedy należy jako ich wartość podać nazwę plików z katalogu pola). Należy też stworzyć plik <strong>customfield.php</strong> zawierający klasę <strong>GKFormInputCustomField</strong> dziedziczącą po klasie <strong>GKFormInput</strong>.\r\n\r\nNależy też zadbać o to by plik <strong>customfield.php</strong> zawierał na początku kod zabezpieczający:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nKażda klasa pola powinna zawierać co namniej jedną publiczną metodę - <strong>output</strong> nie pobierającą żadnych dodatkowych argumentów. Metoda ta musi zwracać kod HTML danego pola. Właściwości pola z pliku JSON są dostępne jako pola klasy np. właściwość <strong>required</strong> dostępna jest jako:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nDrugą ważną publiczną metodą każdej klasy pola formularza jest metoda <strong>getValue</strong>, która pobiera jeden argument - <strong>$default</strong>. Jej wykorzystanie jest opcjonalne i przydatne tylko wtedy, kiedy wartość danego pola korzysta z więcej niż jednego pola w bazie danych. Wtedy warto tą metodę nadpisać - jako przykład polecamy lekturę kodu standardowego pola <strong>WidthHeight</strong>, gdzie nadpisanie metody getValue zostało wykorzystane do przechowywania wartości dwóch pól formularza w obrębie jednego głównego pola tworzonego przez klasę <strong>GKInputFormWidthHeight</strong>.\r\n\r\nPozostałe metody klasy powinny być tworzone według uznania autora danego pola formularza.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-4', '', '', '2012-07-27 09:00:40', '2012-07-27 09:00:40', '', 427, 'http://wp1/uncategorized/427-revision-4/', 0, 'revision', '', 0),
(499, 1, '2012-07-27 10:39:20', '2012-07-27 10:39:20', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main files groups:\r\n<ul>\r\n	<li>plik <strong>tabs.json</strong> - it includes a list of sections visible on the right side of an administrazawiera on listę sekcji widocznych w panelu administracyjnym po prawej stronie: [screensthot] każda sekcja jest opisana tablicą postaci [code]["Basic", "options.basic", "enabled"][/code] pierwszy element tablicy to nazwa sekcji wyświetlana w panelu, drugi element to nazwa pliku bez rozszerzenia "<strong>.json</strong>", którzy przechowuje listę dostępnych w danej sekcji opcji, a trzecia wartość odnosi się do tego czy dana sekcja jest widoczna w panelu. W tym przypadku zostanie w panelu wyświetlony tab <strong>Basic</strong> na podstawie zawartości pliku <strong>options.basic.json</strong>.</li>\r\n	<li>pliki <strong>options.*.json</strong> - zawierają one listę opcji dostępnych w danej sekcji - ich nazwy są ściśle powiązane z zawartością pliku <strong>tabs.json</strong>.</li>\r\n</ul>\r\nKażdy plik options.*.json zawiera w przechowywanym obiekcie trzy główne pola:\r\n<ul>\r\n	<li><strong>groupname</strong> - jest to tytuł sekcji</li>\r\n	<li><strong>groupdesc</strong> - określa opis sekcji wyświetlany bezpośrednio pod tytułem sekcji</li>\r\n	<li><strong>fields</strong> - zawiera tablicę obiektów pól wyświetlanych pod tytułem i opisem sekcji</li>\r\n</ul>\r\nKażde pole definiowane jest przez obiekt zawierający następujące pola:\r\n<ul>\r\n	<li><strong>name</strong> - określa nazwę opcji jaka będzie związana z danym polem. Do nazwy opcji automatycznie jest dodawany prefiks będący nazwą szablonu (przechowywany w zmiennej globalnej <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- określa typ pola. Standardowe rodzaje pól to:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - pole zawierające tekst opisu - nie jest stosowane do przechowywania żadnej wartości opcji</li>\r\n	<li><strong>Text</strong> - najprostsze pole tekstowe pozwalające na wprowadzanie krótkich wartości tekstowych</li>\r\n	<li><strong>Textarea</strong> - pole tekstowe służące do wprowadzania większej ilości wartości tekstowych</li>\r\n	<li><strong>Select</strong> - pole wyboru</li>\r\n	<li><strong>Switcher</strong> - pole wyboru ograniczone do dwóch opcji: "Enabled" i "Disabled"</li>\r\n	<li><strong>Media</strong> - pole pozwalające na wybór grafiki</li>\r\n	<li><strong>WidthHeight</strong> - pole pozwalające na określenie dwóch wartości definiujących szerokość i wysokość (najczęściej wykorzystywane wraz z polem Media).</li>\r\n</ul>\r\nPola te zdefiniowane są w pliku <strong>gavern/form_elements/standard.php</strong> a ich kod powstał na bazie dziedziczenia z klasy <strong>GKFormInput</strong>. Warto pamiętać, że pliki związane z opcjami parsowane są przez plik <strong>gavern/form.parser.php</strong>.Dodatkowo w katalogu <strong>gavern/form_elements</strong> można tworzyć własne typy pól. W GavernWP standardowo zawarliśmy następujące rodzaje pól:\r\n<ul>\r\n	<li><strong>Fonts</strong> - jest to pole generujące opcje związane z wyborem fontów - zastosowane w sekcji <strong>Fonts</strong>.</li>\r\n	<li><strong>Menu</strong> - pole pozwalające wygenerować opcje związane z menu strony - zastosowane w sekcji Navigation.</li>\r\n	<li><strong>TemplateStyle</strong> - pole pozwalające wybrać styl strony - zastosowane na poczatku sekcji <strong>Basic</strong>.</li>\r\n</ul>\r\nOpis tworzenia własnych rodzajów pól szerzej opiszemy w dalszej części tego artykułu.</li>\r\n	<li><strong>label</strong> - określa tekst etykiety widocznej obok pola</li>\r\n	<li><strong>tooltip</strong> - (opcjonalne) pozwala określić treść tooltipa, który pojawi się po najechaniu na etykietę danego pola.</li>\r\n	<li><strong>default</strong> - domyślna wartość danego pola.</li>\r\n	<li><strong>class</strong> - (opcjonalne) pole to pozwala określić klasy CSS dodawane do elementu podczas jego generowania (o ile taką funkcjonalność obsługuje kod pola)</li>\r\n	<li><strong>format</strong> - (opcjonalne) pole określające w postaci wyrażenia regularnego pożądaną zawartosć pola. Przykładowo wartość: [code][a-zA-Z]{2,5}[/code] określa, że dane pole będzie poprawnie wypełnione tylko wtedy, gdy użytkownik poda jako jego wartość ciąg liter dużych lub małych o długości 2 do 5 znaków</li>\r\n	<li><strong>required</strong> - (opcjonalne) pozwala określić czy wypełnienie danego pola jest wymagane</li>\r\n	<li><strong>visibility</strong> - (opcjonalne) określa kiedy dane pole jest widoczne. Reguły widoczności rozdzielane są przecinkiem i tworzone są w formacie <strong>FIELD_NAME=VALUE</strong> - w wypadku kilku reguł widoczności są one traktowane jako połączone operatorem <strong>AND</strong>. Wartość <strong>FIELD_NAME</strong> to nazwa pola bez prefiksu z nazwą szablonu. Przykładowo zapis: [code]option1=10,option2=20[/code] sprawi, że dane pole będzie widoczne dopiero wtedy gdy opcja o nazwie <strong>option1</strong> zostanie ustawiona na wartość <strong>10</strong> i jednocześnie opcja <strong>option2</strong> będzie mieć wartość <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (opcjonalne) pole to jest wykorzystywane do przechowywania dodatkowych wartości np. w wypadku pola typu <strong>Select</strong> do przechowywania nazw i wartości opcji. Jest to pole bardzo przydatne w wypadku tworzenia bardziej rozbudowanych pól, które mogą wymagać dodatkowych opcji konfiguracyjnych.</li>\r\n</ul>\r\nPo dodaniu nowej opcji należy pamiętać o obsłużeniu jej w samym szablonie. Wartość opcji pobieramy używając funkcji get_option według schematu:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\ngdzie <strong>OPTION_NAME</strong> to nazwa opcji z pliku JSON a <strong>DEFAULT_VALUE</strong> to wartość domyślna opcji, która zostanie wykorzystana w momencie kiedy użytkownik sam nie określił jeszcze wartości danej opcji. Co ważne przed <strong>OPTION_NAME</strong> znajduje się znak "<strong>_</strong>", którego nie wolno pominąć. Prefiks z nazwą szablonu jest dodawany w celu rozróżnienia wartości opcji różnych szablonów.\r\n<h3>Tworzenie własnych pól opcji</h3>\r\nPrzy tworzeniu nowego rodzaju pola należy zaczać od stworzenia katalogu zgodnego z nazwą pola np. <strong>CustomField</strong> w katalogu <strong>gavern/form_elements</strong>. Następnie w katalogu tym należy stworzyć plik config.json i wypełnić go według schematu:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\nPola <strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> muszą zawierać konkretne wartości, natomiast pola <strong>js</strong> i <strong>css</strong> są opcjonalne - pozwalają określić czy dane pole ma wykorzystywać dodatkowy kod CSS i JavaScript (wtedy należy jako ich wartość podać nazwę plików z katalogu pola). Należy też stworzyć plik <strong>customfield.php</strong> zawierający klasę <strong>GKFormInputCustomField</strong> dziedziczącą po klasie <strong>GKFormInput</strong>.\r\n\r\nNależy też zadbać o to by plik <strong>customfield.php</strong> zawierał na początku kod zabezpieczający:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nKażda klasa pola powinna zawierać co namniej jedną publiczną metodę - <strong>output</strong> nie pobierającą żadnych dodatkowych argumentów. Metoda ta musi zwracać kod HTML danego pola. Właściwości pola z pliku JSON są dostępne jako pola klasy np. właściwość <strong>required</strong> dostępna jest jako:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nDrugą ważną publiczną metodą każdej klasy pola formularza jest metoda <strong>getValue</strong>, która pobiera jeden argument - <strong>$default</strong>. Jej wykorzystanie jest opcjonalne i przydatne tylko wtedy, kiedy wartość danego pola korzysta z więcej niż jednego pola w bazie danych. Wtedy warto tą metodę nadpisać - jako przykład polecamy lekturę kodu standardowego pola <strong>WidthHeight</strong>, gdzie nadpisanie metody getValue zostało wykorzystane do przechowywania wartości dwóch pól formularza w obrębie jednego głównego pola tworzonego przez klasę <strong>GKInputFormWidthHeight</strong>.\r\n\r\nPozostałe metody klasy powinny być tworzone według uznania autora danego pola formularza.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-5', '', '', '2012-07-27 10:39:20', '2012-07-27 10:39:20', '', 427, 'http://wp1/uncategorized/427-revision-5/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(500, 1, '2012-07-27 10:54:44', '2012-07-27 10:54:44', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main files groups:\r\n<ul>\r\n	<li>plik <strong>tabs.json</strong> - it includes a list of sections visible on the right side of an administrazawiera on listę sekcji widocznych w panelu administracyjnym po prawej stronie: [screensthot] każda sekcja jest opisana tablicą postaci [code]["Basic", "options.basic", "enabled"][/code] pierwszy element tablicy to nazwa sekcji wyświetlana w panelu, drugi element to nazwa pliku bez rozszerzenia "<strong>.json</strong>", którzy przechowuje listę dostępnych w danej sekcji opcji, a trzecia wartość odnosi się do tego czy dana sekcja jest widoczna w panelu. W tym przypadku zostanie w panelu wyświetlony tab <strong>Basic</strong> na podstawie zawartości pliku <strong>options.basic.json</strong>.</li>\r\n	<li>pliki <strong>options.*.json</strong> - zawierają one listę opcji dostępnych w danej sekcji - ich nazwy są ściśle powiązane z zawartością pliku <strong>tabs.json</strong>.</li>\r\n</ul>\r\nKażdy plik options.*.json zawiera w przechowywanym obiekcie trzy główne pola:\r\n<ul>\r\n	<li><strong>groupname</strong> - jest to tytuł sekcji</li>\r\n	<li><strong>groupdesc</strong> - określa opis sekcji wyświetlany bezpośrednio pod tytułem sekcji</li>\r\n	<li><strong>fields</strong> - zawiera tablicę obiektów pól wyświetlanych pod tytułem i opisem sekcji</li>\r\n</ul>\r\nKażde pole definiowane jest przez obiekt zawierający następujące pola:\r\n<ul>\r\n	<li><strong>name</strong> - określa nazwę opcji jaka będzie związana z danym polem. Do nazwy opcji automatycznie jest dodawany prefiks będący nazwą szablonu (przechowywany w zmiennej globalnej <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- określa typ pola. Standardowe rodzaje pól to:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - pole zawierające tekst opisu - nie jest stosowane do przechowywania żadnej wartości opcji</li>\r\n	<li><strong>Text</strong> - najprostsze pole tekstowe pozwalające na wprowadzanie krótkich wartości tekstowych</li>\r\n	<li><strong>Textarea</strong> - pole tekstowe służące do wprowadzania większej ilości wartości tekstowych</li>\r\n	<li><strong>Select</strong> - pole wyboru</li>\r\n	<li><strong>Switcher</strong> - pole wyboru ograniczone do dwóch opcji: "Enabled" i "Disabled"</li>\r\n	<li><strong>Media</strong> - pole pozwalające na wybór grafiki</li>\r\n	<li><strong>WidthHeight</strong> - pole pozwalające na określenie dwóch wartości definiujących szerokość i wysokość (najczęściej wykorzystywane wraz z polem Media).</li>\r\n</ul>\r\nPola te zdefiniowane są w pliku <strong>gavern/form_elements/standard.php</strong> a ich kod powstał na bazie dziedziczenia z klasy <strong>GKFormInput</strong>. Warto pamiętać, że pliki związane z opcjami parsowane są przez plik <strong>gavern/form.parser.php</strong>.Dodatkowo w katalogu <strong>gavern/form_elements</strong> można tworzyć własne typy pól. W GavernWP standardowo zawarliśmy następujące rodzaje pól:\r\n<ul>\r\n	<li><strong>Fonts</strong> - jest to pole generujące opcje związane z wyborem fontów - zastosowane w sekcji <strong>Fonts</strong>.</li>\r\n	<li><strong>Menu</strong> - pole pozwalające wygenerować opcje związane z menu strony - zastosowane w sekcji Navigation.</li>\r\n	<li><strong>TemplateStyle</strong> - pole pozwalające wybrać styl strony - zastosowane na poczatku sekcji <strong>Basic</strong>.</li>\r\n</ul>\r\nOpis tworzenia własnych rodzajów pól szerzej opiszemy w dalszej części tego artykułu.</li>\r\n	<li><strong>label</strong> - określa tekst etykiety widocznej obok pola</li>\r\n	<li><strong>tooltip</strong> - (opcjonalne) pozwala określić treść tooltipa, który pojawi się po najechaniu na etykietę danego pola.</li>\r\n	<li><strong>default</strong> - domyślna wartość danego pola.</li>\r\n	<li><strong>class</strong> - (opcjonalne) pole to pozwala określić klasy CSS dodawane do elementu podczas jego generowania (o ile taką funkcjonalność obsługuje kod pola)</li>\r\n	<li><strong>format</strong> - (opcjonalne) pole określające w postaci wyrażenia regularnego pożądaną zawartosć pola. Przykładowo wartość: [code][a-zA-Z]{2,5}[/code] określa, że dane pole będzie poprawnie wypełnione tylko wtedy, gdy użytkownik poda jako jego wartość ciąg liter dużych lub małych o długości 2 do 5 znaków</li>\r\n	<li><strong>required</strong> - (opcjonalne) pozwala określić czy wypełnienie danego pola jest wymagane</li>\r\n	<li><strong>visibility</strong> - (opcjonalne) określa kiedy dane pole jest widoczne. Reguły widoczności rozdzielane są przecinkiem i tworzone są w formacie <strong>FIELD_NAME=VALUE</strong> - w wypadku kilku reguł widoczności są one traktowane jako połączone operatorem <strong>AND</strong>. Wartość <strong>FIELD_NAME</strong> to nazwa pola bez prefiksu z nazwą szablonu. Przykładowo zapis: [code]option1=10,option2=20[/code] sprawi, że dane pole będzie widoczne dopiero wtedy gdy opcja o nazwie <strong>option1</strong> zostanie ustawiona na wartość <strong>10</strong> i jednocześnie opcja <strong>option2</strong> będzie mieć wartość <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (opcjonalne) pole to jest wykorzystywane do przechowywania dodatkowych wartości np. w wypadku pola typu <strong>Select</strong> do przechowywania nazw i wartości opcji. Jest to pole bardzo przydatne w wypadku tworzenia bardziej rozbudowanych pól, które mogą wymagać dodatkowych opcji konfiguracyjnych.</li>\r\n</ul>\r\nPo dodaniu nowej opcji należy pamiętać o obsłużeniu jej w samym szablonie. Wartość opcji pobieramy używając funkcji get_option według schematu:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\ngdzie <strong>OPTION_NAME</strong> to nazwa opcji z pliku JSON a <strong>DEFAULT_VALUE</strong> to wartość domyślna opcji, która zostanie wykorzystana w momencie kiedy użytkownik sam nie określił jeszcze wartości danej opcji. Co ważne przed <strong>OPTION_NAME</strong> znajduje się znak "<strong>_</strong>", którego nie wolno pominąć. Prefiks z nazwą szablonu jest dodawany w celu rozróżnienia wartości opcji różnych szablonów.\r\n<h3>Tworzenie własnych pól opcji</h3>\r\nPrzy tworzeniu nowego rodzaju pola należy zaczać od stworzenia katalogu zgodnego z nazwą pola np. <strong>CustomField</strong> w katalogu <strong>gavern/form_elements</strong>. Następnie w katalogu tym należy stworzyć plik config.json i wypełnić go według schematu:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\nPola <strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> muszą zawierać konkretne wartości, natomiast pola <strong>js</strong> i <strong>css</strong> są opcjonalne - pozwalają określić czy dane pole ma wykorzystywać dodatkowy kod CSS i JavaScript (wtedy należy jako ich wartość podać nazwę plików z katalogu pola). Należy też stworzyć plik <strong>customfield.php</strong> zawierający klasę <strong>GKFormInputCustomField</strong> dziedziczącą po klasie <strong>GKFormInput</strong>.\r\n\r\nNależy też zadbać o to by plik <strong>customfield.php</strong> zawierał na początku kod zabezpieczający:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nKażda klasa pola powinna zawierać co namniej jedną publiczną metodę - <strong>output</strong> nie pobierającą żadnych dodatkowych argumentów. Metoda ta musi zwracać kod HTML danego pola. Właściwości pola z pliku JSON są dostępne jako pola klasy np. właściwość <strong>required</strong> dostępna jest jako:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nDrugą ważną publiczną metodą każdej klasy pola formularza jest metoda <strong>getValue</strong>, która pobiera jeden argument - <strong>$default</strong>. Jej wykorzystanie jest opcjonalne i przydatne tylko wtedy, kiedy wartość danego pola korzysta z więcej niż jednego pola w bazie danych. Wtedy warto tą metodę nadpisać - jako przykład polecamy lekturę kodu standardowego pola <strong>WidthHeight</strong>, gdzie nadpisanie metody getValue zostało wykorzystane do przechowywania wartości dwóch pól formularza w obrębie jednego głównego pola tworzonego przez klasę <strong>GKInputFormWidthHeight</strong>.\r\n\r\nPozostałe metody klasy powinny być tworzone według uznania autora danego pola formularza.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-6', '', '', '2012-07-27 10:54:44', '2012-07-27 10:54:44', '', 427, 'http://wp1/uncategorized/427-revision-6/', 0, 'revision', '', 0),
(501, 1, '2012-07-27 11:02:20', '2012-07-27 11:02:20', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main files groups:\r\n<ul>\r\n	<li>plik <strong>tabs.json</strong> - it includes a list of sections visible on the right side of an administration panel:  [screensthot] each seckażda sekcja jest opisana tablicą postaci [code]["Basic", "options.basic", "enabled"][/code] pierwszy element tablicy to nazwa sekcji wyświetlana w panelu, drugi element to nazwa pliku bez rozszerzenia "<strong>.json</strong>", którzy przechowuje listę dostępnych w danej sekcji opcji, a trzecia wartość odnosi się do tego czy dana sekcja jest widoczna w panelu. W tym przypadku zostanie w panelu wyświetlony tab <strong>Basic</strong> na podstawie zawartości pliku <strong>options.basic.json</strong>.</li>\r\n	<li>pliki <strong>options.*.json</strong> - zawierają one listę opcji dostępnych w danej sekcji - ich nazwy są ściśle powiązane z zawartością pliku <strong>tabs.json</strong>.</li>\r\n</ul>\r\nKażdy plik options.*.json zawiera w przechowywanym obiekcie trzy główne pola:\r\n<ul>\r\n	<li><strong>groupname</strong> - jest to tytuł sekcji</li>\r\n	<li><strong>groupdesc</strong> - określa opis sekcji wyświetlany bezpośrednio pod tytułem sekcji</li>\r\n	<li><strong>fields</strong> - zawiera tablicę obiektów pól wyświetlanych pod tytułem i opisem sekcji</li>\r\n</ul>\r\nKażde pole definiowane jest przez obiekt zawierający następujące pola:\r\n<ul>\r\n	<li><strong>name</strong> - określa nazwę opcji jaka będzie związana z danym polem. Do nazwy opcji automatycznie jest dodawany prefiks będący nazwą szablonu (przechowywany w zmiennej globalnej <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- określa typ pola. Standardowe rodzaje pól to:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - pole zawierające tekst opisu - nie jest stosowane do przechowywania żadnej wartości opcji</li>\r\n	<li><strong>Text</strong> - najprostsze pole tekstowe pozwalające na wprowadzanie krótkich wartości tekstowych</li>\r\n	<li><strong>Textarea</strong> - pole tekstowe służące do wprowadzania większej ilości wartości tekstowych</li>\r\n	<li><strong>Select</strong> - pole wyboru</li>\r\n	<li><strong>Switcher</strong> - pole wyboru ograniczone do dwóch opcji: "Enabled" i "Disabled"</li>\r\n	<li><strong>Media</strong> - pole pozwalające na wybór grafiki</li>\r\n	<li><strong>WidthHeight</strong> - pole pozwalające na określenie dwóch wartości definiujących szerokość i wysokość (najczęściej wykorzystywane wraz z polem Media).</li>\r\n</ul>\r\nPola te zdefiniowane są w pliku <strong>gavern/form_elements/standard.php</strong> a ich kod powstał na bazie dziedziczenia z klasy <strong>GKFormInput</strong>. Warto pamiętać, że pliki związane z opcjami parsowane są przez plik <strong>gavern/form.parser.php</strong>.Dodatkowo w katalogu <strong>gavern/form_elements</strong> można tworzyć własne typy pól. W GavernWP standardowo zawarliśmy następujące rodzaje pól:\r\n<ul>\r\n	<li><strong>Fonts</strong> - jest to pole generujące opcje związane z wyborem fontów - zastosowane w sekcji <strong>Fonts</strong>.</li>\r\n	<li><strong>Menu</strong> - pole pozwalające wygenerować opcje związane z menu strony - zastosowane w sekcji Navigation.</li>\r\n	<li><strong>TemplateStyle</strong> - pole pozwalające wybrać styl strony - zastosowane na poczatku sekcji <strong>Basic</strong>.</li>\r\n</ul>\r\nOpis tworzenia własnych rodzajów pól szerzej opiszemy w dalszej części tego artykułu.</li>\r\n	<li><strong>label</strong> - określa tekst etykiety widocznej obok pola</li>\r\n	<li><strong>tooltip</strong> - (opcjonalne) pozwala określić treść tooltipa, który pojawi się po najechaniu na etykietę danego pola.</li>\r\n	<li><strong>default</strong> - domyślna wartość danego pola.</li>\r\n	<li><strong>class</strong> - (opcjonalne) pole to pozwala określić klasy CSS dodawane do elementu podczas jego generowania (o ile taką funkcjonalność obsługuje kod pola)</li>\r\n	<li><strong>format</strong> - (opcjonalne) pole określające w postaci wyrażenia regularnego pożądaną zawartosć pola. Przykładowo wartość: [code][a-zA-Z]{2,5}[/code] określa, że dane pole będzie poprawnie wypełnione tylko wtedy, gdy użytkownik poda jako jego wartość ciąg liter dużych lub małych o długości 2 do 5 znaków</li>\r\n	<li><strong>required</strong> - (opcjonalne) pozwala określić czy wypełnienie danego pola jest wymagane</li>\r\n	<li><strong>visibility</strong> - (opcjonalne) określa kiedy dane pole jest widoczne. Reguły widoczności rozdzielane są przecinkiem i tworzone są w formacie <strong>FIELD_NAME=VALUE</strong> - w wypadku kilku reguł widoczności są one traktowane jako połączone operatorem <strong>AND</strong>. Wartość <strong>FIELD_NAME</strong> to nazwa pola bez prefiksu z nazwą szablonu. Przykładowo zapis: [code]option1=10,option2=20[/code] sprawi, że dane pole będzie widoczne dopiero wtedy gdy opcja o nazwie <strong>option1</strong> zostanie ustawiona na wartość <strong>10</strong> i jednocześnie opcja <strong>option2</strong> będzie mieć wartość <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (opcjonalne) pole to jest wykorzystywane do przechowywania dodatkowych wartości np. w wypadku pola typu <strong>Select</strong> do przechowywania nazw i wartości opcji. Jest to pole bardzo przydatne w wypadku tworzenia bardziej rozbudowanych pól, które mogą wymagać dodatkowych opcji konfiguracyjnych.</li>\r\n</ul>\r\nPo dodaniu nowej opcji należy pamiętać o obsłużeniu jej w samym szablonie. Wartość opcji pobieramy używając funkcji get_option według schematu:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\ngdzie <strong>OPTION_NAME</strong> to nazwa opcji z pliku JSON a <strong>DEFAULT_VALUE</strong> to wartość domyślna opcji, która zostanie wykorzystana w momencie kiedy użytkownik sam nie określił jeszcze wartości danej opcji. Co ważne przed <strong>OPTION_NAME</strong> znajduje się znak "<strong>_</strong>", którego nie wolno pominąć. Prefiks z nazwą szablonu jest dodawany w celu rozróżnienia wartości opcji różnych szablonów.\r\n<h3>Tworzenie własnych pól opcji</h3>\r\nPrzy tworzeniu nowego rodzaju pola należy zaczać od stworzenia katalogu zgodnego z nazwą pola np. <strong>CustomField</strong> w katalogu <strong>gavern/form_elements</strong>. Następnie w katalogu tym należy stworzyć plik config.json i wypełnić go według schematu:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\nPola <strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> muszą zawierać konkretne wartości, natomiast pola <strong>js</strong> i <strong>css</strong> są opcjonalne - pozwalają określić czy dane pole ma wykorzystywać dodatkowy kod CSS i JavaScript (wtedy należy jako ich wartość podać nazwę plików z katalogu pola). Należy też stworzyć plik <strong>customfield.php</strong> zawierający klasę <strong>GKFormInputCustomField</strong> dziedziczącą po klasie <strong>GKFormInput</strong>.\r\n\r\nNależy też zadbać o to by plik <strong>customfield.php</strong> zawierał na początku kod zabezpieczający:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nKażda klasa pola powinna zawierać co namniej jedną publiczną metodę - <strong>output</strong> nie pobierającą żadnych dodatkowych argumentów. Metoda ta musi zwracać kod HTML danego pola. Właściwości pola z pliku JSON są dostępne jako pola klasy np. właściwość <strong>required</strong> dostępna jest jako:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nDrugą ważną publiczną metodą każdej klasy pola formularza jest metoda <strong>getValue</strong>, która pobiera jeden argument - <strong>$default</strong>. Jej wykorzystanie jest opcjonalne i przydatne tylko wtedy, kiedy wartość danego pola korzysta z więcej niż jednego pola w bazie danych. Wtedy warto tą metodę nadpisać - jako przykład polecamy lekturę kodu standardowego pola <strong>WidthHeight</strong>, gdzie nadpisanie metody getValue zostało wykorzystane do przechowywania wartości dwóch pól formularza w obrębie jednego głównego pola tworzonego przez klasę <strong>GKInputFormWidthHeight</strong>.\r\n\r\nPozostałe metody klasy powinny być tworzone według uznania autora danego pola formularza.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-7', '', '', '2012-07-27 11:02:20', '2012-07-27 11:02:20', '', 427, 'http://wp1/uncategorized/427-revision-7/', 0, 'revision', '', 0),
(502, 1, '2012-07-27 11:16:46', '2012-07-27 11:16:46', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main files groups:\r\n<ul>\r\n	<li>plik <strong>tabs.json</strong> - it includes a list of sections visible on the right side of an administration panel:  [screensthot] each section is described with a table in the form [code]["Basic", "options.basic", "enabled"][/code] the first element pierwszy element tablicy to nazwa sekcji wyświetlana w panelu, drugi element to nazwa pliku bez rozszerzenia "<strong>.json</strong>", którzy przechowuje listę dostępnych w danej sekcji opcji, a trzecia wartość odnosi się do tego czy dana sekcja jest widoczna w panelu. W tym przypadku zostanie w panelu wyświetlony tab <strong>Basic</strong> na podstawie zawartości pliku <strong>options.basic.json</strong>.</li>\r\n	<li>pliki <strong>options.*.json</strong> - zawierają one listę opcji dostępnych w danej sekcji - ich nazwy są ściśle powiązane z zawartością pliku <strong>tabs.json</strong>.</li>\r\n</ul>\r\nKażdy plik options.*.json zawiera w przechowywanym obiekcie trzy główne pola:\r\n<ul>\r\n	<li><strong>groupname</strong> - jest to tytuł sekcji</li>\r\n	<li><strong>groupdesc</strong> - określa opis sekcji wyświetlany bezpośrednio pod tytułem sekcji</li>\r\n	<li><strong>fields</strong> - zawiera tablicę obiektów pól wyświetlanych pod tytułem i opisem sekcji</li>\r\n</ul>\r\nKażde pole definiowane jest przez obiekt zawierający następujące pola:\r\n<ul>\r\n	<li><strong>name</strong> - określa nazwę opcji jaka będzie związana z danym polem. Do nazwy opcji automatycznie jest dodawany prefiks będący nazwą szablonu (przechowywany w zmiennej globalnej <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- określa typ pola. Standardowe rodzaje pól to:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - pole zawierające tekst opisu - nie jest stosowane do przechowywania żadnej wartości opcji</li>\r\n	<li><strong>Text</strong> - najprostsze pole tekstowe pozwalające na wprowadzanie krótkich wartości tekstowych</li>\r\n	<li><strong>Textarea</strong> - pole tekstowe służące do wprowadzania większej ilości wartości tekstowych</li>\r\n	<li><strong>Select</strong> - pole wyboru</li>\r\n	<li><strong>Switcher</strong> - pole wyboru ograniczone do dwóch opcji: "Enabled" i "Disabled"</li>\r\n	<li><strong>Media</strong> - pole pozwalające na wybór grafiki</li>\r\n	<li><strong>WidthHeight</strong> - pole pozwalające na określenie dwóch wartości definiujących szerokość i wysokość (najczęściej wykorzystywane wraz z polem Media).</li>\r\n</ul>\r\nPola te zdefiniowane są w pliku <strong>gavern/form_elements/standard.php</strong> a ich kod powstał na bazie dziedziczenia z klasy <strong>GKFormInput</strong>. Warto pamiętać, że pliki związane z opcjami parsowane są przez plik <strong>gavern/form.parser.php</strong>.Dodatkowo w katalogu <strong>gavern/form_elements</strong> można tworzyć własne typy pól. W GavernWP standardowo zawarliśmy następujące rodzaje pól:\r\n<ul>\r\n	<li><strong>Fonts</strong> - jest to pole generujące opcje związane z wyborem fontów - zastosowane w sekcji <strong>Fonts</strong>.</li>\r\n	<li><strong>Menu</strong> - pole pozwalające wygenerować opcje związane z menu strony - zastosowane w sekcji Navigation.</li>\r\n	<li><strong>TemplateStyle</strong> - pole pozwalające wybrać styl strony - zastosowane na poczatku sekcji <strong>Basic</strong>.</li>\r\n</ul>\r\nOpis tworzenia własnych rodzajów pól szerzej opiszemy w dalszej części tego artykułu.</li>\r\n	<li><strong>label</strong> - określa tekst etykiety widocznej obok pola</li>\r\n	<li><strong>tooltip</strong> - (opcjonalne) pozwala określić treść tooltipa, który pojawi się po najechaniu na etykietę danego pola.</li>\r\n	<li><strong>default</strong> - domyślna wartość danego pola.</li>\r\n	<li><strong>class</strong> - (opcjonalne) pole to pozwala określić klasy CSS dodawane do elementu podczas jego generowania (o ile taką funkcjonalność obsługuje kod pola)</li>\r\n	<li><strong>format</strong> - (opcjonalne) pole określające w postaci wyrażenia regularnego pożądaną zawartosć pola. Przykładowo wartość: [code][a-zA-Z]{2,5}[/code] określa, że dane pole będzie poprawnie wypełnione tylko wtedy, gdy użytkownik poda jako jego wartość ciąg liter dużych lub małych o długości 2 do 5 znaków</li>\r\n	<li><strong>required</strong> - (opcjonalne) pozwala określić czy wypełnienie danego pola jest wymagane</li>\r\n	<li><strong>visibility</strong> - (opcjonalne) określa kiedy dane pole jest widoczne. Reguły widoczności rozdzielane są przecinkiem i tworzone są w formacie <strong>FIELD_NAME=VALUE</strong> - w wypadku kilku reguł widoczności są one traktowane jako połączone operatorem <strong>AND</strong>. Wartość <strong>FIELD_NAME</strong> to nazwa pola bez prefiksu z nazwą szablonu. Przykładowo zapis: [code]option1=10,option2=20[/code] sprawi, że dane pole będzie widoczne dopiero wtedy gdy opcja o nazwie <strong>option1</strong> zostanie ustawiona na wartość <strong>10</strong> i jednocześnie opcja <strong>option2</strong> będzie mieć wartość <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (opcjonalne) pole to jest wykorzystywane do przechowywania dodatkowych wartości np. w wypadku pola typu <strong>Select</strong> do przechowywania nazw i wartości opcji. Jest to pole bardzo przydatne w wypadku tworzenia bardziej rozbudowanych pól, które mogą wymagać dodatkowych opcji konfiguracyjnych.</li>\r\n</ul>\r\nPo dodaniu nowej opcji należy pamiętać o obsłużeniu jej w samym szablonie. Wartość opcji pobieramy używając funkcji get_option według schematu:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\ngdzie <strong>OPTION_NAME</strong> to nazwa opcji z pliku JSON a <strong>DEFAULT_VALUE</strong> to wartość domyślna opcji, która zostanie wykorzystana w momencie kiedy użytkownik sam nie określił jeszcze wartości danej opcji. Co ważne przed <strong>OPTION_NAME</strong> znajduje się znak "<strong>_</strong>", którego nie wolno pominąć. Prefiks z nazwą szablonu jest dodawany w celu rozróżnienia wartości opcji różnych szablonów.\r\n<h3>Tworzenie własnych pól opcji</h3>\r\nPrzy tworzeniu nowego rodzaju pola należy zaczać od stworzenia katalogu zgodnego z nazwą pola np. <strong>CustomField</strong> w katalogu <strong>gavern/form_elements</strong>. Następnie w katalogu tym należy stworzyć plik config.json i wypełnić go według schematu:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\nPola <strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> muszą zawierać konkretne wartości, natomiast pola <strong>js</strong> i <strong>css</strong> są opcjonalne - pozwalają określić czy dane pole ma wykorzystywać dodatkowy kod CSS i JavaScript (wtedy należy jako ich wartość podać nazwę plików z katalogu pola). Należy też stworzyć plik <strong>customfield.php</strong> zawierający klasę <strong>GKFormInputCustomField</strong> dziedziczącą po klasie <strong>GKFormInput</strong>.\r\n\r\nNależy też zadbać o to by plik <strong>customfield.php</strong> zawierał na początku kod zabezpieczający:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nKażda klasa pola powinna zawierać co namniej jedną publiczną metodę - <strong>output</strong> nie pobierającą żadnych dodatkowych argumentów. Metoda ta musi zwracać kod HTML danego pola. Właściwości pola z pliku JSON są dostępne jako pola klasy np. właściwość <strong>required</strong> dostępna jest jako:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nDrugą ważną publiczną metodą każdej klasy pola formularza jest metoda <strong>getValue</strong>, która pobiera jeden argument - <strong>$default</strong>. Jej wykorzystanie jest opcjonalne i przydatne tylko wtedy, kiedy wartość danego pola korzysta z więcej niż jednego pola w bazie danych. Wtedy warto tą metodę nadpisać - jako przykład polecamy lekturę kodu standardowego pola <strong>WidthHeight</strong>, gdzie nadpisanie metody getValue zostało wykorzystane do przechowywania wartości dwóch pól formularza w obrębie jednego głównego pola tworzonego przez klasę <strong>GKInputFormWidthHeight</strong>.\r\n\r\nPozostałe metody klasy powinny być tworzone według uznania autora danego pola formularza.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-8', '', '', '2012-07-27 11:16:46', '2012-07-27 11:16:46', '', 427, 'http://wp1/uncategorized/427-revision-8/', 0, 'revision', '', 0),
(506, 1, '2012-07-28 13:35:52', '2012-07-28 13:35:52', 'This page presents widget styles available in this theme.\r\n\r\nWe have also included a really useful mechanism - you can put the icon in the header using following syntax:\r\n\r\n[code][icon-name] Header text[/code]\r\n\r\nWhere icon-name is one of <a title="Available classes" href="http://twitter.github.com/bootstrap/base-css.html#icons" target="_blank">available classes</a>.', 'Widget Styles', '', 'publish', 'closed', 'closed', '', 'widget-styles', '', '', '2012-12-15 10:40:41', '2012-12-15 10:40:41', '', 0, 'http://wp1/?page_id=506', 0, 'page', '', 0),
(508, 1, '2012-07-28 13:36:16', '2012-07-28 13:36:16', ' ', '', '', 'publish', 'open', 'open', '', '508', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=508', 19, 'nav_menu_item', '', 0),
(509, 1, '2012-07-28 13:47:34', '2012-07-28 13:47:34', 'Widget areas available in the Meet GavernWP theme:\r\n<a href="http://wp1/wp-content/uploads/2012/07/widget_areas.png"><img class="aligncenter size-full wp-image-510" title="Widget areas" src="http://wp1/wp-content/uploads/2012/07/widget_areas.png" alt="Widget areas" width="752" height="692" /></a>', 'Widget areas', '', 'publish', 'closed', 'closed', '', 'widget-areas', '', '', '2012-08-12 17:25:35', '2012-08-12 17:25:35', '', 0, 'http://wp1/?page_id=509', 0, 'page', '', 0),
(510, 1, '2012-07-28 13:45:30', '2012-07-28 13:45:30', '', 'Widget areas', '', 'inherit', 'open', 'open', '', 'widget_areas', '', '', '2012-07-28 13:45:30', '2012-07-28 13:45:30', '', 509, 'http://wp1/wp-content/uploads/2012/07/widget_areas.png', 0, 'attachment', 'image/png', 0),
(511, 1, '2012-07-28 13:46:25', '2012-07-28 13:46:25', 'Widget areas available in the Meet GavernWP template:\n<a href="http://wp1/wp-content/uploads/2012/07/widget_areas.png"><img class="aligncenter size-full wp-image-510" title="Widget areas" src="http://wp1/wp-content/uploads/2012/07/widget_areas.png" alt="Widget areas" width="752" height="646" /></a>', 'Widget areas', '', 'inherit', 'open', 'open', '', '509-revision', '', '', '2012-07-28 13:46:25', '2012-07-28 13:46:25', '', 509, 'http://wp1/uncategorized/509-revision/', 0, 'revision', '', 0),
(512, 1, '2012-07-28 13:51:41', '2012-07-28 13:51:41', 'Widget areas available in the Meet GavernWP template:\n<a href="http://wp1/wp-content/uploads/2012/07/widget_areas.png"><img class="aligncenter size-full wp-image-510" title="Widget areas" src="http://wp1/wp-content/uploads/2012/07/widget_areas.png" alt="Widget areas" width="752" height="646" /></a>', 'Widget areas', '', 'inherit', 'open', 'open', '', '509-autosave', '', '', '2012-07-28 13:51:41', '2012-07-28 13:51:41', '', 509, 'http://wp1/uncategorized/509-autosave/', 0, 'revision', '', 0),
(513, 1, '2012-07-28 13:49:21', '2012-07-28 13:49:21', ' ', '', '', 'publish', 'open', 'open', '', '513', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=513', 20, 'nav_menu_item', '', 0),
(515, 1, '2012-07-28 13:47:34', '2012-07-28 13:47:34', 'Widget areas available in the Meet GavernWP template:\r\n<a href="http://wp1/wp-content/uploads/2012/07/widget_areas.png"><img class="aligncenter size-full wp-image-510" title="Widget areas" src="http://wp1/wp-content/uploads/2012/07/widget_areas.png" alt="Widget areas" width="752" height="646" /></a>', 'Widget areas', '', 'inherit', 'open', 'open', '', '509-revision-2', '', '', '2012-07-28 13:47:34', '2012-07-28 13:47:34', '', 509, 'http://wp1/uncategorized/509-revision-2/', 0, 'revision', '', 0),
(516, 1, '2012-07-12 13:05:23', '2012-07-12 13:05:23', 'W szablonie budowanym w oparciu o framework GavernWP istnieją trzy kluczowe miejsca związane z brandingiem:\r\n<ul>\r\n	<li>logo strony</li>\r\n	<li>stopka strony</li>\r\n	<li>logo frameworka pod stopką strony</li>\r\n</ul>\r\nZa elementy te odpowiadają następujące opcje panelu administracyjnego:\r\n\r\n[screenshot]\r\n\r\nW wypadku loga frameworka można je jedynie włączyć lub wyłączyć.\r\n\r\nTreść stopki strony definiujemy w opcji <strong>Footer content</strong>. Wyświetlona ona zostanie w dolej części strony najczęściej po prawej stronie witryny.\r\n\r\nNajwięcej parametrów związanych jest z logiem strony. Pierwszy krok w konfiguracji logo strony to wybór typu loga, dostępne są następujące rodzaje logo:\r\n<ul>\r\n	<li><strong>Defined in the CSS code</strong> - logo zdefiniowane jest wtedy w stylu CSS szablonu jako element posiadający klasę <strong>cssLogo</strong>. W tym wypadku poza modyfikacją kodu CSS żadne inne zmiany ustawień nie są potrzebne.</li>\r\n	<li><strong>Image logo</strong> - po wybraniu tej opcji pojawią się dodatkowe opcje: [screenshot]. Należy wybrać grafikę logo oraz określić jej rozmiary.</li>\r\n	<li><strong>Text logo</strong> - podobnie jak w wypadku poprzedniej opcji, także tutaj pojawią się dodatkowe opcje: [screenshot]. Opcja <strong>Template logo text</strong> określa czy tekst główny logo jak i podpis pod nim będą brane z ustawień Wordpress (<strong>from Wordpress settings</strong>) czy też będą określone  przez użytkownika (<strong>Own</strong>). W wypadku wybrania tej drugiej opcji pojawią się kolejne dwa pola, które trzeba wypełnić: [screenshot].</li>\r\n	<li><strong>None</strong> - w tym wypadku logo w ogóle nie zostanie wyświetlone.</li>\r\n</ul>\r\n<div><strong>Wskazówka:</strong> opcja <strong>None</strong> jest przydatna w sytuacji gdy sami chcemy w kodzie szablonu zdefiniować kod logo - wystarczy wtedy dodać własny kod do odpowiedniego pliku (najczęściej <strong>layouts/header.php</strong>).</div>\r\n&nbsp;', 'Template branding settings', '', 'inherit', 'open', 'open', '', '394-revision-2', '', '', '2012-07-12 13:05:23', '2012-07-12 13:05:23', '', 394, 'http://wp1/uncategorized/394-revision-2/', 0, 'revision', '', 0),
(517, 1, '2012-07-30 08:12:10', '2012-07-30 08:12:10', 'W szablonie budowanym w oparciu o framework GavernWP istnieją trzy kluczowe miejsca związane z brandingiem:\r\n<ul>\r\n	<li>logo strony</li>\r\n	<li>stopka strony</li>\r\n	<li>logo frameworka pod stopką strony</li>\r\n</ul>\r\nZa elementy te odpowiadają następujące opcje panelu administracyjnego:\r\n\r\n[screenshot]\r\n\r\nW wypadku loga frameworka można je jedynie włączyć lub wyłączyć.\r\n\r\nTreść stopki strony definiujemy w opcji <strong>Footer content</strong>. Wyświetlona ona zostanie w dolej części strony najczęściej po prawej stronie witryny.\r\n\r\nNajwięcej parametrów związanych jest z logiem strony. Pierwszy krok w konfiguracji logo strony to wybór typu loga, dostępne są następujące rodzaje logo:\r\n<ul>\r\n	<li><strong>Defined in the CSS code</strong> - logo zdefiniowane jest wtedy w stylu CSS szablonu jako element posiadający klasę <strong>cssLogo</strong>. W tym wypadku poza modyfikacją kodu CSS żadne inne zmiany ustawień nie są potrzebne.</li>\r\n	<li><strong>Image logo</strong> - po wybraniu tej opcji pojawią się dodatkowe opcje: [screenshot]. Należy wybrać grafikę logo oraz określić jej rozmiary.</li>\r\n	<li><strong>Text logo</strong> - podobnie jak w wypadku poprzedniej opcji, także tutaj pojawią się dodatkowe opcje: [screenshot]. Opcja <strong>Template logo text</strong> określa czy tekst główny logo jak i podpis pod nim będą brane z ustawień Wordpress (<strong>from Wordpress settings</strong>) czy też będą określone  przez użytkownika (<strong>Own</strong>). W wypadku wybrania tej drugiej opcji pojawią się kolejne dwa pola, które trzeba wypełnić: [screenshot].</li>\r\n	<li><strong>None</strong> - w tym wypadku logo w ogóle nie zostanie wyświetlone.</li>\r\n</ul>\r\n<div><strong>Wskazówka:</strong> opcja <strong>None</strong> jest przydatna w sytuacji gdy sami chcemy w kodzie szablonu zdefiniować kod logo - wystarczy wtedy dodać własny kod do odpowiedniego pliku (najczęściej <strong>layouts/header.php</strong>).</div>\r\n&nbsp;', 'Template branding settings', '', 'inherit', 'open', 'open', '', '394-revision-3', '', '', '2012-07-30 08:12:10', '2012-07-30 08:12:10', '', 394, 'http://wp1/uncategorized/394-revision-3/', 0, 'revision', '', 0),
(518, 1, '2012-07-30 08:12:38', '2012-07-30 08:12:38', 'W szablonie budowanym w oparciu o framework GavernWP istnieją trzy kluczowe miejsca związane z brandingiem:\r\n<ul>\r\n	<li>logo strony</li>\r\n	<li>stopka strony</li>\r\n	<li>logo frameworka pod stopką strony</li>\r\n</ul>\r\nZa elementy te odpowiadają następujące opcje panelu administracyjnego:\r\n\r\n[screenshot]\r\n\r\nW wypadku loga frameworka można je jedynie włączyć lub wyłączyć.\r\n\r\nTreść stopki strony definiujemy w opcji <strong>Footer content</strong>. Wyświetlona ona zostanie w dolej części strony najczęściej po prawej stronie witryny.\r\n\r\nNajwięcej parametrów związanych jest z logiem strony. Pierwszy krok w konfiguracji logo strony to wybór typu loga, dostępne są następujące rodzaje logo:\r\n<ul>\r\n	<li><strong>Defined in the CSS code</strong> - logo zdefiniowane jest wtedy w stylu CSS szablonu jako element posiadający klasę <strong>cssLogo</strong>. W tym wypadku poza modyfikacją kodu CSS żadne inne zmiany ustawień nie są potrzebne.</li>\r\n	<li><strong>Image logo</strong> - po wybraniu tej opcji pojawią się dodatkowe opcje: [screenshot]. Należy wybrać grafikę logo oraz określić jej rozmiary.</li>\r\n	<li><strong>Text logo</strong> - podobnie jak w wypadku poprzedniej opcji, także tutaj pojawią się dodatkowe opcje: [screenshot]. Opcja <strong>Template logo text</strong> określa czy tekst główny logo jak i podpis pod nim będą brane z ustawień Wordpress (<strong>from Wordpress settings</strong>) czy też będą określone  przez użytkownika (<strong>Own</strong>). W wypadku wybrania tej drugiej opcji pojawią się kolejne dwa pola, które trzeba wypełnić: [screenshot].</li>\r\n	<li><strong>None</strong> - w tym wypadku logo w ogóle nie zostanie wyświetlone.</li>\r\n</ul>\r\n<div><strong>Wskazówka:</strong> opcja <strong>None</strong> jest przydatna w sytuacji gdy sami chcemy w kodzie szablonu zdefiniować kod logo - wystarczy wtedy dodać własny kod do odpowiedniego pliku (najczęściej <strong>layouts/header.php</strong>).</div>\r\n&nbsp;', 'Template branding settings', '', 'inherit', 'open', 'open', '', '394-revision-4', '', '', '2012-07-30 08:12:38', '2012-07-30 08:12:38', '', 394, 'http://wp1/uncategorized/394-revision-4/', 0, 'revision', '', 0),
(519, 1, '2012-07-14 08:18:41', '2012-07-14 08:18:41', 'Sekcja opcji związanych z Social API zawiera 5 grup opcji:\r\n<ul>\r\n	<li>opcje związane z udostępnianiem na Facebook</li>\r\n	<li>opcje związane z udostępnianiem na G+</li>\r\n	<li>opcje związane z udostępnianiem na Twitter</li>\r\n	<li>opcje związane z udostępnianiem na Pinterest</li>\r\n	<li>opcje pozwalające na włączenie/wyłączenie Social API na poszczególnych podstronach.</li>\r\n</ul>\r\nOpcje związane z udostępnianiem są odpowiednikiem parametrów dostępnych w edytorach online, służących do tworzenia przycisków:\r\n<ul>\r\n	<li><a href="https://developers.facebook.com/docs/reference/plugins/like/" target="_blank">Facebook - ''like it'' button</a></li>\r\n	<li><a href="https://developers.google.com/+/plugins/+1button/" target="_blank">Goggle Plus - ''+1'' button</a></li>\r\n	<li><a href="https://dev.twitter.com/docs/tweet-button" target="_blank">Twitter - ''tweet'' button</a></li>\r\n	<li><a href="http://pinterest.com/about/goodies/" target="_blank">Pinterest - ''pin it'' button</a></li>\r\n</ul>\r\nOstatnia grupa opcji pozwala określić gdzie będą wyświetlane - dzięki opcji <strong>Include/Exclude specified articles from Social API</strong> można w ogóle wyłączyć Social API lub włączyć/wyłączyć tą funkcjonalność tylko dla wybranych postów, podstron i kategorii.\r\n\r\nListę postów, podstron i kategorii określamy w trzech ostatnich opcjach:\r\n\r\n[screenshot]\r\n\r\njako ciąg ID, slug lub nazw danych postów, podstron lub kategorii porozdzielanych przecinkami np. [code]1,5,25[/code] lub [code]typography,template-settings,template-essentials[/code]', 'Social API settings', '', 'inherit', 'open', 'open', '', '424-revision-2', '', '', '2012-07-14 08:18:41', '2012-07-14 08:18:41', '', 424, 'http://wp1/uncategorized/424-revision-2/', 0, 'revision', '', 0),
(520, 1, '2012-07-30 10:29:18', '2012-07-30 10:29:18', 'A section of options connected with Social API includes five groups of options:\r\n<ul>\r\n	<li>options connected with sharing at Facebook</li>\r\n	<li>options connected with sharing on G+</li>\r\n	<li>options connected with sharing on Twitter</li>\r\n	<li>options connected with sharing on Pinterest</li>\r\n	<li>opcje pozwalające na włączenie/wyłączenie Social API na poszczególnych podstronach.</li>\r\n</ul>\r\nOpcje związane z udostępnianiem są odpowiednikiem parametrów dostępnych w edytorach online, służących do tworzenia przycisków:\r\n<ul>\r\n	<li><a href="https://developers.facebook.com/docs/reference/plugins/like/" target="_blank">Facebook - ''like it'' button</a></li>\r\n	<li><a href="https://developers.google.com/+/plugins/+1button/" target="_blank">Goggle Plus - ''+1'' button</a></li>\r\n	<li><a href="https://dev.twitter.com/docs/tweet-button" target="_blank">Twitter - ''tweet'' button</a></li>\r\n	<li><a href="http://pinterest.com/about/goodies/" target="_blank">Pinterest - ''pin it'' button</a></li>\r\n</ul>\r\nOstatnia grupa opcji pozwala określić gdzie będą wyświetlane - dzięki opcji <strong>Include/Exclude specified articles from Social API</strong> można w ogóle wyłączyć Social API lub włączyć/wyłączyć tą funkcjonalność tylko dla wybranych postów, podstron i kategorii.\r\n\r\nListę postów, podstron i kategorii określamy w trzech ostatnich opcjach:\r\n\r\n[screenshot]\r\n\r\njako ciąg ID, slug lub nazw danych postów, podstron lub kategorii porozdzielanych przecinkami np. [code]1,5,25[/code] lub [code]typography,template-settings,template-essentials[/code]', 'Social API settings', '', 'inherit', 'open', 'open', '', '424-revision-3', '', '', '2012-07-30 10:29:18', '2012-07-30 10:29:18', '', 424, 'http://wp1/uncategorized/424-revision-3/', 0, 'revision', '', 0),
(523, 1, '2012-07-13 14:02:25', '2012-07-13 14:02:25', 'Podstawowe ustawienia frameworka GavernWP pozwalają na określenie podstawowych parametrów związanych z wyświetlaniem strony:\r\n\r\n[screenshot]\r\n\r\nPierwsza opcja pozwala na wybór wersji kolorystycznej szablonu. W jej miejsce może pojawić się kilka różnych pól zależnie od zawartości pliku konfiguracyjnego <strong>styles.json</strong>.\r\n\r\nPo opcji/opcjach wyboru styli szablonu znajduje się opcja pozwalająca włączyć style-switcher - jest to element pozwalający użytkownikowi strony samodzielnie wybrać styl szablonu.\r\n\r\nOpcja "<strong>Use header image</strong>" pozwala określić czy na pozycji widżetów header w sytuacji gdy nie ma włączonego żadnego widżetu ma pojawiać się grafika. Grafikę tę można określić w live editorze szablonów w sekcji <strong>Header Image</strong>.\r\n\r\nKolejne dwie opcje związane są z włączeniem elementów breadcrumbs i font-size switcher na stronie. Do wyboru mamy opcje <strong>Enabled</strong>, <strong>Disabled</strong> oraz <strong>Conditional rule</strong> - wtedy w polu <strong>Conditional rule</strong> należy podać regułę korzystającą z <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> oraz operatorów logicznych języka PHP. Np. reguła wyświetlająca element breadcrumbs tylko na stronie głównej oraz w kategorii o nazwie "Meet GavernWP" będzie miała następującą postać: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\r\n\r\nOpcja "<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" jest użyteczna w momencie kiedy zamiast wpisów na stronie głównej chcemy umieścić jakiś widżet - wtedy należy ją włączyć i na pozycji widżetów <strong>mainbody</strong> umieścić potrzebny nam widżet, który zastąpi standardową listę postów generowaną przez Wordpress.\r\n\r\nOstatnia opcja "<strong>Show author info</strong>" pozwala na wyświetlenie pod każdym postem informacji o jego autorze następującej postaci:\r\n\r\n[screenshot]\r\n\r\n&nbsp;', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-revision-2', '', '', '2012-07-13 14:02:25', '2012-07-13 14:02:25', '', 416, 'http://wp1/uncategorized/416-revision-2/', 0, 'revision', '', 0),
(524, 1, '2012-07-30 12:53:32', '2012-07-30 12:53:32', 'Basic settings of GavernWP allow to specify basic parameters connected with page''s display:\r\n\r\n[screenshot]\r\n\r\nThe first option allows to choose a color version of a template. In this place, there may appear a few various fields depending on the conent of <strong>styles.json</strong> configuration file.\r\n\r\nAfter an option/options\r\n\r\nPo opcji/opcjach wyboru styli szablonu znajduje się opcja pozwalająca włączyć style-switcher - jest to element pozwalający użytkownikowi strony samodzielnie wybrać styl szablonu.\r\n\r\nOpcja "<strong>Use header image</strong>" pozwala określić czy na pozycji widżetów header w sytuacji gdy nie ma włączonego żadnego widżetu ma pojawiać się grafika. Grafikę tę można określić w live editorze szablonów w sekcji <strong>Header Image</strong>.\r\n\r\nKolejne dwie opcje związane są z włączeniem elementów breadcrumbs i font-size switcher na stronie. Do wyboru mamy opcje <strong>Enabled</strong>, <strong>Disabled</strong> oraz <strong>Conditional rule</strong> - wtedy w polu <strong>Conditional rule</strong> należy podać regułę korzystającą z <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> oraz operatorów logicznych języka PHP. Np. reguła wyświetlająca element breadcrumbs tylko na stronie głównej oraz w kategorii o nazwie "Meet GavernWP" będzie miała następującą postać: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\r\n\r\nOpcja "<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" jest użyteczna w momencie kiedy zamiast wpisów na stronie głównej chcemy umieścić jakiś widżet - wtedy należy ją włączyć i na pozycji widżetów <strong>mainbody</strong> umieścić potrzebny nam widżet, który zastąpi standardową listę postów generowaną przez Wordpress.\r\n\r\nOstatnia opcja "<strong>Show author info</strong>" pozwala na wyświetlenie pod każdym postem informacji o jego autorze następującej postaci:\r\n\r\n[screenshot]\r\n\r\n&nbsp;', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-revision-3', '', '', '2012-07-30 12:53:32', '2012-07-30 12:53:32', '', 416, 'http://wp1/uncategorized/416-revision-3/', 0, 'revision', '', 0),
(525, 1, '2012-07-30 13:03:46', '2012-07-30 13:03:46', 'Basic settings of GavernWP allow to specify basic parameters connected with page''s display:\r\n\r\n[screenshot]\r\n\r\nThe first option allows to choose a color version of a template. In this place, there may appear a few various fields depending on the conent of <strong>styles.json</strong> configuration file.\r\n\r\nThere is an option allowing to switch a style-switcher after an option/options\r\n\r\nPo opcji/opcjach wyboru styli szablonu znajduje się opcja pozwalająca włączyć style-switcher - jest to element pozwalający użytkownikowi strony samodzielnie wybrać styl szablonu.\r\n\r\nOpcja "<strong>Use header image</strong>" pozwala określić czy na pozycji widżetów header w sytuacji gdy nie ma włączonego żadnego widżetu ma pojawiać się grafika. Grafikę tę można określić w live editorze szablonów w sekcji <strong>Header Image</strong>.\r\n\r\nKolejne dwie opcje związane są z włączeniem elementów breadcrumbs i font-size switcher na stronie. Do wyboru mamy opcje <strong>Enabled</strong>, <strong>Disabled</strong> oraz <strong>Conditional rule</strong> - wtedy w polu <strong>Conditional rule</strong> należy podać regułę korzystającą z <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> oraz operatorów logicznych języka PHP. Np. reguła wyświetlająca element breadcrumbs tylko na stronie głównej oraz w kategorii o nazwie "Meet GavernWP" będzie miała następującą postać: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\r\n\r\nOpcja "<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" jest użyteczna w momencie kiedy zamiast wpisów na stronie głównej chcemy umieścić jakiś widżet - wtedy należy ją włączyć i na pozycji widżetów <strong>mainbody</strong> umieścić potrzebny nam widżet, który zastąpi standardową listę postów generowaną przez Wordpress.\r\n\r\nOstatnia opcja "<strong>Show author info</strong>" pozwala na wyświetlenie pod każdym postem informacji o jego autorze następującej postaci:\r\n\r\n[screenshot]\r\n\r\n&nbsp;', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-revision-4', '', '', '2012-07-30 13:03:46', '2012-07-30 13:03:46', '', 416, 'http://wp1/uncategorized/416-revision-4/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(526, 1, '2012-07-30 13:26:40', '2012-07-30 13:26:40', 'Basic settings of GavernWP allow to specify basic parameters connected with page''s display:\r\n\r\n[screenshot]\r\n\r\nThe first option allows to choose a color version of a template. In this place, there may appear a few various fields depending on the conent of <strong>styles.json</strong> configuration file.\r\n\r\nThere is an option allowing to switch a style-switcher after an option/options of choosing template''s styles  - it is an element allowing for a website''s user to choose a template style himself/herself.\r\n\r\n&nbsp;\r\n\r\nOpcja "<strong>Use header image</strong>" pozwala określić czy na pozycji widżetów header w sytuacji gdy nie ma włączonego żadnego widżetu ma pojawiać się grafika. Grafikę tę można określić w live editorze szablonów w sekcji <strong>Header Image</strong>.\r\n\r\nKolejne dwie opcje związane są z włączeniem elementów breadcrumbs i font-size switcher na stronie. Do wyboru mamy opcje <strong>Enabled</strong>, <strong>Disabled</strong> oraz <strong>Conditional rule</strong> - wtedy w polu <strong>Conditional rule</strong> należy podać regułę korzystającą z <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> oraz operatorów logicznych języka PHP. Np. reguła wyświetlająca element breadcrumbs tylko na stronie głównej oraz w kategorii o nazwie "Meet GavernWP" będzie miała następującą postać: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\r\n\r\nOpcja "<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" jest użyteczna w momencie kiedy zamiast wpisów na stronie głównej chcemy umieścić jakiś widżet - wtedy należy ją włączyć i na pozycji widżetów <strong>mainbody</strong> umieścić potrzebny nam widżet, który zastąpi standardową listę postów generowaną przez Wordpress.\r\n\r\nOstatnia opcja "<strong>Show author info</strong>" pozwala na wyświetlenie pod każdym postem informacji o jego autorze następującej postaci:\r\n\r\n[screenshot]\r\n\r\n&nbsp;', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-revision-5', '', '', '2012-07-30 13:26:40', '2012-07-30 13:26:40', '', 416, 'http://wp1/uncategorized/416-revision-5/', 0, 'revision', '', 0),
(527, 1, '2012-07-30 13:28:23', '2012-07-30 13:28:23', 'Basic settings of GavernWP allow to specify basic parameters connected with page''s display:\r\n\r\n[screenshot]\r\n\r\nThe first option allows to choose a color version of a template. In this place, there may appear a few various fields depending on the conent of <strong>styles.json</strong> configuration file.\r\n\r\nThere is an option allowing to switch a style-switcher after an option/options of choosing template''s styles  - it is an element allowing for a website''s user to choose a template style himself/herself.\r\n\r\n"Use header image" option allows to specify whether\r\n\r\nOpcja "<strong>Use header image</strong>" pozwala określić czy na pozycji widżetów header w sytuacji gdy nie ma włączonego żadnego widżetu ma pojawiać się grafika. Grafikę tę można określić w live editorze szablonów w sekcji <strong>Header Image</strong>.\r\n\r\nKolejne dwie opcje związane są z włączeniem elementów breadcrumbs i font-size switcher na stronie. Do wyboru mamy opcje <strong>Enabled</strong>, <strong>Disabled</strong> oraz <strong>Conditional rule</strong> - wtedy w polu <strong>Conditional rule</strong> należy podać regułę korzystającą z <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> oraz operatorów logicznych języka PHP. Np. reguła wyświetlająca element breadcrumbs tylko na stronie głównej oraz w kategorii o nazwie "Meet GavernWP" będzie miała następującą postać: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\r\n\r\nOpcja "<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" jest użyteczna w momencie kiedy zamiast wpisów na stronie głównej chcemy umieścić jakiś widżet - wtedy należy ją włączyć i na pozycji widżetów <strong>mainbody</strong> umieścić potrzebny nam widżet, który zastąpi standardową listę postów generowaną przez Wordpress.\r\n\r\nOstatnia opcja "<strong>Show author info</strong>" pozwala na wyświetlenie pod każdym postem informacji o jego autorze następującej postaci:\r\n\r\n[screenshot]\r\n\r\n&nbsp;', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-revision-6', '', '', '2012-07-30 13:28:23', '2012-07-30 13:28:23', '', 416, 'http://wp1/uncategorized/416-revision-6/', 0, 'revision', '', 0),
(528, 1, '2012-08-07 09:42:48', '2012-08-07 09:42:48', 'Basic settings of GavernWP allow to specify basic parameters connected with page''s display:\r\n\r\n[screenshot]\r\n\r\nThe first option allows to choose a color version of a template. In this place, there may appear a few various fields depending on the conent of <strong>styles.json</strong> configuration file.\r\n\r\nThere is an option allowing to switch a style-switcher after an option/options of choosing template''s styles  - it is an element allowing for a website''s user to choose a template style himself/herself.\r\n\r\n<strong>"Use header image"</strong> option allows to specify whether there are some images in the case where there are no widgets switched on, on a header widget position. These images can be specified in a templates live editor in a <strong>Header Image</strong> section.\r\n\r\nThe next two options are connected with switching on breadcrumbs and font-size switcher elements on a website. There are the following options to choose from: <strong>Enabled</strong>, <strong>Disabled</strong> and <strong>Conditional rule</strong> - then, you have to set a rule using <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of PHP language in a <strong>Conditional rule</strong> field, e.g. a rule displayinga a breadcrumbs element\r\n\r\nKolejne dwie opcje związane są z włączeniem elementów breadcrumbs i font-size switcher na stronie. Do wyboru mamy opcje <strong>Enabled</strong>, <strong>Disabled</strong> oraz <strong>Conditional rule</strong> - wtedy w polu <strong>Conditional rule</strong> należy podać regułę korzystającą z <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> oraz operatorów logicznych języka PHP. Np. reguła wyświetlająca element breadcrumbs tylko na stronie głównej oraz w kategorii o nazwie "Meet GavernWP" będzie miała następującą postać: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\r\n\r\nOpcja "<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" jest użyteczna w momencie kiedy zamiast wpisów na stronie głównej chcemy umieścić jakiś widżet - wtedy należy ją włączyć i na pozycji widżetów <strong>mainbody</strong> umieścić potrzebny nam widżet, który zastąpi standardową listę postów generowaną przez Wordpress.\r\n\r\nOstatnia opcja "<strong>Show author info</strong>" pozwala na wyświetlenie pod każdym postem informacji o jego autorze następującej postaci:\r\n\r\n[screenshot]\r\n\r\n&nbsp;', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-revision-7', '', '', '2012-08-07 09:42:48', '2012-08-07 09:42:48', '', 416, 'http://wp1/uncategorized/416-revision-7/', 0, 'revision', '', 0),
(529, 1, '2012-08-07 09:54:39', '2012-08-07 09:54:39', 'Basic settings of GavernWP allow to specify basic parameters connected with page''s display:\r\n\r\n[screenshot]\r\n\r\nThe first option allows to choose a color version of a template. In this place, there may appear a few various fields depending on the conent of <strong>styles.json</strong> configuration file.\r\n\r\nThere is an option allowing to switch a style-switcher after an option/options of choosing template''s styles  - it is an element allowing for a website''s user to choose a template style himself/herself.\r\n\r\n<strong>"Use header image"</strong> option allows to specify whether there are some images in the case where there are no widgets switched on, on a header widget position. These images can be specified in a templates live editor in a <strong>Header Image</strong> section.\r\n\r\nThe next two options are connected with switching on breadcrumbs and font-size switcher elements on a website. There are the following options to choose from: <strong>Enabled</strong>, <strong>Disabled</strong> and <strong>Conditional rule</strong> - then, you have to set a rule using <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of PHP language in a <strong>Conditional rule</strong> field, e.g. a rule displayinga a breadcrumbs element on the homepage and in the "Meet GavernWP" category will be in the following form: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\r\n\r\n"<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" option is useful when you want to place a widget\r\n\r\nOpcja "<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" jest użyteczna w momencie kiedy zamiast wpisów na stronie głównej chcemy umieścić jakiś widżet - wtedy należy ją włączyć i na pozycji widżetów <strong>mainbody</strong> umieścić potrzebny nam widżet, który zastąpi standardową listę postów generowaną przez Wordpress.\r\n\r\nOstatnia opcja "<strong>Show author info</strong>" pozwala na wyświetlenie pod każdym postem informacji o jego autorze następującej postaci:\r\n\r\n[screenshot]\r\n\r\n&nbsp;', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-revision-8', '', '', '2012-08-07 09:54:39', '2012-08-07 09:54:39', '', 416, 'http://wp1/uncategorized/416-revision-8/', 0, 'revision', '', 0),
(530, 1, '2012-07-13 13:50:16', '2012-07-13 13:50:16', 'GavernWP posiada wbudowane ustawienia SEO, które pozwalają nadpisać standardowe ustawienia SEO Wordpress. Po włączeniu opcji "Use Gavern SEO settings" pojawi się szereg opcji związanych z SEO:\r\n\r\n[screenshot]\r\n\r\nPierwsza grupa opcji związana jest z tytułem strony:\r\n<ul>\r\n	<li><strong>Use blogname in title</strong> - opcja ta pozwala włączyć pokazywanie nazwy bloga w tytule</li>\r\n	<li><strong>Separator used in title</strong> - określa znak znajdujący się pomiędzy opisem tytułu a nazwą strony</li>\r\n	<li><strong>Title - description</strong> - pozwala określić opis tytułu strony (pierwsza część tytułu - przed separatorem)</li>\r\n	<li><strong>Title - blogname</strong> - pozwala określić nazwę strony (druga część tytułu - po separatorze)</li>\r\n</ul>\r\nPozostałe opcje pozwalają włączyć zaawansowane zarządzanie metatagami <strong>keywords</strong> i <strong>description</strong>:\r\n\r\n[screenshot]\r\n\r\nW wypadku strony głównej wartości tych metatagów określane są od razu w panelu ustawień SEO, natomiast w wypadku podstron dla obu metatagów dostępne są dwa ustawienia:\r\n<ul>\r\n	<li><strong>Disabled</strong></li>\r\n	<li><strong>Enabled (custom field in the post editor)</strong></li>\r\n</ul>\r\nW wypadku włączenia tych ustawień pod edytorem postów pojawią się dwa dodatkowe pola:\r\n\r\n[screenshot]\r\n\r\nIch wypełnienie spowoduje stworzenie metatagów wykorzystywanych tylko na danej podstronie z wpisem.', 'SEO settings', '', 'inherit', 'open', 'open', '', '413-revision-2', '', '', '2012-07-13 13:50:16', '2012-07-13 13:50:16', '', 413, 'http://wp1/uncategorized/413-revision-2/', 0, 'revision', '', 0),
(531, 1, '2012-07-16 07:23:41', '2012-07-16 07:23:41', 'Jednym z kluczowych elementów wpływających na wygląd strony WWW jest właściwy wybór czcionek zastosowanych do prezentacji tekstu.\r\n\r\nGavernWP umożliwia łatwy wybór czcionek przypisanych do określonych przez użytkownika selektorów CSS.\r\n\r\nAby ułatwić obsługę wielu różnych czcionek na jednej stronie GavernWP obsługuje grupy czcionek - każa grupa pozwala na przypisanie danej czcionki do wybranych przez użytkownika selektorów:\r\n\r\n[screenshot]\r\n\r\nGrupy czcionek zdefiniowane są w pliku konfiguracyjnym <strong>fonts.json</strong>. Dodanie nowej grupy czcionek jest bardzo proste - wystarczy zdefiniować kolejny obiekt postaci:\r\n\r\n[code]{\r\n"full_name": "Full name of the fonts group",\r\n"short_name": "short name of the fonts group using only alphanumeric characters",\r\n"description": "Short description of the font family"\r\n}[/code]\r\n\r\nPo dodaniu takiego obiektu w tablicy zawartej w pliku <strong>fonts.json </strong>ujrzymy w panelu administracyjnym kolejną grupę czcionek, którą można zarządzać.\r\n\r\nDla każdej grupy czcionek należy określić trzy podstawowe wartości:\r\n<ul>\r\n	<li>rodzaj zastosowanej czcionki</li>\r\n	<li>czcionka danego rodzaju</li>\r\n	<li>selektory powiązane z daną czcionką</li>\r\n</ul>\r\nOkreślenie rodzaju czcionki ogranicza się do wyboru jednego z trzech typów czcionek:\r\n<ul>\r\n	<li><strong>Standard fonts</strong> - standardowe zestawy czcionek dostępne na większości komputerów - należy wybrać daną czcionkę z listy pojawiającej się pod polem wyboru rodzaju czcionki: [screenshot]</li>\r\n	<li><strong>Fonts Squirrel</strong> - czcionki pobrane ze strony <a href="http://www.fontsquirrel.com/" target="_blank">Font Squirrel</a> - należy pobrać @font-face kit danej czcionki i umieścić jego zawartość w katalogu <strong>fonts</strong>. Ważne jest by folder miał taką samą nazwę jak nazwa czcionki zastosowana w pliku <strong>stylesheet.css</strong> znajdującym się w nowym katalogu. Po dodaniu tak przygotowanego katalogu dana czcionka pojawi się na liście wyboru: [screenshot]</li>\r\n	<li><strong>Google Web Fonts</strong> - czcionki pochodzace z zasobów strony <a href="http://www.google.com/webfonts" target="_blank">Google Web Fonts</a> w tym wypadku należy określić adres URL danej czcionki: [screenshot]</li>\r\n</ul>\r\nOstatni etap to określenie selektorów zwiąanych z daną czcionką:\r\n\r\n[screenshot]\r\n\r\nPo zapisaniu ustawień efekty powinny być od razu widoczne na stronie - nie jest wymagane wykonywanie żadnych dodatkowych operacji.', 'Fonts settings', '', 'inherit', 'open', 'open', '', '410-revision-3', '', '', '2012-07-16 07:23:41', '2012-07-16 07:23:41', '', 410, 'http://wp1/uncategorized/410-revision-3/', 0, 'revision', '', 0),
(532, 1, '2012-08-08 13:06:58', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-08 13:06:58', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=532', 0, 'post', '', 0),
(533, 1, '2012-08-08 13:07:41', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-08 13:07:41', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=533', 0, 'post', '', 0),
(534, 1, '2012-08-08 13:08:07', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-08 13:08:07', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=534', 0, 'post', '', 0),
(535, 1, '2012-08-08 13:08:34', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-08 13:08:34', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=535', 0, 'post', '', 0),
(544, 1, '2012-08-07 13:23:25', '2012-08-07 13:23:25', 'One of the key elements which has influence on website''s look is an appropriate choice of fonts used for text presentation.\r\n\r\nGavernWP allows to choose fonts easily which are assigned to CSS selectors specified by a user.\r\n\r\nIn order to simplify support for many fonts on one page, GavernWP supports groups of fonts - each group allows to assign a font given to selectors chosen by a user:\r\n\r\n[screenshot]\r\n\r\nGroups of fonts are defined in a configuration file called fonts.json. Adding\r\n\r\nGrupy czcionek zdefiniowane są w pliku konfiguracyjnym <strong>fonts.json</strong>. Dodanie nowej grupy czcionek jest bardzo proste - wystarczy zdefiniować kolejny obiekt postaci:\r\n\r\n[code]{\r\n"full_name": "Full name of the fonts group",\r\n"short_name": "short name of the fonts group using only alphanumeric characters",\r\n"description": "Short description of the font family"\r\n}[/code]\r\n\r\nPo dodaniu takiego obiektu w tablicy zawartej w pliku <strong>fonts.json </strong>ujrzymy w panelu administracyjnym kolejną grupę czcionek, którą można zarządzać.\r\n\r\nDla każdej grupy czcionek należy określić trzy podstawowe wartości:\r\n<ul>\r\n	<li>rodzaj zastosowanej czcionki</li>\r\n	<li>czcionka danego rodzaju</li>\r\n	<li>selektory powiązane z daną czcionką</li>\r\n</ul>\r\nOkreślenie rodzaju czcionki ogranicza się do wyboru jednego z trzech typów czcionek:\r\n<ul>\r\n	<li><strong>Standard fonts</strong> - standardowe zestawy czcionek dostępne na większości komputerów - należy wybrać daną czcionkę z listy pojawiającej się pod polem wyboru rodzaju czcionki: [screenshot]</li>\r\n	<li><strong>Fonts Squirrel</strong> - czcionki pobrane ze strony <a href="http://www.fontsquirrel.com/" target="_blank">Font Squirrel</a> - należy pobrać @font-face kit danej czcionki i umieścić jego zawartość w katalogu <strong>fonts</strong>. Ważne jest by folder miał taką samą nazwę jak nazwa czcionki zastosowana w pliku <strong>stylesheet.css</strong> znajdującym się w nowym katalogu. Po dodaniu tak przygotowanego katalogu dana czcionka pojawi się na liście wyboru: [screenshot]</li>\r\n	<li><strong>Google Web Fonts</strong> - czcionki pochodzace z zasobów strony <a href="http://www.google.com/webfonts" target="_blank">Google Web Fonts</a> w tym wypadku należy określić adres URL danej czcionki: [screenshot]</li>\r\n</ul>\r\nOstatni etap to określenie selektorów zwiąanych z daną czcionką:\r\n\r\n[screenshot]\r\n\r\nPo zapisaniu ustawień efekty powinny być od razu widoczne na stronie - nie jest wymagane wykonywanie żadnych dodatkowych operacji.', 'Fonts settings', '', 'inherit', 'open', 'open', '', '410-revision-4', '', '', '2012-08-07 13:23:25', '2012-08-07 13:23:25', '', 410, 'http://wp1/uncategorized/410-revision-4/', 0, 'revision', '', 0),
(545, 1, '2012-08-08 19:57:27', '2012-08-08 19:57:27', 'One of the key elements which has influence on website''s look is an appropriate choice of fonts used for text presentation.\r\n\r\nGavernWP allows to choose fonts easily which are assigned to CSS selectors specified by a user.\r\n\r\nIn order to simplify support for many fonts on one page, GavernWP supports groups of fonts - each group allows to assign a font given to selectors chosen by a user:\r\n\r\n[screenshot]\r\n\r\nGroups of fonts are defined in a configuration file called <strong>fonts.json</strong>. Adding a new group of fonts is very easy - it is enough to define the next object of a form:\r\n\r\n[code]{\r\n"full_name": "Full name of the fonts group",\r\n"short_name": "short name of the fonts group using only alphanumeric characters",\r\n"description": "Short description of the font family"\r\n}[/code]\r\n\r\nAfter adding such an object, in a table included in <strong>fonts.json</strong> file, you will see the next group of fonts to manage in an administration panel.\r\n\r\nYou have to specify three basic values for each group of fonts:\r\n<ul>\r\n	<li> a type of font used</li>\r\n	<li> a font of a type given</li>\r\n	<li>selectors connected with a font given</li>\r\n</ul>\r\nSpecifying of a font type is restricted to choosing one out of three fonts types:\r\n<ul>\r\n	<li><strong>Standard fonts</strong> - standard sets of fonts available on the majority of computers - you have to choose a font given from a list which is shown under the field of choosing a type of font: [screenshot]</li>\r\n	<li><strong>Fonts Squirrel</strong> - fonts downloaded from <a href="http://www.fontsquirrel.com/" target="_blank">Font Squirrel</a> page - you have to download @font-face kit of a font given and place its content in <strong>fonts</strong> catalog.  It is very important to have a folder with the same name as a font name used in <strong>stylesheet.css</strong> file which is in a new catalog. If you prepare a catalog in this way, you will see a font given on the list to choose:  [screenshot]</li>\r\n	<li><strong>Google Web Fonts</strong> - fonts from czcionki pochodzace z zasobów strony <a href="http://www.google.com/webfonts" target="_blank">Google Web Fonts</a> page; in this case, you have to specify the URL address of a font given: [screenshot]</li>\r\n</ul>\r\nThe last stage is specifying selectors connected with a font given:\r\n\r\n[screenshot]\r\n\r\nAfter saving the settings, the results should be visible on the website immediately - it is not required to make any additional operations.', 'Fonts settings', '', 'inherit', 'open', 'open', '', '410-revision-5', '', '', '2012-08-08 19:57:27', '2012-08-08 19:57:27', '', 410, 'http://wp1/uncategorized/410-revision-5/', 0, 'revision', '', 0),
(546, 1, '2012-07-13 12:43:30', '2012-07-13 12:43:30', 'Szablony budowane w oparciu o framework GavernWP posiadają wsparcie dla wielu użytecznych rozwiązań i technologii. Najważniejsze z nich to:\r\n<ul>\r\n	<li><a title="Custom Page Styles" href="http://wp1/template-features/custom-page-styles-2/">Custom page styles</a> - rozszerzają funkcjonalność standardowych podstron.</li>\r\n	<li><a title="Typography" href="http://wp1/template-features/typography/">Typography</a> - rozbudowana lista elementów umożliwia wzbogacenie postów o różnorodne dodatki.</li>\r\n	<li><a title="Social API" href="http://wp1/template-features/social-api/">Social API</a> - pozwala na łatwe dodanie do wpisu przycisków udostępniania postów w serwisach społecznościowych.</li>\r\n	<li><a title="Open Graph support" href="http://wp1/template-features/open-graph-support/">Open Graph</a> - umożliwia określenie sposobu w jaki będą widoczne udostępniane treści na Facebooku.</li>\r\n	<li><a title="Threaded comments" href="http://wp1/template-features/threaded-comments-2/">Threaded comments</a> - pozwalają na prowadzenie dyskusji pod postami w czytelny sposób.</li>\r\n	<li><a title="Branding" href="http://wp1/template-features/branding/">Branding</a> - ułatwia ustawienie kluczowych elementów strony związanych z jej nazwą lub marką.</li>\r\n	<li><a title="Color Styles" href="http://wp1/uncategorized/color-styles/">Color styles</a> - dzięki nim możliwe jest tworzenie wielu różnych wersji kolorystycznych oraz stylistycznych szablonu.</li>\r\n</ul>\r\n&nbsp;', 'Main front-end features', '', 'inherit', 'open', 'open', '', '408-revision-2', '', '', '2012-07-13 12:43:30', '2012-07-13 12:43:30', '', 408, 'http://wp1/uncategorized/408-revision-2/', 0, 'revision', '', 0),
(547, 1, '2012-07-12 13:56:55', '2012-07-12 13:56:55', 'Ustawienia układu strony w szablonie związane są z pięcioma głównymi opcjami:\r\n\r\n[shortcodes]\r\n\r\nDzięki opcji <strong>Page layout</strong> można określić pozycję kolumny w układzie strony: po lewej, po prawej lub w ogóle wyłączyć pokazywanie kolumny (w tej sytuacji uzyskuje się układ dostępny także poprzez dodatkowy styl podstrony - <strong>fullwidth</strong>).\r\n\r\nOpcja <strong>Template width</strong> określa maksymalną szerokość strony - bez względu na szerokość okna przeglądarki szerokość strony nie przekroczy tej wartości.\r\n\r\nSzerokość kolumny określa się w procentach dzięki opcji <strong>Sidebar width</strong>. Natomiast opcje <strong>Tablet width</strong> i <strong>Mobile width</strong> pozwalają określić w pikselach szerokość okna przeglądarki przy której wczytywany jest kolejno plik <strong>css/tablet.css</strong> oraz <strong>css/mobile.css</strong>.\r\n\r\nW wypadku<strong> tablet.css</strong> moduły, które w normalnym układzie tworzą układ maksymalnie czterokolumnowy pojawiają się w układzie dwukolumnowym, który po załadowaniu pliku <strong>mobile.css</strong> przekształca się w układ jednokolumnowy. Dodatkowo po załadowaniu pliku <strong>tablet.css</strong> kolumna przemieszcza się pod główną treść danej strony.\r\n\r\n<strong>Wskazówka:</strong> wszystkie opcje z sekcji <strong>Layout</strong> znajdują się też w edytorze live-preview, co pozwala na łatwiejsze dobranie wartości tych opcji dzięki podglądowi strony na żywo.', 'Layout settings', '', 'inherit', 'open', 'open', '', '404-revision-2', '', '', '2012-07-12 13:56:55', '2012-07-12 13:56:55', '', 404, 'http://wp1/uncategorized/404-revision-2/', 0, 'revision', '', 0),
(548, 1, '2012-08-09 08:31:35', '2012-08-09 08:31:35', 'Layout settings in a template are connected with five main options:\r\n\r\n[shortcodes]\r\n\r\nThanks to a <strong>Page layout</strong> option, it is possible to specify a column position in page''s layout: on the left/right side or switch off showing a column completely (in this situation, you achieve the layout available\r\n\r\nDzięki opcji <strong>Page layout</strong> można określić pozycję kolumny w układzie strony: po lewej, po prawej lub w ogóle wyłączyć pokazywanie kolumny (w tej sytuacji uzyskuje się układ dostępny także poprzez dodatkowy styl podstrony - <strong>fullwidth</strong>).\r\n\r\nOpcja <strong>Template width</strong> określa maksymalną szerokość strony - bez względu na szerokość okna przeglądarki szerokość strony nie przekroczy tej wartości.\r\n\r\nSzerokość kolumny określa się w procentach dzięki opcji <strong>Sidebar width</strong>. Natomiast opcje <strong>Tablet width</strong> i <strong>Mobile width</strong> pozwalają określić w pikselach szerokość okna przeglądarki przy której wczytywany jest kolejno plik <strong>css/tablet.css</strong> oraz <strong>css/mobile.css</strong>.\r\n\r\nW wypadku<strong> tablet.css</strong> moduły, które w normalnym układzie tworzą układ maksymalnie czterokolumnowy pojawiają się w układzie dwukolumnowym, który po załadowaniu pliku <strong>mobile.css</strong> przekształca się w układ jednokolumnowy. Dodatkowo po załadowaniu pliku <strong>tablet.css</strong> kolumna przemieszcza się pod główną treść danej strony.\r\n\r\n<strong>Wskazówka:</strong> wszystkie opcje z sekcji <strong>Layout</strong> znajdują się też w edytorze live-preview, co pozwala na łatwiejsze dobranie wartości tych opcji dzięki podglądowi strony na żywo.', 'Layout settings', '', 'inherit', 'open', 'open', '', '404-revision-3', '', '', '2012-08-09 08:31:35', '2012-08-09 08:31:35', '', 404, 'http://wp1/uncategorized/404-revision-3/', 0, 'revision', '', 0),
(549, 1, '2012-07-12 13:39:30', '2012-07-12 13:39:30', 'GavernWP umożliwa rozbudowane zarządzanie menu na stronie. W pliku konfiguracyjnym  <strong>menus.json</strong> znajduje się lista menu dostępnych w szablonie. Menu te wyświetlane są w zakładce<strong> Navigation</strong>:\r\n\r\n[screenshot]\r\n\r\nDla każdego menu dostępnego na stronie dostępnych jest kilka opcji. Menu główne strony ma więcej opcji niż zwykłe menu umieszczone np. w  stopce strony.\r\n\r\nRóżnica polega na tym, że menu główne posiada dodatkowe opcje związane z animacją:\r\n\r\n[screenshot]\r\n\r\nOpcje te pozwalają określić rodzaj oraz prędkość animacji submenu.\r\n\r\nDodatkowo wszystkie rodzaje menu posiadają dwie opcje:\r\n<ul>\r\n	<li>opcję określającą czy dane menu jest włączone - dane menu może być włączone tylko na wybranych podstronach dzięki opcji <strong>Conditional rule</strong> - wtedy w polu Conditional rule należy podać regułę korzystającą z <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> oraz operatorów logicznych języka PHP. Np. reguła wyświetlająca menu na stronie głównej oraz w kategorii o nazwie "Meet GavernWP" będzie miała następującą postać: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]</li>\r\n	<li>opcję określającą głębokość menu tj. maksymalny poziom zagnieżdżenia dla wyświetlanych pozycji menu. Jeżeli np. chcemy pominąć drugi poziom menu i wyświetlić tylko te pozycje menu, które znajdują się na pierwszym poziomie menu, nalezy ustawić tą opcję na wartość <strong>1</strong>. Oczywiście wartość <strong>All levels</strong> spowoduje wyświetlenie wszystkich pozycji menu dostępnych dla danego menu.</li>\r\n</ul>\r\nNależy pamiętać, że dodanie menu poza dodaniem stosownego wpisu w pliku konfiguracyjnym <strong>menus.json</strong> wymaga też stworzenia w szablonie stosownego kodu.\r\n\r\nKod ten korzysta ze standardowej funkcji <a href="http://codex.wordpress.org/Function_Reference/wp_nav_menu">wp_nav_menu</a>, przy czym należy pamiętać o trzech istotnych kwestiach:\r\n<ul>\r\n	<li>kod funkcji <strong>wp_nav_menu</strong> należy umieścić wewnątrz warunku IF postaci: [code]if(gk_show_menu(''MENU_NAME'')) {[/code] gdzie <strong>MENU_NAME</strong> to oczywiście nazwa menu np. <strong>mainmenu</strong>. Dzięki temu zapewnimy działanie funkcjonalności, która pozwala wyświetlać menu tylko na wybranych podstronach.</li>\r\n	<li>w wypadku menu głównego warto stworzyć jego duplikat w wersji mobilnej tak by przy wyświetlaniu strony na urządzeniach mobilnych pojawiło się menu dostosowane do urządeń mobilnych.</li>\r\n	<li>w wypadku menu głównego należy zastosować specjalną klasę dziedzicącą po klasie <strong>Walker</strong>: <strong>GKMenuWalker</strong>, natomiast dla menu mobilnego należy wykorzystać klasę <strong>GKMenuWalkerMobile</strong>. Zapewni to wygenerowanie odpowiedniej struktury menu.</li>\r\n</ul>\r\nKod CSS związany z menu znajduje się w plikach <strong>css/wp.css</strong> oraz <strong>css/mobile.css</strong>.\r\n\r\nSkrypty tworzące animacje menu głównego znajdują się w pliku <strong>js/gk.menu.js</strong>.', 'Navigation settings', '', 'inherit', 'open', 'open', '', '401-revision-2', '', '', '2012-07-12 13:39:30', '2012-07-12 13:39:30', '', 401, 'http://wp1/uncategorized/401-revision-2/', 0, 'revision', '', 0),
(550, 1, '2012-08-09 09:52:32', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-09 09:52:32', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=550', 0, 'post', '', 0),
(551, 1, '2012-08-09 09:55:45', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-09 09:55:45', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=551', 0, 'post', '', 0),
(552, 1, '2012-08-09 09:58:23', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-09 09:58:23', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=552', 0, 'post', '', 0),
(553, 1, '2012-08-09 09:59:22', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-09 09:59:22', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=553', 0, 'post', '', 0),
(557, 1, '2012-07-12 13:12:57', '2012-07-12 13:12:57', 'Shortcodes to udogodnienia, które nie są wykorzystywane przez wszystkich. Poza tym kod XHTML większości elementów typograficznych można w razie potrzeby wygenerować ręcznie. Sprawia to, że nie wszystkie pliki CSS i JavaScript związane z Shortcodes są potrzebne przy wczytywaniu strony.\r\n\r\nDzięki zakładce Shortcodes można wyłączyć wybrane grupy Shortcodes:\r\n\r\n[screenshot]\r\n\r\n<strong>Uwaga!</strong> Wyłączenie danej grupy Shortcodes spowoduje nie tylko wyłączenie dodawania plików CSS i JS związanych z daną grupą, ale też wyłączy funkcje parsujące Shortcodes w artykułach. Dlatego należy upewnić się, że wyłączane grupy Shortcodes nie były wykorzystane w istniejących artykułach.', 'Shortcodes settings', '', 'inherit', 'open', 'open', '', '397-revision-3', '', '', '2012-07-12 13:12:57', '2012-07-12 13:12:57', '', 397, 'http://wp1/uncategorized/397-revision-3/', 0, 'revision', '', 0),
(558, 1, '2012-07-12 12:55:04', '2012-07-12 12:55:04', 'Aby lepiej dostosować stylistykę panelu administracyjnego do strony w GavernWP znalazły się opcje pozwalające na dostosowanie wyglądu elementów panelu administracyjnego do tematyki danej strony.\r\n\r\nW zakładce back-end branding znajdziemy następujące opcje:\r\n\r\n[screenshot]\r\n\r\nPierwsze dwie opcje związane są z logotypem wyświetlanym na stronie logowania. Należy wybrać grafikę, która posłuży za logo, a następnie podać rozmiar wybranej grafiki. W ten sposób możemy uzyskać np. taki panel logowania:\r\n\r\n[screenshot]\r\n\r\nPozostałe dwie opcje związane są z logiem szablonu wyświetlanym w menu głównym panelu administracyjnego:\r\n\r\n[screenshot]\r\n\r\nZalecamy wykorzystać grafikę w rozmiarze 16x16 - większe lub mniejsze grafiki mogą powodować problemy z układem menu.\r\n\r\n&nbsp;', 'Back-end branding settings', '', 'inherit', 'open', 'open', '', '392-revision-2', '', '', '2012-07-12 12:55:04', '2012-07-12 12:55:04', '', 392, 'http://wp1/uncategorized/392-revision-2/', 0, 'revision', '', 0),
(560, 1, '2012-07-26 09:27:51', '2012-07-26 09:27:51', 'GavernWP has basic support for a new option available in Wordpress 3.4 - an options editor with templates preview. Now, the most important options connected with template''s style and its layout has been implemented to a live editor.\r\n\r\nIn order to reach it easier, we placed a direct link to this editor in the top part of templates'' options:\r\n\r\n[screenshot]\r\n\r\nAll options included in this editor are also available\r\n\r\nWszystkie opcje zawarte w tym edytorze dostępne są również poprzez tradycyjny panel opcji szablonu.\r\n\r\nAby ułatwić dodawanie własnych opcji do live editor cały kod generujący opcje umieszczono w oddzielnym pliku <strong>gavern/helpers/helpers.customizer.php</strong>.\r\n\r\nNależy pamiętać, że wszystkie opcje i ustawienia z live editor są przechowywane w tym samym miejscu co ich odpowiedniki z panelu admistracyjnego zatem zmiana ustawień z użyciem live editor pociąga za sobą zmiany w zwykłym panelu opcji. Dlatego też zalecane jest nie uruchamianie w tym samym momencie tradycyjnego panelu administracyjnego szablonu i live editor, gdyż może zaistnieć sytuacja gdy zapis opcji w obu miejscach naraz o różnych wartościach dla tego samego parametru da rezultat inny niż oczekiwany.', 'Theme live editor', '', 'inherit', 'open', 'open', '', '380-revision-6', '', '', '2012-07-26 09:27:51', '2012-07-26 09:27:51', '', 380, 'http://wp1/uncategorized/380-revision-6/', 0, 'revision', '', 0),
(562, 1, '2012-08-09 09:47:25', '2012-08-09 09:47:25', 'GavernWP gives a possibility of advanced menu managing on a website. There is a list of menus available in a template in a configuration file - <strong>menus.json</strong>. These menus are displayed in a <strong>Navigation</strong> tab:\r\n\r\n[screenshot]\r\n\r\nThere are a few options available for each menu available on a website. Website''s main menu has more options than a menu placed e.g. in page''s footer.\r\n\r\nThe difference is that a main menu has additional options connected with animation:\r\n\r\n[screenshot]\r\n\r\nThese options allow to specify the type and speed of animation of a submenu.\r\n\r\nAdditionally, all menu types have the two options:\r\n<ul>\r\n	<li>opcję określającą czy dane menu jest włączone - dane menu może być włączone tylko na wybranych podstronach dzięki opcji <strong>Conditional rule</strong> - wtedy w polu Conditional rule należy podać regułę korzystającą z <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> oraz operatorów logicznych języka PHP. Np. reguła wyświetlająca menu na stronie głównej oraz w kategorii o nazwie "Meet GavernWP" będzie miała następującą postać: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]</li>\r\n	<li>opcję określającą głębokość menu tj. maksymalny poziom zagnieżdżenia dla wyświetlanych pozycji menu. Jeżeli np. chcemy pominąć drugi poziom menu i wyświetlić tylko te pozycje menu, które znajdują się na pierwszym poziomie menu, nalezy ustawić tą opcję na wartość <strong>1</strong>. Oczywiście wartość <strong>All levels</strong> spowoduje wyświetlenie wszystkich pozycji menu dostępnych dla danego menu.</li>\r\n</ul>\r\nNależy pamiętać, że dodanie menu poza dodaniem stosownego wpisu w pliku konfiguracyjnym <strong>menus.json</strong> wymaga też stworzenia w szablonie stosownego kodu.\r\n\r\nKod ten korzysta ze standardowej funkcji <a href="http://codex.wordpress.org/Function_Reference/wp_nav_menu">wp_nav_menu</a>, przy czym należy pamiętać o trzech istotnych kwestiach:\r\n<ul>\r\n	<li>kod funkcji <strong>wp_nav_menu</strong> należy umieścić wewnątrz warunku IF postaci: [code]if(gk_show_menu(''MENU_NAME'')) {[/code] gdzie <strong>MENU_NAME</strong> to oczywiście nazwa menu np. <strong>mainmenu</strong>. Dzięki temu zapewnimy działanie funkcjonalności, która pozwala wyświetlać menu tylko na wybranych podstronach.</li>\r\n	<li>w wypadku menu głównego warto stworzyć jego duplikat w wersji mobilnej tak by przy wyświetlaniu strony na urządzeniach mobilnych pojawiło się menu dostosowane do urządeń mobilnych.</li>\r\n	<li>w wypadku menu głównego należy zastosować specjalną klasę dziedzicącą po klasie <strong>Walker</strong>: <strong>GKMenuWalker</strong>, natomiast dla menu mobilnego należy wykorzystać klasę <strong>GKMenuWalkerMobile</strong>. Zapewni to wygenerowanie odpowiedniej struktury menu.</li>\r\n</ul>\r\nKod CSS związany z menu znajduje się w plikach <strong>css/wp.css</strong> oraz <strong>css/mobile.css</strong>.\r\n\r\nSkrypty tworzące animacje menu głównego znajdują się w pliku <strong>js/gk.menu.js</strong>.', 'Navigation settings', '', 'inherit', 'open', 'open', '', '401-revision-3', '', '', '2012-08-09 09:47:25', '2012-08-09 09:47:25', '', 401, 'http://wp1/uncategorized/401-revision-3/', 0, 'revision', '', 0),
(568, 1, '2012-07-25 13:25:40', '2012-07-25 13:25:40', 'For simplifying shortcodes use available in templates based on GavernWP framework, a button for template''s typography has been implemented which is available in a posts editor:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg"><img class="aligncenter size-full wp-image-387" title="Add New Post ‹ Meet Gavern WP — WordPress" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg" alt="" width="308" height="107" /></a>\r\n\r\nBy clicking this button, you will see a list of available typography elements:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-388" title="Add New Post ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="251" height="369" /></a>\r\n\r\nIt is possible to choose a version with a stylistic specified for the majority of elements. After choosing a particular style, a shortcode will appear which will be replaced in entry content\r\n\r\nDla większości elementów można wybrać wersję z określoną stylistyką. Po wybraniu konkretnego stylu pojawi się kod shortcode, który zostanie zamieniony w treści wpisu przez skrypty na konkretną strukturę ostylowaną w dany sposób.\r\n\r\nNależy zwrócić uwagę na fakt, że dodanie nowego kodu Shortcode wymaga trzech operacji:\r\n<ul>\r\n	<li>dodania wpisu w pliku konfiguracyjnym shortcodes.js</li>\r\n	<li>dodania kodu PHP obsługującego dany shortcode</li>\r\n	<li>dodania opcjonalnego kodu CSS i JavaScript (o ile wymaga tego dany shortcode)</li>\r\n</ul>\r\nPlik <strong>shortcodes.js</strong> w katalogu <strong>config</strong> zawiera wpisy, które są zamieniane na strukturę menu widocznego po kliknięciu w przycisk typografii - zawiera on zmienną <strong>$GAVERNWP_SHORTCODES</strong>, która jest tablicą zawierającą obiekty reprezentujące elementy menu wyboru. Każdy obiekt posiada trzy właściwości: <strong>title</strong>, <strong>code</strong> oraz <strong>submenu</strong>. Omówmy tą strukturę na przykładzie pozycji <strong>Highlight</strong>:\r\n\r\n[code]{\r\n\r\n"title": "Highlight",\r\n"code": "[highlight]Your text[/highlight]",\r\n"submenu": [\r\n{\r\n"title": "Style I",\r\n"code": "[highlight style=\\"1\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style II",\r\n"code": "[highlight style=\\"2\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style III",\r\n"code": "[highlight style=\\"3\\"]Your text[/highlight]"\r\n}\r\n]\r\n},[/code]\r\n<ul>\r\n	<li><strong>title</strong> - zawiera nazwę pozycji menu wyświetlaną przez skrypt</li>\r\n	<li><strong>code</strong> - jest to kod shortcode, który zostanie dodany do wpisu w momencie kliknięcia danej pozycji menu - należy pamiętać, że nie wszystkie pozycje menu na pierwszym poziomie posiadają wartość w tym polu - jeżeli jest ona pustym ciągiem znaków oznacza to dla skryptu, że kliknięcie w daną pozycję menu ma nie wywoływać żadnej akcji.</li>\r\n	<li><strong>submenu</strong> - jest to tablica podmenu danej pozycji menu. Każda pozycja podmenu jest zbudowana tak samo jak pozycje menu na pierwszym poziomie, z tą różnicą, że podmenu nie może mieć kolejnego podmenu, zatem nie dodajemy w obiekcie podmenu właściwości <strong>submenu</strong>.</li>\r\n</ul>\r\nPrzyjmijmy, że dodaliśmy już nasz shortcode do przycisku typografii korzystając z pliku shortcodes.js. Pozostaje nam kwestia obsługi naszego shortcode po stronie szablonu.\r\n\r\nW tym celu należy otworzyć plik<strong> gavern/helpers/helpers.shortcodes.php</strong>.\r\n\r\nPlik ten jest podzielony na trzy główne sekcje zaczynające się od linijek podobnych do:\r\n\r\n[code]if(get_option($tpl-&gt;name . ''_shortcodes1_state'', ''Y'') == ''Y'') {[/code]\r\n\r\nJest to instrukcja warunkowa IF związana z daną grupą elementów typografii. Gavern zawiera trzy takie grupy:\r\n<ul>\r\n	<li>elementy typografii - funkcje z nią związane mają prefiks <strong>gavern_ts_</strong> w nazwie</li>\r\n	<li>elementy interaktywne - funkcje z nią związane mają prefiks <strong>gavern_ies_</strong> w nazwie</li>\r\n	<li>elementy chrakterystyczne dla danego szablonu - funkcje z nią związane mają prefiks <strong>gavern_tss_</strong> w nazwie</li>\r\n</ul>\r\nNowe elementy typografii zalecamy dodawać w tej ostatniej grupie - w szablonie Meet GavernWPdomyślnie jest ona pusta. Zalecamy pamiętać o zastosowaniu stosownego dla danej grupy prefiksu w nazwie funkcji np. w wypadku trzeciej grupy będzie to <strong>gavern_tss_</strong>. Sam kod danego Shortcode należy tworzyć według wytycznych opisanych w <a href="http://codex.wordpress.org/Shortcode_API">Shortcode API</a>.\r\n\r\nOstatni krok jest opcjonalny i zależny od typu naszego Shortcode. Jeżeli nasz Shortcode wymaga dodatkowego kod CSS lub JavaScript należy zdefiniować go w plikach <strong>shortcodes.*.css</strong> i <strong>shortcodes.*.js</strong>, gdzie <strong>*</strong> oznacza nazwę grupy do której przypisaliśmy dany Shortcode.\r\n\r\nJest bardzo ważne, by umieścić elementy kodu CSS i JavaScript w odpowiednim pliku, gdyż umożliwi to optymalizację kodu całego szablonu w momencie wyłączenia z użytkowania danej grupy kodów Shortcodes.', 'Typography button', '', 'inherit', 'open', 'open', '', '386-revision-5', '', '', '2012-07-25 13:25:40', '2012-07-25 13:25:40', '', 386, 'http://wp1/uncategorized/386-revision-5/', 0, 'revision', '', 0),
(569, 1, '2012-08-10 08:16:28', '2012-08-10 08:16:28', 'For simplifying shortcodes use available in templates based on GavernWP framework, a button for template''s typography has been implemented which is available in a posts editor:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg"><img class="aligncenter size-full wp-image-387" title="Add New Post ‹ Meet Gavern WP — WordPress" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg" alt="" width="308" height="107" /></a>\r\n\r\nBy clicking this button, you will see a list of available typography elements:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-388" title="Add New Post ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="251" height="369" /></a>\r\n\r\nIt is possible to choose a version with a stylistic specified for the majority of elements. After choosing a particular style, a shortcode will appear which will be replaced in entry content by scripts to structure styled in a way given.\r\n\r\nPlease, note that adding a new Shortcode code requires three operations:\r\n<ul>\r\n	<li>adding an entry in shortcodes.js configuration file</li>\r\n	<li>adding PHP code supporting a shortcode given</li>\r\n	<li>adding optional CSS and JavaScript code (if a shortcode given requires it)</li>\r\n</ul>\r\n<strong>shortcodes.js</strong> file in <strong>config</strong> catalog includes entries which are replaced to menu structure visible after clicking a typography button - it includes <strong>$GAVERNWP_SHORTCODES</strong> variable which is a table including objects representing elements of a menu. Each object has three features: <strong>title</strong>, <strong>code</strong> and <strong>submenu</strong>. Let''s analyze this structure with a <strong>Highlight</strong> position:\r\n\r\n[code]{\r\n\r\n"title": "Highlight",\r\n"code": "[highlight]Your text[/highlight]",\r\n"submenu": [\r\n{\r\n"title": "Style I",\r\n"code": "[highlight style=\\"1\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style II",\r\n"code": "[highlight style=\\"2\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style III",\r\n"code": "[highlight style=\\"3\\"]Your text[/highlight]"\r\n}\r\n]\r\n},[/code]\r\n<ul>\r\n	<li><strong>title</strong> - it includes a menu positon name displayed by a script</li>\r\n	<li><strong>code</strong> - it is a shortcode code which will be added to an entry when clicking a menu position given - you have to remember that not all menu positions on the first level have a value in this field - if it was an empty sequence of symbols, it means for a script that clicking on a menu position given does not request any action.</li>\r\n	<li><strong>submenu</strong> - it is a table  of a submenu of a menu position given. Each submenu position is built the same as menu positions as these on the first level but with one difference - a submenu cannot have the next submenu, so you do not add a <strong>submenu</strong> feature in a submenu object.</li>\r\n</ul>\r\nPrzyjmijmy, że dodaliśmy już nasz shortcode do przycisku typografii korzystając z pliku shortcodes.js. Pozostaje nam kwestia obsługi naszego shortcode po stronie szablonu.\r\n\r\nW tym celu należy otworzyć plik<strong> gavern/helpers/helpers.shortcodes.php</strong>.\r\n\r\nPlik ten jest podzielony na trzy główne sekcje zaczynające się od linijek podobnych do:\r\n\r\n[code]if(get_option($tpl-&gt;name . ''_shortcodes1_state'', ''Y'') == ''Y'') {[/code]\r\n\r\nJest to instrukcja warunkowa IF związana z daną grupą elementów typografii. Gavern zawiera trzy takie grupy:\r\n<ul>\r\n	<li>elementy typografii - funkcje z nią związane mają prefiks <strong>gavern_ts_</strong> w nazwie</li>\r\n	<li>elementy interaktywne - funkcje z nią związane mają prefiks <strong>gavern_ies_</strong> w nazwie</li>\r\n	<li>elementy chrakterystyczne dla danego szablonu - funkcje z nią związane mają prefiks <strong>gavern_tss_</strong> w nazwie</li>\r\n</ul>\r\nNowe elementy typografii zalecamy dodawać w tej ostatniej grupie - w szablonie Meet GavernWPdomyślnie jest ona pusta. Zalecamy pamiętać o zastosowaniu stosownego dla danej grupy prefiksu w nazwie funkcji np. w wypadku trzeciej grupy będzie to <strong>gavern_tss_</strong>. Sam kod danego Shortcode należy tworzyć według wytycznych opisanych w <a href="http://codex.wordpress.org/Shortcode_API">Shortcode API</a>.\r\n\r\nOstatni krok jest opcjonalny i zależny od typu naszego Shortcode. Jeżeli nasz Shortcode wymaga dodatkowego kod CSS lub JavaScript należy zdefiniować go w plikach <strong>shortcodes.*.css</strong> i <strong>shortcodes.*.js</strong>, gdzie <strong>*</strong> oznacza nazwę grupy do której przypisaliśmy dany Shortcode.\r\n\r\nJest bardzo ważne, by umieścić elementy kodu CSS i JavaScript w odpowiednim pliku, gdyż umożliwi to optymalizację kodu całego szablonu w momencie wyłączenia z użytkowania danej grupy kodów Shortcodes.', 'Typography button', '', 'inherit', 'open', 'open', '', '386-revision-6', '', '', '2012-08-10 08:16:28', '2012-08-10 08:16:28', '', 386, 'http://wp1/uncategorized/386-revision-6/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(570, 1, '2012-08-10 08:53:35', '2012-08-10 08:53:35', 'For simplifying shortcodes use available in templates based on GavernWP framework, a button for template''s typography has been implemented which is available in a posts editor:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg"><img class="aligncenter size-full wp-image-387" title="Add New Post ‹ Meet Gavern WP — WordPress" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg" alt="" width="308" height="107" /></a>\r\n\r\nBy clicking this button, you will see a list of available typography elements:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-388" title="Add New Post ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="251" height="369" /></a>\r\n\r\nIt is possible to choose a version with a stylistic specified for the majority of elements. After choosing a particular style, a shortcode will appear which will be replaced in entry content by scripts to structure styled in a way given.\r\n\r\nPlease, note that adding a new Shortcode code requires three operations:\r\n<ul>\r\n	<li>adding an entry in shortcodes.js configuration file</li>\r\n	<li>adding PHP code supporting a shortcode given</li>\r\n	<li>adding optional CSS and JavaScript code (if a shortcode given requires it)</li>\r\n</ul>\r\n<strong>shortcodes.js</strong> file in <strong>config</strong> catalog includes entries which are replaced to menu structure visible after clicking a typography button - it includes <strong>$GAVERNWP_SHORTCODES</strong> variable which is a table including objects representing elements of a menu. Each object has three features: <strong>title</strong>, <strong>code</strong> and <strong>submenu</strong>. Let''s analyze this structure with a <strong>Highlight</strong> position:\r\n\r\n[code]{\r\n\r\n"title": "Highlight",\r\n"code": "[highlight]Your text[/highlight]",\r\n"submenu": [\r\n{\r\n"title": "Style I",\r\n"code": "[highlight style=\\"1\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style II",\r\n"code": "[highlight style=\\"2\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style III",\r\n"code": "[highlight style=\\"3\\"]Your text[/highlight]"\r\n}\r\n]\r\n},[/code]\r\n<ul>\r\n	<li><strong>title</strong> - it includes a menu positon name displayed by a script</li>\r\n	<li><strong>code</strong> - it is a shortcode code which will be added to an entry when clicking a menu position given - you have to remember that not all menu positions on the first level have a value in this field - if it was an empty sequence of symbols, it means for a script that clicking on a menu position given does not request any action.</li>\r\n	<li><strong>submenu</strong> - it is a table  of a submenu of a menu position given. Each submenu position is built the same as menu positions as these on the first level but with one difference - a submenu cannot have the next submenu, so you do not add a <strong>submenu</strong> feature in a submenu object.</li>\r\n</ul>\r\nLet''s say, we added our shortcode to a typography button using shortcodes.js file. So, there is one thing left to do - support our shortcode on a template side.\r\n\r\nTo do this, you have to open <strong>gavern/helpers/helpers.shortcodes.php</strong> file.\r\n\r\nThis file is divided into three main sections starting with lines similar to:\r\n\r\n[code]if(get_option($tpl-&gt;name . ''_shortcodes1_state'', ''Y'') == ''Y'') {[/code]\r\n\r\nIt is a conditional  IF instruction connected with a group of typography elements given. Gavern icludes three groups:\r\n<ul>\r\n	<li>typography elements - functions connected with it have <strong>gavern_ts_</strong> prefix in the title</li>\r\n	<li>interactive elements - functions connected with it have <strong>gavern_ies_</strong> prefix in the title</li>\r\n	<li>elements characteristic for a particular template - functions connected with it have <strong>gavern_tss_</strong> prefix in the title</li>\r\n</ul>\r\nWe recommend to add new typography elements in the last group - in Meet GavernWP template, it is empty by default. Please, remember about using an appropriate prefix in a function name for a group given, e.g. in the case of the third group, it will be <strong>gavern_tss_</strong>. The code itself of a shortcode given has to be created according to guidelines described in<a href="http://codex.wordpress.org/Shortcode_API"> Shortcode API</a>.\r\n\r\nThe last step is rather optional and depends on your Shortcode type. If your Shortcode requires additional CSS or JavaScript code, you have to define it in <strong>shortcodes.*.css</strong> i <strong>shortcodes.*.js</strong> files, where <strong>*</strong> is a group name to which a Shortcode given was assigned.\r\n\r\nIt is very important to place elements of CSS and JavaScript code in an appropriate file, as it will give a possibility of optimizing whole template code when switching off given group of Shortcodes codes.', 'Typography button', '', 'inherit', 'open', 'open', '', '386-revision-7', '', '', '2012-08-10 08:53:35', '2012-08-10 08:53:35', '', 386, 'http://wp1/uncategorized/386-revision-7/', 0, 'revision', '', 0),
(571, 1, '2012-07-30 08:12:58', '2012-07-30 08:12:58', 'W szablonie budowanym w oparciu o framework GavernWP istnieją trzy kluczowe miejsca związane z brandingiem:\r\n<ul>\r\n	<li>logo strony</li>\r\n	<li>stopka strony</li>\r\n	<li>logo frameworka pod stopką strony</li>\r\n</ul>\r\nZa elementy te odpowiadają następujące opcje panelu administracyjnego:\r\n\r\n[screenshot]\r\n\r\nW wypadku loga frameworka można je jedynie włączyć lub wyłączyć.\r\n\r\nTreść stopki strony definiujemy w opcji <strong>Footer content</strong>. Wyświetlona ona zostanie w dolej części strony najczęściej po prawej stronie witryny.\r\n\r\nNajwięcej parametrów związanych jest z logiem strony. Pierwszy krok w konfiguracji logo strony to wybór typu loga, dostępne są następujące rodzaje logo:\r\n<ul>\r\n	<li><strong>Defined in the CSS code</strong> - logo zdefiniowane jest wtedy w stylu CSS szablonu jako element posiadający klasę <strong>cssLogo</strong>. W tym wypadku poza modyfikacją kodu CSS żadne inne zmiany ustawień nie są potrzebne.</li>\r\n	<li><strong>Image logo</strong> - po wybraniu tej opcji pojawią się dodatkowe opcje: [screenshot]. Należy wybrać grafikę logo oraz określić jej rozmiary.</li>\r\n	<li><strong>Text logo</strong> - podobnie jak w wypadku poprzedniej opcji, także tutaj pojawią się dodatkowe opcje: [screenshot]. Opcja <strong>Template logo text</strong> określa czy tekst główny logo jak i podpis pod nim będą brane z ustawień Wordpress (<strong>from Wordpress settings</strong>) czy też będą określone  przez użytkownika (<strong>Own</strong>). W wypadku wybrania tej drugiej opcji pojawią się kolejne dwa pola, które trzeba wypełnić: [screenshot].</li>\r\n	<li><strong>None</strong> - w tym wypadku logo w ogóle nie zostanie wyświetlone.</li>\r\n</ul>\r\n<div><strong>Wskazówka:</strong> opcja <strong>None</strong> jest przydatna w sytuacji gdy sami chcemy w kodzie szablonu zdefiniować kod logo - wystarczy wtedy dodać własny kod do odpowiedniego pliku (najczęściej <strong>layouts/header.php</strong>).</div>\r\n&nbsp;', 'Template branding settings', '', 'inherit', 'open', 'open', '', '394-revision-5', '', '', '2012-07-30 08:12:58', '2012-07-30 08:12:58', '', 394, 'http://wp1/uncategorized/394-revision-5/', 0, 'revision', '', 0),
(572, 1, '2012-08-10 09:51:51', '2012-08-10 09:51:51', 'There are three key places connected with branding in a template based on GavernWP framework:\r\n<ul>\r\n	<li>page''s logo</li>\r\n	<li>page''s footer</li>\r\n	<li>framework''s logo under a page''s footer</li>\r\n</ul>\r\nThere are the following administration panel options responsible for these elements:\r\n\r\n[screenshot]\r\n\r\nIn the case of a framework''s logo, it is only possible to switch it on/off.\r\n\r\nFooter content is defined in <strong>Footer content</strong> option. It will be displayed at the bottom of the page, usually on the right side.\r\n\r\nThe majority of parameters are connected with a page''s logo. The first step in a logo configuration is to choose a logo type; there are the following logo types available:\r\n<ul>\r\n	<li><strong>Defined in the CSS code</strong> - a logo is defined template''s CSS style as an element having <strong>cssLogo</strong> class. In this case, except CSS code modification, no other settings changes are needed.</li>\r\n	<li><strong>Image logo</strong> - after choosing this option, some additional options will appear:  [screenshot]. You have to choose an image logo and specify its sizes.</li>\r\n	<li><strong>Text logo</strong> - likewise in the previous option, some additional options appear: [screenshot]. <strong>Template logo text </strong>option specifies whether main logo text and the signature below it will be taken from Wordpress settings (<strong>from Wordpress settings</strong>) or will be specified by a user (<strong>Own</strong>). In the case of choosing the second option, two additional fields to fill in will appear: [screenshot].</li>\r\n	<li><strong>None</strong> - in this case, a logo will not be displayed.</li>\r\n</ul>\r\n<div><strong>Note</strong>: None option is useful when you want to define a logo code in template''s code yourself - then, it is enough to add your own code to an appropriate file (usually it is: <strong>layouts/header.php</strong>).</div>\r\n&nbsp;', 'Template branding settings', '', 'inherit', 'open', 'open', '', '394-revision-6', '', '', '2012-08-10 09:51:51', '2012-08-10 09:51:51', '', 394, 'http://wp1/uncategorized/394-revision-6/', 0, 'revision', '', 0),
(573, 1, '2012-08-09 13:25:04', '2012-08-09 13:25:04', 'GavernWP gives a possibility of advanced menu managing on a website. There is a list of menus available in a template in a configuration file - <strong>menus.json</strong>. These menus are displayed in a <strong>Navigation</strong> tab:\r\n\r\n[screenshot]\r\n\r\nThere are a few options available for each menu available on a website. Website''s main menu has more options than a menu placed e.g. in page''s footer.\r\n\r\nThe difference is that a main menu has additional options connected with animation:\r\n\r\n[screenshot]\r\n\r\nThese options allow to specify the type and speed of animation of a submenu.\r\n\r\nAdditionally, all menu types have the two options:\r\n<ul>\r\n	<li>an option specifying whether a menu given was switched on - a menu given can be switched on only on a particular subpages thanks to a <strong>Conditional rule</strong> option - then, you have to insert a rule from  <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of a PHP language in  a Conditional rule field, e.g. a rule displaying a menu on the homepage and in a category called "Meet GavernWP" will have the following form:  [code]is_homepage() || is_category(''Meet GavernWP'')[/code]</li>\r\n	<li>an option specifying menu depth i.e. a maximal nesting level for all menu positions displayed. If e.g. you want to skip the second menu level and display menu positions which are on the first menu level, you have to set this option to <strong>1</strong>. Of course <strong>All levels</strong> value will cause displaying all menu postions available for a menu given.</li>\r\n</ul>\r\nNależy pamiętać, że dodanie menu poza dodaniem stosownego wpisu w pliku konfiguracyjnym <strong>menus.json</strong> wymaga też stworzenia w szablonie stosownego kodu.\r\n\r\nKod ten korzysta ze standardowej funkcji <a href="http://codex.wordpress.org/Function_Reference/wp_nav_menu">wp_nav_menu</a>, przy czym należy pamiętać o trzech istotnych kwestiach:\r\n<ul>\r\n	<li>kod funkcji <strong>wp_nav_menu</strong> należy umieścić wewnątrz warunku IF postaci: [code]if(gk_show_menu(''MENU_NAME'')) {[/code] gdzie <strong>MENU_NAME</strong> to oczywiście nazwa menu np. <strong>mainmenu</strong>. Dzięki temu zapewnimy działanie funkcjonalności, która pozwala wyświetlać menu tylko na wybranych podstronach.</li>\r\n	<li>w wypadku menu głównego warto stworzyć jego duplikat w wersji mobilnej tak by przy wyświetlaniu strony na urządzeniach mobilnych pojawiło się menu dostosowane do urządeń mobilnych.</li>\r\n	<li>w wypadku menu głównego należy zastosować specjalną klasę dziedzicącą po klasie <strong>Walker</strong>: <strong>GKMenuWalker</strong>, natomiast dla menu mobilnego należy wykorzystać klasę <strong>GKMenuWalkerMobile</strong>. Zapewni to wygenerowanie odpowiedniej struktury menu.</li>\r\n</ul>\r\nKod CSS związany z menu znajduje się w plikach <strong>css/wp.css</strong> oraz <strong>css/mobile.css</strong>.\r\n\r\nSkrypty tworzące animacje menu głównego znajdują się w pliku <strong>js/gk.menu.js</strong>.', 'Navigation settings', '', 'inherit', 'open', 'open', '', '401-revision-4', '', '', '2012-08-09 13:25:04', '2012-08-09 13:25:04', '', 401, 'http://wp1/uncategorized/401-revision-4/', 0, 'revision', '', 0),
(574, 1, '2012-08-10 10:26:19', '2012-08-10 10:26:19', 'GavernWP gives a possibility of advanced menu managing on a website. There is a list of menus available in a template in a configuration file - <strong>menus.json</strong>. These menus are displayed in a <strong>Navigation</strong> tab:\r\n\r\n[screenshot]\r\n\r\nThere are a few options available for each menu available on a website. Website''s main menu has more options than a menu placed e.g. in page''s footer.\r\n\r\nThe difference is that a main menu has additional options connected with animation:\r\n\r\n[screenshot]\r\n\r\nThese options allow to specify the type and speed of animation of a submenu.\r\n\r\nAdditionally, all menu types have the two options:\r\n<ul>\r\n	<li>an option specifying whether a menu given was switched on - a menu given can be switched on only on a particular subpages thanks to a <strong>Conditional rule</strong> option - then, you have to insert a rule from  <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of a PHP language in  a Conditional rule field, e.g. a rule displaying a menu on the homepage and in a category called "Meet GavernWP" will have the following form:  [code]is_homepage() || is_category(''Meet GavernWP'')[/code]</li>\r\n	<li>an option specifying menu depth i.e. a maximal nesting level for all menu positions displayed. If e.g. you want to skip the second menu level and display menu positions which are on the first menu level, you have to set this option to <strong>1</strong>. Of course <strong>All levels</strong> value will cause displaying all menu postions available for a menu given.</li>\r\n</ul>\r\nYou have to remember that adding a menu, except adding an appropriate entry in an configuration file <strong>menus.json</strong>, also requires creating appropriate code in a template.\r\n\r\nThis code uses a standard <a href="http://codex.wordpress.org/Function_Reference/wp_nav_menu">wp_nav_menu</a> function but you have to remember about three crucial things:\r\n<ul>\r\n	<li>code of <strong>wp_nav_menu</strong> function has to be placed inside IF condition of a form:<strong></strong> [code]if(gk_show_menu(''MENU_NAME'')) {[/code] where <strong>MENU_NAME</strong> is a menu name, e.g. <strong>mainmenu</strong><strong></strong>. Thanks to it, there will be a functionality which allows to display a menu only on subpages chosen.</li>\r\n	<li>in the case of main menu, it is very useful to create a duplicate in a mobile version so as while displaying a website on mobile devices, a menu will be adjusted to mobile devices.</li>\r\n	<li>in the case of a main menu, you have to use a special class derived from <strong>Walker</strong>: <strong>GKMenuWalker</strong> class; however, for a mobile menu, you have to use <strong>GKMenuWalkerMobile</strong> class. Thanks to it, appropriate menu structure will be generated.</li>\r\n</ul>\r\nCSS code connected with a menu is in <strong>css/wp.css</strong> and <strong>css/mobile.css</strong> files.\r\n\r\nScripts creating main menu animations are in <strong>js/gk.menu.js</strong> file.', 'Navigation settings', '', 'inherit', 'open', 'open', '', '401-revision-5', '', '', '2012-08-10 10:26:19', '2012-08-10 10:26:19', '', 401, 'http://wp1/uncategorized/401-revision-5/', 0, 'revision', '', 0),
(575, 1, '2012-08-10 10:27:14', '2012-08-10 10:27:14', 'GavernWP gives a possibility of advanced menu managing on a website. There is a list of menus available in a template in a configuration file - <strong>menus.json</strong>. These menus are displayed in a <strong>Navigation</strong> tab:\r\n\r\n[screenshot]\r\n\r\nThere are a few options available for each menu available on a website. Website''s main menu has more options than a menu placed e.g. in page''s footer.\r\n\r\nThe difference is that a main menu has additional options connected with animation:\r\n\r\n[screenshot]\r\n\r\nThese options allow to specify the type and speed of animation of a submenu.\r\n\r\nAdditionally, all menu types have the two options:\r\n<ul>\r\n	<li>an option specifying whether a menu given was switched on - a menu given can be switched on only on a particular subpages thanks to a <strong>Conditional rule</strong> option - then, you have to insert a rule from  <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of a PHP language in  a Conditional rule field, e.g. a rule displaying a menu on the homepage and in a category called "Meet GavernWP" will have the following form:  [code]is_homepage() || is_category(''Meet GavernWP'')[/code]</li>\r\n	<li>an option specifying menu depth i.e. a maximal nesting level for all menu positions displayed. If e.g. you want to skip the second menu level and display menu positions which are on the first menu level, you have to set this option to <strong>1</strong>. Of course <strong>All levels</strong> value will cause displaying all menu postions available for a menu given.</li>\r\n</ul>\r\nYou have to remember that adding a menu, except adding an appropriate entry in an configuration file <strong>menus.json</strong>, also requires creating appropriate code in a template.\r\n\r\nThis code uses a standard <a href="http://codex.wordpress.org/Function_Reference/wp_nav_menu">wp_nav_menu</a> function but you have to remember about three crucial things:\r\n<ul>\r\n	<li>code of <strong>wp_nav_menu</strong> function has to be placed inside IF condition in a form:<strong></strong> [code]if(gk_show_menu(''MENU_NAME'')) {[/code] where <strong>MENU_NAME</strong> is a menu name, e.g. <strong>mainmenu</strong><strong></strong>. Thanks to it, there will be a functionality which allows to display a menu only on subpages chosen.</li>\r\n	<li>in the case of main menu, it is very useful to create a duplicate in a mobile version so as while displaying a website on mobile devices, a menu will be adjusted to mobile devices.</li>\r\n	<li>in the case of a main menu, you have to use a special class derived from <strong>Walker</strong>: <strong>GKMenuWalker</strong> class; however, for a mobile menu, you have to use <strong>GKMenuWalkerMobile</strong> class. Thanks to it, appropriate menu structure will be generated.</li>\r\n</ul>\r\nCSS code connected with a menu is in <strong>css/wp.css</strong> and <strong>css/mobile.css</strong> files.\r\n\r\nScripts creating main menu animations are in <strong>js/gk.menu.js</strong> file.', 'Navigation settings', '', 'inherit', 'open', 'open', '', '401-revision-6', '', '', '2012-08-10 10:27:14', '2012-08-10 10:27:14', '', 401, 'http://wp1/uncategorized/401-revision-6/', 0, 'revision', '', 0),
(578, 1, '2012-07-18 21:58:31', '2012-07-18 21:58:31', 'In order to make GavernWP framework more flexible, we decided to use files in JSON format for storing template''s configuration and options layout in an administration panel.\r\n\r\nYou may find files responsible for template''s configuration in <strong>gavern/options/</strong> catalog:<strong></strong>\r\n<ul>\r\n	<li><strong>fonts.json</strong> - a file which stores template''s groups of fonts. By default, there are three main gropus created. In order to create a new group, it is enough to add a next object to the object table existing in this file.plik przechowujący grupy czcionek szablonu.</li>\r\n	<li><strong>menus.json</strong> - you will find space for menu used in a template in this file. You have to remember that except adding a new object, you have to add PHP code generating menu data in template''s code. It is also worth remembering that there could be one main menu (<strong>main</strong> field in menu object).<strong></strong></li>\r\n	<li><strong>opengraph.json</strong> - this file includes configuration of fields used in a block connected with metabox which is used for generating Open Graph data. We do not recommend to make any changes in it before you get acquainted with Open Graph tags implementation in GavernWP framework.</li>\r\n	<li><strong>styles.json</strong> - this file is used for generating additional template''s styles. Except adding a new style, you have to remember about creating an additional CSS file which will be loaded while changing template''s style.</li>\r\n	<li><strong>template.json</strong> - it is the most important configuration file. It includes information about a template and it allows to switch off chosen elements of template administration panel. It is NOT recommended to add new fields to this files because they will not be used without additional PHP code.</li>\r\n	<li><strong>widgets.json</strong> - a file including a list of all positions of widgets. Similarly to <strong>menus.json</strong> file, you have to remember that except adding a new widget position, you have to also add PHP code which generates it in a template.</li>\r\n	<li><strong>widgets.styles.json</strong> - a file used for creating new widget styles. Thanks to its implementation, it allows to assign a style given to one widget type only or exclude some widget types from a style given.</li>\r\n</ul>\r\nIn order to understand better JSON files format, we recommend to visit the official website of  this format.By lepiej zrozumieć format plików JSON polecamy lekturę oficjalne strony <a href="http://www.json.org/">tego formatu</a>.\r\n\r\n&nbsp;', 'JSON Configuration', '', 'inherit', 'open', 'open', '', '338-revision-5', '', '', '2012-07-18 21:58:31', '2012-07-18 21:58:31', '', 338, 'http://wp1/uncategorized/338-revision-5/', 0, 'revision', '', 0),
(581, 1, '2012-08-10 20:15:46', '2012-08-10 20:15:46', '', 'Page Styles', '', 'publish', 'open', 'open', '', 'page-styles', '', '', '2012-11-20 14:47:02', '2012-11-20 14:47:02', '', 0, 'http://wp1/?p=581', 2, 'nav_menu_item', '', 0),
(584, 1, '2012-08-10 20:22:15', '2012-08-10 20:22:15', ' ', '', '', 'publish', 'open', 'open', '', '584', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=584', 21, 'nav_menu_item', '', 0),
(585, 1, '2012-08-10 20:25:42', '2012-08-10 20:25:42', '', 'Framework', '', 'publish', 'open', 'open', '', 'framework', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=585', 10, 'nav_menu_item', '', 0),
(586, 1, '2012-08-10 20:26:51', '2012-08-10 20:26:51', 'Artykuły opisujące opcje szablonu dostępne poprzez panel administracyjny oraz sposób ich konfiguracji.', '', '', 'publish', 'open', 'open', '', '586', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=586', 13, 'nav_menu_item', '', 0),
(587, 1, '2012-08-10 20:26:51', '2012-08-10 20:26:51', 'GavernWP w skrócie – najważniejsze zagadnienia i funkcjonalności omówione w przystępnej formie.', '', '', 'publish', 'open', 'open', '', '587', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=587', 11, 'nav_menu_item', '', 0),
(588, 1, '2012-08-10 20:26:51', '2012-08-10 20:26:51', 'Kategoria zawierająca artykuły opisujące główne funkcjonalności szablonu: typografię, responsive layout, reguły i style dla widżetów itd.', '', '', 'publish', 'open', 'open', '', '588', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=588', 12, 'nav_menu_item', '', 0),
(592, 1, '2012-07-27 12:15:12', '2012-07-27 12:15:12', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main files groups:\r\n<ul>\r\n	<li>plik <strong>tabs.json</strong> - it includes a list of sections visible on the right side of an administration panel:  [screensthot] each section is described with a table in the form [code]["Basic", "options.basic", "enabled"][/code] the first element pierwszy element tablicy to nazwa sekcji wyświetlana w panelu, drugi element to nazwa pliku bez rozszerzenia "<strong>.json</strong>", którzy przechowuje listę dostępnych w danej sekcji opcji, a trzecia wartość odnosi się do tego czy dana sekcja jest widoczna w panelu. W tym przypadku zostanie w panelu wyświetlony tab <strong>Basic</strong> na podstawie zawartości pliku <strong>options.basic.json</strong>.</li>\r\n	<li>pliki <strong>options.*.json</strong> - zawierają one listę opcji dostępnych w danej sekcji - ich nazwy są ściśle powiązane z zawartością pliku <strong>tabs.json</strong>.</li>\r\n</ul>\r\nKażdy plik options.*.json zawiera w przechowywanym obiekcie trzy główne pola:\r\n<ul>\r\n	<li><strong>groupname</strong> - jest to tytuł sekcji</li>\r\n	<li><strong>groupdesc</strong> - określa opis sekcji wyświetlany bezpośrednio pod tytułem sekcji</li>\r\n	<li><strong>fields</strong> - zawiera tablicę obiektów pól wyświetlanych pod tytułem i opisem sekcji</li>\r\n</ul>\r\nKażde pole definiowane jest przez obiekt zawierający następujące pola:\r\n<ul>\r\n	<li><strong>name</strong> - określa nazwę opcji jaka będzie związana z danym polem. Do nazwy opcji automatycznie jest dodawany prefiks będący nazwą szablonu (przechowywany w zmiennej globalnej <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- określa typ pola. Standardowe rodzaje pól to:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - pole zawierające tekst opisu - nie jest stosowane do przechowywania żadnej wartości opcji</li>\r\n	<li><strong>Text</strong> - najprostsze pole tekstowe pozwalające na wprowadzanie krótkich wartości tekstowych</li>\r\n	<li><strong>Textarea</strong> - pole tekstowe służące do wprowadzania większej ilości wartości tekstowych</li>\r\n	<li><strong>Select</strong> - pole wyboru</li>\r\n	<li><strong>Switcher</strong> - pole wyboru ograniczone do dwóch opcji: "Enabled" i "Disabled"</li>\r\n	<li><strong>Media</strong> - pole pozwalające na wybór grafiki</li>\r\n	<li><strong>WidthHeight</strong> - pole pozwalające na określenie dwóch wartości definiujących szerokość i wysokość (najczęściej wykorzystywane wraz z polem Media).</li>\r\n</ul>\r\nPola te zdefiniowane są w pliku <strong>gavern/form_elements/standard.php</strong> a ich kod powstał na bazie dziedziczenia z klasy <strong>GKFormInput</strong>. Warto pamiętać, że pliki związane z opcjami parsowane są przez plik <strong>gavern/form.parser.php</strong>.Dodatkowo w katalogu <strong>gavern/form_elements</strong> można tworzyć własne typy pól. W GavernWP standardowo zawarliśmy następujące rodzaje pól:\r\n<ul>\r\n	<li><strong>Fonts</strong> - jest to pole generujące opcje związane z wyborem fontów - zastosowane w sekcji <strong>Fonts</strong>.</li>\r\n	<li><strong>Menu</strong> - pole pozwalające wygenerować opcje związane z menu strony - zastosowane w sekcji Navigation.</li>\r\n	<li><strong>TemplateStyle</strong> - pole pozwalające wybrać styl strony - zastosowane na poczatku sekcji <strong>Basic</strong>.</li>\r\n</ul>\r\nOpis tworzenia własnych rodzajów pól szerzej opiszemy w dalszej części tego artykułu.</li>\r\n	<li><strong>label</strong> - określa tekst etykiety widocznej obok pola</li>\r\n	<li><strong>tooltip</strong> - (opcjonalne) pozwala określić treść tooltipa, który pojawi się po najechaniu na etykietę danego pola.</li>\r\n	<li><strong>default</strong> - domyślna wartość danego pola.</li>\r\n	<li><strong>class</strong> - (opcjonalne) pole to pozwala określić klasy CSS dodawane do elementu podczas jego generowania (o ile taką funkcjonalność obsługuje kod pola)</li>\r\n	<li><strong>format</strong> - (opcjonalne) pole określające w postaci wyrażenia regularnego pożądaną zawartosć pola. Przykładowo wartość: [code][a-zA-Z]{2,5}[/code] określa, że dane pole będzie poprawnie wypełnione tylko wtedy, gdy użytkownik poda jako jego wartość ciąg liter dużych lub małych o długości 2 do 5 znaków</li>\r\n	<li><strong>required</strong> - (opcjonalne) pozwala określić czy wypełnienie danego pola jest wymagane</li>\r\n	<li><strong>visibility</strong> - (opcjonalne) określa kiedy dane pole jest widoczne. Reguły widoczności rozdzielane są przecinkiem i tworzone są w formacie <strong>FIELD_NAME=VALUE</strong> - w wypadku kilku reguł widoczności są one traktowane jako połączone operatorem <strong>AND</strong>. Wartość <strong>FIELD_NAME</strong> to nazwa pola bez prefiksu z nazwą szablonu. Przykładowo zapis: [code]option1=10,option2=20[/code] sprawi, że dane pole będzie widoczne dopiero wtedy gdy opcja o nazwie <strong>option1</strong> zostanie ustawiona na wartość <strong>10</strong> i jednocześnie opcja <strong>option2</strong> będzie mieć wartość <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (opcjonalne) pole to jest wykorzystywane do przechowywania dodatkowych wartości np. w wypadku pola typu <strong>Select</strong> do przechowywania nazw i wartości opcji. Jest to pole bardzo przydatne w wypadku tworzenia bardziej rozbudowanych pól, które mogą wymagać dodatkowych opcji konfiguracyjnych.</li>\r\n</ul>\r\nPo dodaniu nowej opcji należy pamiętać o obsłużeniu jej w samym szablonie. Wartość opcji pobieramy używając funkcji get_option według schematu:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\ngdzie <strong>OPTION_NAME</strong> to nazwa opcji z pliku JSON a <strong>DEFAULT_VALUE</strong> to wartość domyślna opcji, która zostanie wykorzystana w momencie kiedy użytkownik sam nie określił jeszcze wartości danej opcji. Co ważne przed <strong>OPTION_NAME</strong> znajduje się znak "<strong>_</strong>", którego nie wolno pominąć. Prefiks z nazwą szablonu jest dodawany w celu rozróżnienia wartości opcji różnych szablonów.\r\n<h3>Tworzenie własnych pól opcji</h3>\r\nPrzy tworzeniu nowego rodzaju pola należy zaczać od stworzenia katalogu zgodnego z nazwą pola np. <strong>CustomField</strong> w katalogu <strong>gavern/form_elements</strong>. Następnie w katalogu tym należy stworzyć plik config.json i wypełnić go według schematu:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\nPola <strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> muszą zawierać konkretne wartości, natomiast pola <strong>js</strong> i <strong>css</strong> są opcjonalne - pozwalają określić czy dane pole ma wykorzystywać dodatkowy kod CSS i JavaScript (wtedy należy jako ich wartość podać nazwę plików z katalogu pola). Należy też stworzyć plik <strong>customfield.php</strong> zawierający klasę <strong>GKFormInputCustomField</strong> dziedziczącą po klasie <strong>GKFormInput</strong>.\r\n\r\nNależy też zadbać o to by plik <strong>customfield.php</strong> zawierał na początku kod zabezpieczający:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nKażda klasa pola powinna zawierać co namniej jedną publiczną metodę - <strong>output</strong> nie pobierającą żadnych dodatkowych argumentów. Metoda ta musi zwracać kod HTML danego pola. Właściwości pola z pliku JSON są dostępne jako pola klasy np. właściwość <strong>required</strong> dostępna jest jako:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nDrugą ważną publiczną metodą każdej klasy pola formularza jest metoda <strong>getValue</strong>, która pobiera jeden argument - <strong>$default</strong>. Jej wykorzystanie jest opcjonalne i przydatne tylko wtedy, kiedy wartość danego pola korzysta z więcej niż jednego pola w bazie danych. Wtedy warto tą metodę nadpisać - jako przykład polecamy lekturę kodu standardowego pola <strong>WidthHeight</strong>, gdzie nadpisanie metody getValue zostało wykorzystane do przechowywania wartości dwóch pól formularza w obrębie jednego głównego pola tworzonego przez klasę <strong>GKInputFormWidthHeight</strong>.\r\n\r\nPozostałe metody klasy powinny być tworzone według uznania autora danego pola formularza.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-9', '', '', '2012-07-27 12:15:12', '2012-07-27 12:15:12', '', 427, 'http://wp1/uncategorized/427-revision-9/', 0, 'revision', '', 0),
(593, 1, '2012-08-11 00:33:03', '2012-08-11 00:33:03', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main files groups:\r\n<ul>\r\n	<li>plik <strong>tabs.json</strong> - it includes a list of sections visible on the right side of an administration panel:  [screensthot] each section is described with a table in the form [code]["Basic", "options.basic", "enabled"][/code] the first element of a table is a section name displayed in a panel, the second element is a file name without "<strong>.json</strong>" extension which stores a list of options available in a section given and the third value refers to whether a section given is visible in a panel. In this case, there will be a <strong>Basic</strong> tab displayed in a panel based on content of <strong>options.basic.json</strong> file.</li>\r\n	<li><strong>options.*.json </strong>files - they include a list of options available in a section given - their names are strictly connected with the content of <strong>tabs.json</strong> file.</li>\r\n</ul>\r\nEach options.*.json file includes three main fields in an object stored:\r\n<ul>\r\n	<li><strong>groupname</strong> - it is a section title</li>\r\n	<li><strong>groupdesc</strong> - it specifies a section description displayed directly under a  section title</li>\r\n	<li><strong>fields</strong> - it includes a table of objects of fields displayed under the title and a section description</li>\r\n</ul>\r\nEach field defined by an object including the following fields:\r\n<ul>\r\n	<li><strong>name</strong> - it specifies an option name which will be connected with a particular field. There is a prefix added automatically to an option name which is a template name (it is stored in a global variable - <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- it specifies a field type. Standard fields are:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - a field including a description text - it is not used for storing any option value</li>\r\n	<li><strong>Text</strong> - the easiest text field allowing to insert short text values</li>\r\n	<li><strong>Textarea</strong> - a text field used for inserting a greater number of text values</li>\r\n	<li><strong>Select</strong> - a select field</li>\r\n	<li><strong>Switcher</strong> - a checkbox restricted to two options: "Enabled" and "Disabled"</li>\r\n	<li><strong>Media</strong> - a field allowing to choose images</li>\r\n	<li><strong>WidthHeight</strong> - a field allowing to specify two values defining width and height (mostly used with a Media field)</li>\r\n</ul>\r\n</li>\r\n</ul>\r\nThese fields are defined in a <strong>gavern/form_elements/standard.php</strong> file and their code was derived from a <strong>GKFormInput</strong> field. It is worth remembering that files connected with options are parsed by a <strong>gavern/form.parser.php</strong> file. Additionally, you may create your own fields types in a <strong>gavern/form_elements</strong> catalog. In GavernWP, we have included the following fields types:\r\n<strong></strong>\r\n<ul>\r\n	<li><strong>Menu</strong> - a field allowing to generate options connected with page''s menu - used in a Navigation section</li>\r\n	<li><strong>TemplateStyle</strong> - a field allowing to choose page''s style - used at the beginning of a <strong>Basic</strong> section.</li>\r\n</ul>\r\nThe description of creating your own fields types we will describe in the further part of this article.\r\n<ul>\r\n	<li><strong>label</strong> - it specifies a label text visible next to a field</li>\r\n	<li><strong>tooltip</strong> - (optional) it allows to specify tooltip content which will appear after mousing over a label of a field given</li>\r\n	<li><strong>default</strong> - default value of a field given</li>\r\n	<li><strong>class</strong> - (optional) this field allows to specify CSS classes added to an element while generating it (if a field code supported such a functionality)</li>\r\n	<li><strong>format</strong> - (optional) a field specifying a desired field content in the form of a regular expression. e.g. value: [code][a-zA-Z]{2,5}[/code] specifies that a field given will be filled in correctly only when a user set as its value a sequence of capital or small letters from 2 to 5 symbols.</li>\r\n	<li><strong>required</strong> - (optional) allows to specify whether filling in a particular field was required</li>\r\n	<li><strong>visibility</strong> - (optional) specifies when a particular field is visible. Visibility rules are separated with commas and are created in <strong>FIELD_NAME=VALUE</strong> format - in the case of a few visibility rules, they are linked with <strong>AND</strong> operator. The value of  <strong>FIELD_NAME</strong> is a name without a prefix with a template name. e.g. [code]option1=10,option2=20[/code] will cause that a field given will be visible when an option with <strong>option1</strong> name will be set to <strong>10</strong> and, at the same time, an <strong>option2</strong> option will have have value equals <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (optional) this field is used for storing additional values, e.g. in the case of a <strong>Select</strong> field, it is used for storing names and options values. This field is very useful when creating more advanced fields which may require additional configuration options.</li>\r\n</ul>\r\nAfter adding a new option, you have to remember about its support in the template. Option value is loaded by using a get_option function of a schemata given:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\nwhen <strong>OPTION_NAME</strong> is an option name from a JSON file and <strong>DEFAULT_VALUE</strong> is default value of an option which will be used when a user does not specify a value of an option given. What is important, there is a "<strong>_</strong>" symbol which you cannot omit. A prefix with a template name is added in order differentiate values of options of different templates.\r\n<h3>Tworzenie własnych pól opcji</h3>\r\nWhile creating a new field type, you have to start from creating a catalog compliant with a field name, e.g. <strong>CustomField</strong> in a <strong>gavern/form_elements</strong> catalog. Then, you have to create a config.json file in this catalog and fill it in according to the schemata below:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\n<strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> fields have to include particular values; js and css fields are optional - they allow to specify whether a field given has to use additional CSS and JavaScript code (then, a name of files from a field catalog has to be set as a value). Also, you have to create a <strong>customfield.php</strong> file including a <strong>GKFormInputCustomField</strong> class derived after a <strong>GKFormInput</strong> class.\r\n\r\nAlso, a <strong>customfield.css</strong> file must include a safety code at the beginning:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nEach field class has to include at least one public method - <strong>output</strong> not loading any additional arguments. This method must return HTML code of a field given. Field properties froma JSON file are available as class fields, e.g. <strong>required</strong> is available as:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nThe second important public methid of each class of a form field is a <strong>getValue</strong> method which loads one argument - <strong>$default</strong>. Its use is optional and useful only when a value of a field given uses more than one field in the data base. Then, it is useful to overwrite this method - as an example we recommend a standard code of a <strong>WidthHeight</strong> field where overwritting a getValue method was used for storing values of two form fields in one main field created by a <strong>GKInputFormWidthHeight</strong> class.\r\n\r\nThe remaining class methods have to be created according to the needs of the author of a form  field given.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-10', '', '', '2012-08-11 00:33:03', '2012-08-11 00:33:03', '', 427, 'http://wp1/uncategorized/427-revision-10/', 0, 'revision', '', 0),
(594, 1, '2012-07-19 13:11:51', '2012-07-19 13:11:51', 'GavernWP has an extensive mechanism allowing to create additional template styles. We may distinguish two main groups of styles in this mechanism:\r\n<ul>\r\n	<li>style family</li>\r\n	<li>styles included in style family given</li>\r\n</ul>\r\nThe whole configuration is included in <strong>styles.json</strong> file:\r\n\r\n[code][{\r\n\r\n"family": "color",\r\n"family_desc": "Template color",\r\n"family_tooltip": "You can select one of the template colors",\r\n"styles": [\r\n{\r\n"name": "Color I",\r\n"value": "color1",\r\n"file": "style1.css"\r\n},\r\n{\r\n"name": "Color II",\r\n"value": "color2",\r\n"file": "style2.css"\r\n}\r\n]\r\n}][/code]\r\n\r\nAs you can see, it includes <strong>color</strong> style family which has two styles, namely: <strong>Color I</strong> and <strong>Color II</strong>.\r\n\r\nIn order to create new style family or a style for style family given, it is enough to create a next object in <strong>styles.json</strong> file and then create CSS files connected with a family given - in the case of <strong>color</strong> family, these are <strong>style1.css</strong> and <strong>style2.css</strong> files.\r\n\r\nGavernWP will load CSS files of a style given in a <strong>head</strong> section - chosen in an administration panel or, if there is a tool for choosing user''s styles switched on, they will be loaded based on a Cookie file storing data about a style used by a user.\r\n\r\nYou have to remember that for each style family there is at least one CSS file loaded. Therefore, creating coexisting style families like:\r\n<ul>\r\n	<li><strong>dark styles</strong> and <strong>light styles</strong></li>\r\n	<li><strong>blue styles</strong> and <strong>green styles</strong></li>\r\n</ul>\r\nis incorrect because at least one CSS style from each family will be loaded immediately. So the correct one is creating style families responsible for some elements of website styling, e.g. a separate family responsible for website coloring (<strong>colors</strong>) and a separate one for website background (<strong>patterns</strong>).\r\n\r\nGenerally, you have to care about particular style families in order not to overwrite one another.', 'Color Styles', '', 'inherit', 'open', 'open', '', '349-revision-3', '', '', '2012-07-19 13:11:51', '2012-07-19 13:11:51', '', 349, 'http://wp1/uncategorized/349-revision-3/', 0, 'revision', '', 0),
(595, 1, '2012-08-11 07:41:55', '2012-08-11 07:41:55', 'This is an example of the Video Post Format:\r\n\r\nhttp://www.vimeo.com/22126094\r\n\r\n[notice]<strong>Tip</strong>: for Vimeo videos please remember about using the HTTP (not HTTPS) protocol and the "www." prefix.[/notice]', 'Video Post', '', 'publish', 'open', 'open', '', 'video-post', '', '', '2012-08-11 07:49:36', '2012-08-11 07:49:36', '', 0, 'http://wp1/?p=595', 0, 'post', '', 0),
(596, 1, '2012-08-11 07:41:29', '2012-08-11 07:41:29', '', 'Video Post', '', 'inherit', 'open', 'open', '', '595-revision', '', '', '2012-08-11 07:41:29', '2012-08-11 07:41:29', '', 595, 'http://wp1/uncategorized/595-revision/', 0, 'revision', '', 0),
(597, 1, '2012-08-11 07:41:55', '2012-08-11 07:41:55', 'This is an example of the Video Post Format:\r\n\r\nhttps://vimeo.com/22126094', 'Video Post', '', 'inherit', 'open', 'open', '', '595-revision-2', '', '', '2012-08-11 07:41:55', '2012-08-11 07:41:55', '', 595, 'http://wp1/uncategorized/595-revision-2/', 0, 'revision', '', 0),
(598, 1, '2012-08-11 07:44:37', '2012-08-11 07:44:37', 'This is an example of the Video Post Format:\r\n\r\nhttp://www.vimeo.com/22126094', 'Video Post', '', 'inherit', 'open', 'open', '', '595-revision-3', '', '', '2012-08-11 07:44:37', '2012-08-11 07:44:37', '', 595, 'http://wp1/uncategorized/595-revision-3/', 0, 'revision', '', 0),
(599, 1, '2012-08-11 07:49:20', '2012-08-11 07:49:20', 'This is an example of the Link Post Format:\r\n\r\n<a href="http://www.gavick.com" target="_blank">GavickPro Website</a>\r\n\r\n<a href="http://www.gavick.com/documentation" target="_blank">GavickPro Documentation</a>', 'Link Post', '', 'publish', 'open', 'open', '', 'link-post', '', '', '2012-11-21 18:02:48', '2012-11-21 18:02:48', '', 0, 'http://wp1/?p=599', 0, 'post', '', 0),
(600, 1, '2012-08-11 07:47:42', '2012-08-11 07:47:42', 'Examples of usage the Post Formats feature.', '', '', 'publish', 'open', 'open', '', '600', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=600', 22, 'nav_menu_item', '', 0),
(602, 1, '2012-08-11 07:46:05', '2012-08-11 07:46:05', 'This is an example of the Video Post Format:\r\n\r\nhttp://www.vimeo.com/22126094\r\n\r\n[notice]<strong>Tip</strong>: for Vimeo videos please remember about using the HTTP (not HTTPS) protocol and the "www." prefix.[/notice]', 'Video Post', '', 'inherit', 'open', 'open', '', '595-revision-4', '', '', '2012-08-11 07:46:05', '2012-08-11 07:46:05', '', 595, 'http://wp1/uncategorized/595-revision-4/', 0, 'revision', '', 0),
(603, 1, '2012-08-11 07:51:47', '2012-08-11 07:51:47', 'This is an example of the Quote Post Format:\r\n\r\n[quote style="1" author="Amanda Turner"]Thank you for the great customer service! I appreciated that you had someone to help me, even though it was 2:45 a.m. where I am.[/quote]', 'Quote Post', '', 'publish', 'open', 'open', '', 'quote-post', '', '', '2012-08-11 07:52:44', '2012-08-11 07:52:44', '', 0, 'http://wp1/?p=603', 0, 'post', '', 0),
(604, 1, '2012-08-11 07:51:18', '2012-08-11 07:51:18', '[quote style="1" author=""]\n\nI would like to say thank you very much for fast reply to counter my problem with my joomla template. I know nothing knowledge using joomla cms and now we''re alive! Thank you so much.\n\n<cite>- Michelle</cite>[/quote]', 'Quote Post', '', 'inherit', 'open', 'open', '', '603-revision', '', '', '2012-08-11 07:51:18', '2012-08-11 07:51:18', '', 603, 'http://wp1/uncategorized/603-revision/', 0, 'revision', '', 0),
(605, 1, '2012-08-11 07:51:47', '2012-08-11 07:51:47', '[quote style="1" author="Amanda Turner"]Thank you for the great customer service! I appreciated that you had someone to help me, even though it was 2:45 a.m. where I am.[/quote]', 'Quote Post', '', 'inherit', 'open', 'open', '', '603-revision-2', '', '', '2012-08-11 07:51:47', '2012-08-11 07:51:47', '', 603, 'http://wp1/uncategorized/603-revision-2/', 0, 'revision', '', 0),
(606, 1, '2012-08-11 07:52:01', '2012-08-11 07:52:01', '[quote style="1" author="Amanda Turner"]Thank you for the great customer service! I appreciated that you had someone to help me, even though it was 2:45 a.m. where I am.[/quote]', 'Quote Post', '', 'inherit', 'open', 'open', '', '603-revision-3', '', '', '2012-08-11 07:52:01', '2012-08-11 07:52:01', '', 603, 'http://wp1/uncategorized/603-revision-3/', 0, 'revision', '', 0),
(607, 1, '2012-08-11 07:54:24', '2012-08-11 07:54:24', 'This is an example of the Aside Post Format, which can be used to show less important posts.\r\n\r\nCum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Sed posuere consectetur est at lobortis. Nullam id dolor id nibh ultricies vehicula ut id elit. Curabitur blandit tempus porttitor.', 'Aside Post', '', 'publish', 'open', 'open', '', 'aside-post', '', '', '2012-12-23 23:18:17', '2012-12-23 23:18:17', '', 0, 'http://wp1/?p=607', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(609, 1, '2012-08-11 07:57:14', '2012-08-11 07:57:14', 'This is an example of the Image Post Format:\r\n\r\n[caption id="attachment_610" align="aligncenter" width="313"]<a href="http://wp1/wp-content/uploads/2012/08/responsive.png"><img class="size-full wp-image-610" title="Web Responsive Design" alt="Web Responsive Design" src="http://wp1/wp-content/uploads/2012/08/responsive.png" width="313" height="167" /></a> Web Responsive Design is fully supported by the GavernWP Framework[/caption]', 'Image Post', '', 'publish', 'open', 'open', '', 'image-post', '', '', '2013-02-24 21:54:45', '2013-02-24 21:54:45', '', 0, 'http://wp1/?p=609', 0, 'post', '', 0),
(610, 1, '2012-08-11 07:56:24', '2012-08-11 07:56:24', '', 'Web Responsive Design', 'Web Responsive Design is fully supported by the GavernWP Framework', 'inherit', 'open', 'open', '', 'responsive', '', '', '2012-08-11 07:56:24', '2012-08-11 07:56:24', '', 609, 'http://wp1/wp-content/uploads/2012/08/responsive.png', 0, 'attachment', 'image/png', 0),
(614, 1, '2012-05-25 12:46:06', '2012-05-25 12:46:06', 'Lorem ipsum ;)', 'Login test', '', 'inherit', 'open', 'open', '', '56-revision-3', '', '', '2012-05-25 12:46:06', '2012-05-25 12:46:06', '', 56, 'http://wp1/uncategorized/56-revision-3/', 0, 'revision', '', 0),
(619, 1, '2012-06-11 14:01:53', '2012-06-11 14:01:53', 'Donec id elit non mi porta gravida at eget metus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Donec sed odio dui. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Donec id elit non mi porta gravida at eget metus. Nulla vitae elit libero, a pharetra augue. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla sed consectetur. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Maecenas sed diam eget risus varius blandit sit amet non magna. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit. Vestibulum id ligula porta felis euismod semper. Donec id elit non mi porta gravida at eget metus. Donec ullamcorper nulla non metus auctor fringilla. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Curabitur blandit tempus porttitor. Donec sed odio dui. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Curabitur blandit tempus porttitor. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras mattis consectetur purus sit amet fermentum. Curabitur blandit tempus porttitor. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nulla vitae elit libero, a pharetra augue. Donec ullamcorper nulla non metus auctor fringilla. Sed posuere consectetur est at lobortis. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec sed odio dui. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Sed posuere consectetur est at lobortis. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Lorem ipsum dolor sit amet, consectetur adipiscing elit.', 'Full width', '', 'inherit', 'open', 'open', '', '131-revision-2', '', '', '2012-06-11 14:01:53', '2012-06-11 14:01:53', '', 131, 'http://wp1/uncategorized/131-revision-2/', 0, 'revision', '', 0),
(621, 1, '2012-05-24 12:32:40', '2012-05-24 12:32:40', 'It is a simple example of the template tag cloud - as you can see it is awesome :)', 'Tag cloud', '', 'inherit', 'open', 'open', '', '112-revision-2', '', '', '2012-05-24 12:32:40', '2012-05-24 12:32:40', '', 112, 'http://wp1/uncategorized/112-revision-2/', 0, 'revision', '', 0),
(622, 1, '2012-05-28 17:47:09', '2012-05-28 17:47:09', 'Hello Mate :) Feel free to write us your opinion about our amazing template :)', 'Contact us', '', 'inherit', 'open', 'open', '', '74-revision-3', '', '', '2012-05-28 17:47:09', '2012-05-28 17:47:09', '', 74, 'http://wp1/uncategorized/74-revision-3/', 0, 'revision', '', 0),
(623, 1, '2012-08-11 09:35:23', '2012-08-11 09:35:23', 'Hello Mate :) Feel free to write us your opinion about our amazing template :)', 'Contact page', '', 'inherit', 'open', 'open', '', '74-autosave', '', '', '2012-08-11 09:35:23', '2012-08-11 09:35:23', '', 74, 'http://wp1/uncategorized/74-autosave/', 0, 'revision', '', 0),
(624, 1, '2012-08-11 09:34:22', '2012-08-11 09:34:22', 'Hello Mate :) Feel free to write us your opinion about our amazing template :)', 'Contact page', '', 'inherit', 'open', 'open', '', '74-revision-4', '', '', '2012-08-11 09:34:22', '2012-08-11 09:34:22', '', 74, 'http://wp1/uncategorized/74-revision-4/', 0, 'revision', '', 0),
(625, 1, '2012-08-11 09:37:22', '2012-08-11 09:37:22', 'Feel free to write us your opinion/suggestions about our template ;-)', 'Contact page', '', 'inherit', 'open', 'open', '', '74-revision-5', '', '', '2012-08-11 09:37:22', '2012-08-11 09:37:22', '', 74, 'http://wp1/uncategorized/74-revision-5/', 0, 'revision', '', 0),
(627, 1, '2012-08-11 09:32:59', '2012-08-11 09:32:59', 'Donec id elit non mi porta gravida at eget metus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Donec sed odio dui. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Donec id elit non mi porta gravida at eget metus. Nulla vitae elit libero, a pharetra augue. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Aenean lacinia bibendum nulla sed consectetur. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Maecenas sed diam eget risus varius blandit sit amet non magna. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit. Vestibulum id ligula porta felis euismod semper. Donec id elit non mi porta gravida at eget metus. Donec ullamcorper nulla non metus auctor fringilla. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Curabitur blandit tempus porttitor. Donec sed odio dui. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Curabitur blandit tempus porttitor. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras mattis consectetur purus sit amet fermentum. Curabitur blandit tempus porttitor. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nulla vitae elit libero, a pharetra augue. Donec ullamcorper nulla non metus auctor fringilla. Sed posuere consectetur est at lobortis. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec sed odio dui. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Sed posuere consectetur est at lobortis. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Lorem ipsum dolor sit amet, consectetur adipiscing elit.', 'Full width page', '', 'inherit', 'open', 'open', '', '131-revision-3', '', '', '2012-08-11 09:32:59', '2012-08-11 09:32:59', '', 131, 'http://wp1/uncategorized/131-revision-3/', 0, 'revision', '', 0),
(629, 1, '2012-08-11 09:32:13', '2012-08-11 09:32:13', 'Lorem ipsum ;)', 'Login page', '', 'inherit', 'open', 'open', '', '56-revision-4', '', '', '2012-08-11 09:32:13', '2012-08-11 09:32:13', '', 56, 'http://wp1/uncategorized/56-revision-4/', 0, 'revision', '', 0),
(630, 1, '2012-08-11 09:33:15', '2012-08-11 09:33:15', 'It is a simple example of the template tag cloud - as you can see it is awesome :)', 'Tag cloud page', '', 'inherit', 'open', 'open', '', '112-revision-3', '', '', '2012-08-11 09:33:15', '2012-08-11 09:33:15', '', 112, 'http://wp1/uncategorized/112-revision-3/', 0, 'revision', '', 0),
(632, 1, '2012-08-11 09:40:49', '2012-08-11 09:40:49', ' ', '', '', 'publish', 'open', 'open', '', '632', '', '', '2012-11-20 14:47:02', '2012-11-20 14:47:02', '', 0, 'http://wp1/?p=632', 5, 'nav_menu_item', '', 0),
(633, 1, '2012-08-11 09:42:39', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-11 09:42:39', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=633', 0, 'post', '', 0),
(638, 1, '2012-07-28 13:50:38', '2012-07-28 13:50:38', 'Widget areas available in the Meet GavernWP template:\r\n<a href="http://wp1/wp-content/uploads/2012/07/widget_areas.png"><img class="aligncenter size-full wp-image-510" title="Widget areas" src="http://wp1/wp-content/uploads/2012/07/widget_areas.png" alt="Widget areas" width="752" height="646" /></a>', 'Widget areas', '', 'inherit', 'open', 'open', '', '509-revision-3', '', '', '2012-07-28 13:50:38', '2012-07-28 13:50:38', '', 509, 'http://wp1/uncategorized/509-revision-3/', 0, 'revision', '', 0),
(641, 1, '2012-12-15 10:41:43', '2012-12-15 10:41:43', 'This page presents widget styles available in this theme.\n\nWe have also included a really useful mechanism - you can put the icon in the header using following syntax:\n\n[code][icon-name] Header text[/code]\n\nWhere icon-name is one of <a title="Available classes" href="http://twitter.github.com/bootstrap/base-css.html#icons" target="_blank">available classes</a>.', 'Widget Styles', '', 'inherit', 'open', 'open', '', '506-autosave', '', '', '2012-12-15 10:41:43', '2012-12-15 10:41:43', '', 506, 'http://wp1/uncategorized/506-autosave/', 0, 'revision', '', 0),
(643, 1, '2012-08-07 10:29:13', '2012-08-07 10:29:13', 'Basic settings of GavernWP allow to specify basic parameters connected with page''s display:\r\n\r\n[screenshot]\r\n\r\nThe first option allows to choose a color version of a template. In this place, there may appear a few various fields depending on the conent of <strong>styles.json</strong> configuration file.\r\n\r\nThere is an option allowing to switch a style-switcher after an option/options of choosing template''s styles  - it is an element allowing for a website''s user to choose a template style himself/herself.\r\n\r\n<strong>"Use header image"</strong> option allows to specify whether there are some images in the case where there are no widgets switched on, on a header widget position. These images can be specified in a templates live editor in a <strong>Header Image</strong> section.\r\n\r\nThe next two options are connected with switching on breadcrumbs and font-size switcher elements on a website. There are the following options to choose from: <strong>Enabled</strong>, <strong>Disabled</strong> and <strong>Conditional rule</strong> - then, you have to set a rule using <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of PHP language in a <strong>Conditional rule</strong> field, e.g. a rule displayinga a breadcrumbs element on the homepage and in the "Meet GavernWP" category will be in the following form: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\r\n\r\n"<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" option is useful when you want to place a widget instead of entries on the homepage - then  you have to switch it on <strong>mainbody</strong> widget position, place a widget needed which will replace a standard list of posts generated by Wordpress.\r\n\r\nThe last option, namely <strong>"Show author info"</strong> allows to display information about its author under each post in the following form:\r\n\r\n[screenshot]\r\n\r\n&nbsp;', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-revision-9', '', '', '2012-08-07 10:29:13', '2012-08-07 10:29:13', '', 416, 'http://wp1/uncategorized/416-revision-9/', 0, 'revision', '', 0),
(644, 1, '2012-08-12 15:56:32', '2012-08-12 15:56:32', 'Basic settings of GavernWP allow to specify basic parameters connected with page''s display:\r\n\r\n[screenshot]\r\n\r\nThe first option allows to choose a color version of a template. In this place, there may appear a few various fields depending on the conent of <strong>styles.json</strong> configuration file.\r\n\r\nThere is an option allowing to switch a style-switcher after an option/options of choosing template''s styles  - it is an element allowing for a website''s user to choose a template style himself/herself.\r\n\r\nThe next option is connected with switching on breadcrumbs element on a website. There are the following options to choose from: <strong>Enabled</strong>, <strong>Disabled</strong> and <strong>Conditional rule</strong> - then, you have to set a rule using <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of PHP language in a <strong>Conditional rule</strong> field, e.g. a rule displayinga a breadcrumbs element on the homepage and in the "Meet GavernWP" category will be in the following form: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\r\n\r\n"<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" option is useful when you want to place a widget instead of entries on the homepage - then  you have to switch it on <strong>mainbody</strong> widget position, place a widget needed which will replace a standard list of posts generated by Wordpress.\r\n\r\nThe last option, namely <strong>"Show author info"</strong> allows to display information about its author under each post in the following form:\r\n\r\n[screenshot]\r\n\r\n&nbsp;', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-revision-10', '', '', '2012-08-12 15:56:32', '2012-08-12 15:56:32', '', 416, 'http://wp1/uncategorized/416-revision-10/', 0, 'revision', '', 0),
(645, 1, '2012-08-12 08:40:51', '2012-08-12 08:40:51', 'Widget areas available in the Meet GavernWP template:\r\n<a href="http://wp1/wp-content/uploads/2012/07/widget_areas.png"><img class="aligncenter size-full wp-image-510" title="Widget areas" src="http://wp1/wp-content/uploads/2012/07/widget_areas.png" alt="Widget areas" width="752" height="692" /></a>', 'Widget areas', '', 'inherit', 'open', 'open', '', '509-revision-4', '', '', '2012-08-12 08:40:51', '2012-08-12 08:40:51', '', 509, 'http://wp1/uncategorized/509-revision-4/', 0, 'revision', '', 0),
(647, 1, '2012-08-11 09:37:30', '2012-08-11 09:37:30', 'Hello, feel free to write us your opinion/suggestions about our template ;-)', 'Contact page', '', 'inherit', 'open', 'open', '', '74-revision-6', '', '', '2012-08-11 09:37:30', '2012-08-11 09:37:30', '', 74, 'http://wp1/uncategorized/74-revision-6/', 0, 'revision', '', 0),
(648, 1, '2012-12-20 16:03:57', '2012-12-20 16:03:57', 'This is an example of the Image Post Format:\n\n[caption id="attachment_610" align="aligncenter" width="313"]<a href="http://wp1/wp-content/uploads/2012/08/responsive.png"><img class="size-full wp-image-610" title="Web Responsive Design" alt="Web Responsive Design" src="http://wp1/wp-content/uploads/2012/08/responsive.png" width="313" height="167" /></a> Web Responsive Design is fully supported by the GavernWP Framework[/caption]', 'Image Post', '', 'inherit', 'open', 'open', '', '609-autosave', '', '', '2012-12-20 16:03:57', '2012-12-20 16:03:57', '', 609, 'http://wp1/uncategorized/609-autosave/', 0, 'revision', '', 0),
(649, 1, '2012-12-23 23:17:06', '2012-12-23 23:17:06', 'This is an example of the Aside Post Format, which can be used to show less important posts.\n\nCum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n\n<!--more-->Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Sed posuere consectetur est at lobortis. Nullam id dolor id nibh ultricies vehicula ut id elit. Curabitur blandit tempus porttitor.', 'Aside Post', '', 'inherit', 'open', 'open', '', '607-autosave', '', '', '2012-12-23 23:17:06', '2012-12-23 23:17:06', '', 607, 'http://wp1/uncategorized/607-autosave/', 0, 'revision', '', 0),
(650, 1, '2012-08-12 17:27:35', '2012-08-12 17:27:35', 'This is an example of the Quote Post Format:\n\n[quote style="1" author="Amanda Turner"]Thank you for the great customer service! I appreciated that you had someone to help me, even though it was 2:45 a.m. where I am.[/quote]', 'Quote Post', '', 'inherit', 'open', 'open', '', '603-autosave', '', '', '2012-08-12 17:27:35', '2012-08-12 17:27:35', '', 603, 'http://wp1/uncategorized/603-autosave/', 0, 'revision', '', 0),
(651, 1, '2012-11-21 17:50:10', '2012-11-21 17:50:10', 'This is an example of the Link Post Format:\n\n<a href="http://www.gavick.com" target="_blank">GavickPro Website</a>\n\n<a href="http://www.gavick.com/documentation" target="_blank">GavickPro Documentation</a>', 'Link Post', '', 'inherit', 'open', 'open', '', '599-autosave', '', '', '2012-11-21 17:50:10', '2012-11-21 17:50:10', '', 599, 'http://wp1/uncategorized/599-autosave/', 0, 'revision', '', 0),
(652, 1, '2012-08-12 17:27:42', '2012-08-12 17:27:42', 'This is an example of the Video Post Format:\n\nhttp://www.vimeo.com/22126094\n\n[notice]<strong>Tip</strong>: for Vimeo videos please remember about using the HTTP (not HTTPS) protocol and the "www." prefix.[/notice]', 'Video Post', '', 'inherit', 'open', 'open', '', '595-autosave', '', '', '2012-08-12 17:27:42', '2012-08-12 17:27:42', '', 595, 'http://wp1/uncategorized/595-autosave/', 0, 'revision', '', 0),
(653, 1, '2012-08-11 00:35:02', '2012-08-11 00:35:02', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main files groups:\r\n<ul>\r\n	<li><strong>tabs.json</strong> file - it includes a list of sections visible on the right side of an administration panel:  [screensthot] each section is described with a table in the form [code]["Basic", "options.basic", "enabled"][/code] the first element of a table is a section name displayed in a panel, the second element is a file name without "<strong>.json</strong>" extension which stores a list of options available in a section given and the third value refers to whether a section given is visible in a panel. In this case, there will be a <strong>Basic</strong> tab displayed in a panel based on content of <strong>options.basic.json</strong> file.</li>\r\n	<li><strong>options.*.json </strong>files - they include a list of options available in a section given - their names are strictly connected with the content of <strong>tabs.json</strong> file.</li>\r\n</ul>\r\nEach options.*.json file includes three main fields in an object stored:\r\n<ul>\r\n	<li><strong>groupname</strong> - it is a section title</li>\r\n	<li><strong>groupdesc</strong> - it specifies a section description displayed directly under a  section title</li>\r\n	<li><strong>fields</strong> - it includes a table of objects of fields displayed under the title and a section description</li>\r\n</ul>\r\nEach field defined by an object including the following fields:\r\n<ul>\r\n	<li><strong>name</strong> - it specifies an option name which will be connected with a particular field. There is a prefix added automatically to an option name which is a template name (it is stored in a global variable - <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- it specifies a field type. Standard fields are:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - a field including a description text - it is not used for storing any option value</li>\r\n	<li><strong>Text</strong> - the easiest text field allowing to insert short text values</li>\r\n	<li><strong>Textarea</strong> - a text field used for inserting a greater number of text values</li>\r\n	<li><strong>Select</strong> - a select field</li>\r\n	<li><strong>Switcher</strong> - a checkbox restricted to two options: "Enabled" and "Disabled"</li>\r\n	<li><strong>Media</strong> - a field allowing to choose images</li>\r\n	<li><strong>WidthHeight</strong> - a field allowing to specify two values defining width and height (mostly used with a Media field)</li>\r\n</ul>\r\n</li>\r\n</ul>\r\nThese fields are defined in a <strong>gavern/form_elements/standard.php</strong> file and their code was derived from a <strong>GKFormInput</strong> field. It is worth remembering that files connected with options are parsed by a <strong>gavern/form.parser.php</strong> file. Additionally, you may create your own fields types in a <strong>gavern/form_elements</strong> catalog. In GavernWP, we have included the following fields types:\r\n<strong></strong>\r\n<ul>\r\n	<li><strong>Menu</strong> - a field allowing to generate options connected with page''s menu - used in a Navigation section</li>\r\n	<li><strong>TemplateStyle</strong> - a field allowing to choose page''s style - used at the beginning of a <strong>Basic</strong> section.</li>\r\n</ul>\r\nThe description of creating your own fields types we will describe in the further part of this article.\r\n<ul>\r\n	<li><strong>label</strong> - it specifies a label text visible next to a field</li>\r\n	<li><strong>tooltip</strong> - (optional) it allows to specify tooltip content which will appear after mousing over a label of a field given</li>\r\n	<li><strong>default</strong> - default value of a field given</li>\r\n	<li><strong>class</strong> - (optional) this field allows to specify CSS classes added to an element while generating it (if a field code supported such a functionality)</li>\r\n	<li><strong>format</strong> - (optional) a field specifying a desired field content in the form of a regular expression. e.g. value: [code][a-zA-Z]{2,5}[/code] specifies that a field given will be filled in correctly only when a user set as its value a sequence of capital or small letters from 2 to 5 symbols.</li>\r\n	<li><strong>required</strong> - (optional) allows to specify whether filling in a particular field was required</li>\r\n	<li><strong>visibility</strong> - (optional) specifies when a particular field is visible. Visibility rules are separated with commas and are created in <strong>FIELD_NAME=VALUE</strong> format - in the case of a few visibility rules, they are linked with <strong>AND</strong> operator. The value of  <strong>FIELD_NAME</strong> is a name without a prefix with a template name. e.g. [code]option1=10,option2=20[/code] will cause that a field given will be visible when an option with <strong>option1</strong> name will be set to <strong>10</strong> and, at the same time, an <strong>option2</strong> option will have have value equals <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (optional) this field is used for storing additional values, e.g. in the case of a <strong>Select</strong> field, it is used for storing names and options values. This field is very useful when creating more advanced fields which may require additional configuration options.</li>\r\n</ul>\r\nAfter adding a new option, you have to remember about its support in the template. Option value is loaded by using a get_option function of a schemata given:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\nwhen <strong>OPTION_NAME</strong> is an option name from a JSON file and <strong>DEFAULT_VALUE</strong> is default value of an option which will be used when a user does not specify a value of an option given. What is important, there is a "<strong>_</strong>" symbol which you cannot omit. A prefix with a template name is added in order differentiate values of options of different templates.\r\n<h3>Creating your own field types options</h3>\r\nWhile creating a new field type, you have to start from creating a catalog compliant with a field name, e.g. <strong>CustomField</strong> in a <strong>gavern/form_elements</strong> catalog. Then, you have to create a config.json file in this catalog and fill it in according to the schemata below:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\n<strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> fields have to include particular values; js and css fields are optional - they allow to specify whether a field given has to use additional CSS and JavaScript code (then, a name of files from a field catalog has to be set as a value). Also, you have to create a <strong>customfield.php</strong> file including a <strong>GKFormInputCustomField</strong> class derived after a <strong>GKFormInput</strong> class.\r\n\r\nAlso, a <strong>customfield.css</strong> file must include a safety code at the beginning:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nEach field class has to include at least one public method - <strong>output</strong> not loading any additional arguments. This method must return HTML code of a field given. Field properties froma JSON file are available as class fields, e.g. <strong>required</strong> is available as:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nThe second important public methid of each class of a form field is a <strong>getValue</strong> method which loads one argument - <strong>$default</strong>. Its use is optional and useful only when a value of a field given uses more than one field in the data base. Then, it is useful to overwrite this method - as an example we recommend a standard code of a <strong>WidthHeight</strong> field where overwritting a getValue method was used for storing values of two form fields in one main field created by a <strong>GKInputFormWidthHeight</strong> class.\r\n\r\nThe remaining class methods have to be created according to the needs of the author of a form  field given.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-11', '', '', '2012-08-11 00:35:02', '2012-08-11 00:35:02', '', 427, 'http://wp1/uncategorized/427-revision-11/', 0, 'revision', '', 0),
(654, 1, '2012-08-12 17:31:09', '2012-08-12 17:31:09', '', 'Sidebar', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-1', '', '', '2012-08-12 17:31:09', '2012-08-12 17:31:09', '', 427, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-1.jpg', 0, 'attachment', 'image/jpeg', 0),
(655, 1, '2012-08-12 17:29:39', '2012-08-12 17:29:39', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main files groups:\r\n<ul>\r\n	<li><strong>tabs.json</strong> file - it includes a list of sections visible on the right side of an administration panel:  [screensthot] each section is described with a table in the form [code]["Basic", "options.basic", "enabled"][/code] the first element of a table is a section name displayed in a panel, the second element is a file name without "<strong>.json</strong>" extension which stores a list of options available in a section given and the third value refers to whether a section given is visible in a panel. In this case, there will be a <strong>Basic</strong> tab displayed in a panel based on content of <strong>options.basic.json</strong> file.</li>\r\n	<li><strong>options.*.json </strong>files - they include a list of options available in a section given - their names are strictly connected with the content of <strong>tabs.json</strong> file.</li>\r\n</ul>\r\nEach options.*.json file includes three main fields in an object stored:\r\n<ul>\r\n	<li><strong>groupname</strong> - it is a section title</li>\r\n	<li><strong>groupdesc</strong> - it specifies a section description displayed directly under a  section title</li>\r\n	<li><strong>fields</strong> - it includes a table of objects of fields displayed under the title and a section description</li>\r\n</ul>\r\nEach field defined by an object including the following fields:\r\n<ul>\r\n	<li><strong>name</strong> - it specifies an option name which will be connected with a particular field. There is a prefix added automatically to an option name which is a theme name (it is stored in a global variable - <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- it specifies a field type. Standard fields are:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - a field including a description text - it is not used for storing any option value</li>\r\n	<li><strong>Text</strong> - the easiest text field allowing to insert short text values</li>\r\n	<li><strong>Textarea</strong> - a text field used for inserting a greater number of text values</li>\r\n	<li><strong>Select</strong> - a select field</li>\r\n	<li><strong>Switcher</strong> - a checkbox restricted to two options: "Enabled" and "Disabled"</li>\r\n	<li><strong>Media</strong> - a field allowing to choose images</li>\r\n	<li><strong>WidthHeight</strong> - a field allowing to specify two values defining width and height (mostly used with a Media field)</li>\r\n</ul>\r\n</li>\r\n</ul>\r\nThese fields are defined in a <strong>gavern/form_elements/standard.php</strong> file and their code was derived from a <strong>GKFormInput</strong> field. It is worth remembering that files connected with options are parsed by a <strong>gavern/form.parser.php</strong> file. Additionally, you may create your own fields types in a <strong>gavern/form_elements</strong> catalog. In GavernWP, we have included the following fields types:\r\n<strong></strong>\r\n<ul>\r\n	<li><strong>Menu</strong> - a field allowing to generate options connected with page''s menu - used in a Navigation section</li>\r\n	<li><strong>TemplateStyle</strong> - a field allowing to choose page''s style - used at the beginning of a <strong>Basic</strong> section.</li>\r\n</ul>\r\nThe description of creating your own fields types we will describe in the further part of this article.\r\n<ul>\r\n	<li><strong>label</strong> - it specifies a label text visible next to a field</li>\r\n	<li><strong>tooltip</strong> - (optional) it allows to specify tooltip content which will appear after mousing over a label of a field given</li>\r\n	<li><strong>default</strong> - default value of a field given</li>\r\n	<li><strong>class</strong> - (optional) this field allows to specify CSS classes added to an element while generating it (if a field code supported such a functionality)</li>\r\n	<li><strong>format</strong> - (optional) a field specifying a desired field content in the form of a regular expression. e.g. value: [code][a-zA-Z]{2,5}[/code] specifies that a field given will be filled in correctly only when a user set as its value a sequence of capital or small letters from 2 to 5 symbols.</li>\r\n	<li><strong>required</strong> - (optional) allows to specify whether filling in a particular field was required</li>\r\n	<li><strong>visibility</strong> - (optional) specifies when a particular field is visible. Visibility rules are separated with commas and are created in <strong>FIELD_NAME=VALUE</strong> format - in the case of a few visibility rules, they are linked with <strong>AND</strong> operator. The value of  <strong>FIELD_NAME</strong> is a name without a prefix with a theme name. e.g. [code]option1=10,option2=20[/code] will cause that a field given will be visible when an option with <strong>option1</strong> name will be set to <strong>10</strong> and, at the same time, an <strong>option2</strong> option will have have value equals <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (optional) this field is used for storing additional values, e.g. in the case of a <strong>Select</strong> field, it is used for storing names and options values. This field is very useful when creating more advanced fields which may require additional configuration options.</li>\r\n</ul>\r\nAfter adding a new option, you have to remember about its support in the theme. Option value is loaded by using a get_option function of a schemata given:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\nwhen <strong>OPTION_NAME</strong> is an option name from a JSON file and <strong>DEFAULT_VALUE</strong> is default value of an option which will be used when a user does not specify a value of an option given. What is important, there is a "<strong>_</strong>" symbol which you cannot omit. A prefix with a theme name is added in order differentiate values of options of different themes.\r\n<h3>Creating your own field types options</h3>\r\nWhile creating a new field type, you have to start from creating a catalog compliant with a field name, e.g. <strong>CustomField</strong> in a <strong>gavern/form_elements</strong> catalog. Then, you have to create a config.json file in this catalog and fill it in according to the schemata below:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\n<strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> fields have to include particular values; js and css fields are optional - they allow to specify whether a field given has to use additional CSS and JavaScript code (then, a name of files from a field catalog has to be set as a value). Also, you have to create a <strong>customfield.php</strong> file including a <strong>GKFormInputCustomField</strong> class derived after a <strong>GKFormInput</strong> class.\r\n\r\nAlso, a <strong>customfield.css</strong> file must include a safety code at the beginning:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nEach field class has to include at least one public method - <strong>output</strong> not loading any additional arguments. This method must return HTML code of a field given. Field properties froma JSON file are available as class fields, e.g. <strong>required</strong> is available as:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nThe second important public methid of each class of a form field is a <strong>getValue</strong> method which loads one argument - <strong>$default</strong>. Its use is optional and useful only when a value of a field given uses more than one field in the data base. Then, it is useful to overwrite this method - as an example we recommend a standard code of a <strong>WidthHeight</strong> field where overwritting a getValue method was used for storing values of two form fields in one main field created by a <strong>GKInputFormWidthHeight</strong> class.\r\n\r\nThe remaining class methods have to be created according to the needs of the author of a form  field given.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-12', '', '', '2012-08-12 17:29:39', '2012-08-12 17:29:39', '', 427, 'http://wp1/uncategorized/427-revision-12/', 0, 'revision', '', 0),
(656, 1, '2012-08-12 17:33:43', '2012-08-12 17:33:43', '', 'Social API', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-2', '', '', '2012-08-12 17:33:43', '2012-08-12 17:33:43', '', 424, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-2.jpg', 0, 'attachment', 'image/jpeg', 0),
(657, 1, '2012-07-30 10:58:19', '2012-07-30 10:58:19', 'A section of options connected with Social API includes five groups of options:\r\n<ul>\r\n	<li>options connected with sharing at Facebook</li>\r\n	<li>options connected with sharing on G+</li>\r\n	<li>options connected with sharing on Twitter</li>\r\n	<li>options connected with sharing on Pinterest</li>\r\n	<li>options allowing to switch on/off Social API on particular subpages.</li>\r\n</ul>\r\nOptions connected with sharing are the equivalent of parameters available in online editors, used for creating buttons like:\r\n<ul>\r\n	<li><a href="https://developers.facebook.com/docs/reference/plugins/like/" target="_blank">Facebook - ''like it'' button</a></li>\r\n	<li><a href="https://developers.google.com/+/plugins/+1button/" target="_blank">Goggle Plus - ''+1'' button</a></li>\r\n	<li><a href="https://dev.twitter.com/docs/tweet-button" target="_blank">Twitter - ''tweet'' button</a></li>\r\n	<li><a href="http://pinterest.com/about/goodies/" target="_blank">Pinterest - ''pin it'' button</a></li>\r\n</ul>\r\nThe last group of options allows to specify where they will be displayed - thanks to <strong>Include/Exclude specified articles from Social API</strong> option, it is possible to switch off Social API completely or switch on/off this functionality only for chosen posts, subpages and categories.\r\n\r\nWe specify the list of posts, subpages and categories in three last options:\r\n\r\n[screenshot]\r\n\r\nas a sequence of ID, slug or the names of posts given, subpages or categories separated with comas, e.g.  [code]1,5,25[/code] or [code]typography,template-settings,template-essentials[/code]', 'Social API settings', '', 'inherit', 'open', 'open', '', '424-revision-4', '', '', '2012-07-30 10:58:19', '2012-07-30 10:58:19', '', 424, 'http://wp1/uncategorized/424-revision-4/', 0, 'revision', '', 0),
(659, 1, '2012-08-12 17:36:11', '2012-08-12 17:36:11', '', 'Advanced settings', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-3', '', '', '2012-08-12 17:36:11', '2012-08-12 17:36:11', '', 422, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-3.jpg', 0, 'attachment', 'image/jpeg', 0),
(660, 1, '2012-08-12 17:36:28', '2012-08-12 17:36:28', '', 'Open Graph Metabox', '', 'inherit', 'open', 'open', '', 'edit-post-meet-gavern-wp-wordpress-1', '', '', '2012-08-12 17:36:28', '2012-08-12 17:36:28', '', 422, 'http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg', 0, 'attachment', 'image/jpeg', 0),
(661, 1, '2012-07-27 08:45:53', '2012-07-27 08:45:53', 'An advanced settings section includes settings which are connected with different aspects of GavernWP framework work:\r\n\r\n[screenshot]\r\n<ul>\r\n	<li><strong>Widget rules</strong> allows to switch on this mechanism. It is recommended to switch on this option in the case when you do not need to use widgets visible on a chosen subpages. Note that it will allow to optimize a little bit the speed of a website as operations of checking rules for each widget will not be made.</li>\r\n	<li><strong>Support for Google Chrome Frame</strong> - it switches on a metatag forcing use of  <a href="https://developers.google.com/chrome/chrome-frame/" target="_blank">Google Chrome Frame</a> plugin on Internet Explorer browsers if it is installed.</li>\r\n	<li><strong>Parse emoticons in the text widgets</strong> - it activates parsing emoticons to a graphic form in widgets.</li>\r\n	<li><strong>Parse shortcodes in the text widgets</strong> - it activates parsing of <a href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> in widgets.</li>\r\n	<li><strong>Use Thickbox</strong> - it allows to switch on Thickbox  script for presenting images included in posts.</li>\r\n	<li><strong>Value for the $content_width variable</strong> -  <strong>$content_width</strong> variable is used while creating thumbnails of images for posts, that''s why it has to be defined as an appropriate value - we recommend to set the value not bigger than the max. page''s width.</li>\r\n	<li><strong>Use the override.css file</strong> - thanks to switching on this option, an <strong>override.css</strong> file will appear at the end of the list of CSS files which allows to overwrite template''s CSS rules easily without interference in existing CSS code.</li>\r\n	<li><strong>Enable support for Open Search</strong> - it allows to switch on support for  <a href="http://www.opensearch.org/Home" target="_blank">Open Search</a> technology.</li>\r\n	<li><strong>Enable support for Open Graph</strong> - it allows to switch on support for <a href="http://ogp.me/" target="_blank">Open Graph </a> technology - after switching on this option, an additional metabox will appear on a page for editing posts: [screenshot]</li>\r\n</ul>', 'Advanced settings', '', 'inherit', 'open', 'open', '', '422-revision-8', '', '', '2012-07-27 08:45:53', '2012-07-27 08:45:53', '', 422, 'http://wp1/uncategorized/422-revision-8/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(662, 1, '2012-08-12 17:31:53', '2012-08-12 17:31:53', 'Modification of administration panel content  in GavernWP is very easy - it is based on JSON files which include a list of options. Thanks to it, creating new options available in an administration panel is very easy.\r\n\r\nOptions files are in gavern/options catalog in a folder connected with a currently used language. In the catalog, you will find two main files groups:\r\n<ul>\r\n	<li><strong>tabs.json</strong> file - it includes a list of sections visible on the right side of an administration panel: <a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-654" title="Sidebar" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="231" height="485" /></a> each section is described with a table in the form [code]["Basic", "options.basic", "enabled"][/code] the first element of a table is a section name displayed in a panel, the second element is a file name without "<strong>.json</strong>" extension which stores a list of options available in a section given and the third value refers to whether a section given is visible in a panel. In this case, there will be a <strong>Basic</strong> tab displayed in a panel based on content of <strong>options.basic.json</strong> file.</li>\r\n	<li><strong>options.*.json </strong>files - they include a list of options available in a section given - their names are strictly connected with the content of <strong>tabs.json</strong> file.</li>\r\n</ul>\r\nEach options.*.json file includes three main fields in an object stored:\r\n<ul>\r\n	<li><strong>groupname</strong> - it is a section title</li>\r\n	<li><strong>groupdesc</strong> - it specifies a section description displayed directly under a  section title</li>\r\n	<li><strong>fields</strong> - it includes a table of objects of fields displayed under the title and a section description</li>\r\n</ul>\r\nEach field defined by an object including the following fields:\r\n<ul>\r\n	<li><strong>name</strong> - it specifies an option name which will be connected with a particular field. There is a prefix added automatically to an option name which is a theme name (it is stored in a global variable - <strong>$tpl-&gt;name</strong>).</li>\r\n	<li><strong>type</strong>- it specifies a field type. Standard fields are:\r\n<ul>\r\n	<li><strong>TextBlock</strong> - a field including a description text - it is not used for storing any option value</li>\r\n	<li><strong>Text</strong> - the easiest text field allowing to insert short text values</li>\r\n	<li><strong>Textarea</strong> - a text field used for inserting a greater number of text values</li>\r\n	<li><strong>Select</strong> - a select field</li>\r\n	<li><strong>Switcher</strong> - a checkbox restricted to two options: "Enabled" and "Disabled"</li>\r\n	<li><strong>Media</strong> - a field allowing to choose images</li>\r\n	<li><strong>WidthHeight</strong> - a field allowing to specify two values defining width and height (mostly used with a Media field)</li>\r\n</ul>\r\n</li>\r\n</ul>\r\nThese fields are defined in a <strong>gavern/form_elements/standard.php</strong> file and their code was derived from a <strong>GKFormInput</strong> field. It is worth remembering that files connected with options are parsed by a <strong>gavern/form.parser.php</strong> file. Additionally, you may create your own fields types in a <strong>gavern/form_elements</strong> catalog. In GavernWP, we have included the following fields types:\r\n<strong></strong>\r\n<ul>\r\n	<li><strong>Menu</strong> - a field allowing to generate options connected with page''s menu - used in a Navigation section</li>\r\n	<li><strong>TemplateStyle</strong> - a field allowing to choose page''s style - used at the beginning of a <strong>Basic</strong> section.</li>\r\n</ul>\r\nThe description of creating your own fields types we will describe in the further part of this article.\r\n<ul>\r\n	<li><strong>label</strong> - it specifies a label text visible next to a field</li>\r\n	<li><strong>tooltip</strong> - (optional) it allows to specify tooltip content which will appear after mousing over a label of a field given</li>\r\n	<li><strong>default</strong> - default value of a field given</li>\r\n	<li><strong>class</strong> - (optional) this field allows to specify CSS classes added to an element while generating it (if a field code supported such a functionality)</li>\r\n	<li><strong>format</strong> - (optional) a field specifying a desired field content in the form of a regular expression. e.g. value: [code][a-zA-Z]{2,5}[/code] specifies that a field given will be filled in correctly only when a user set as its value a sequence of capital or small letters from 2 to 5 symbols.</li>\r\n	<li><strong>required</strong> - (optional) allows to specify whether filling in a particular field was required</li>\r\n	<li><strong>visibility</strong> - (optional) specifies when a particular field is visible. Visibility rules are separated with commas and are created in <strong>FIELD_NAME=VALUE</strong> format - in the case of a few visibility rules, they are linked with <strong>AND</strong> operator. The value of  <strong>FIELD_NAME</strong> is a name without a prefix with a theme name. e.g. [code]option1=10,option2=20[/code] will cause that a field given will be visible when an option with <strong>option1</strong> name will be set to <strong>10</strong> and, at the same time, an <strong>option2</strong> option will have have value equals <strong>20</strong>.</li>\r\n	<li><strong>other</strong> - (optional) this field is used for storing additional values, e.g. in the case of a <strong>Select</strong> field, it is used for storing names and options values. This field is very useful when creating more advanced fields which may require additional configuration options.</li>\r\n</ul>\r\nAfter adding a new option, you have to remember about its support in the theme. Option value is loaded by using a get_option function of a schemata given:\r\n\r\n[code]get_option($tpl-&gt;name . ''_OPTION_NAME'', ''DEFAULT_VALUE'');[/code]\r\n\r\nwhen <strong>OPTION_NAME</strong> is an option name from a JSON file and <strong>DEFAULT_VALUE</strong> is default value of an option which will be used when a user does not specify a value of an option given. What is important, there is a "<strong>_</strong>" symbol which you cannot omit. A prefix with a theme name is added in order differentiate values of options of different themes.\r\n<h3>Creating your own field types options</h3>\r\nWhile creating a new field type, you have to start from creating a catalog compliant with a field name, e.g. <strong>CustomField</strong> in a <strong>gavern/form_elements</strong> catalog. Then, you have to create a config.json file in this catalog and fill it in according to the schemata below:\r\n\r\n[code]{\r\n\r\n"name": "CustomField",\r\n\r\n"description": "Example Custom Field",\r\n\r\n"js": false,\r\n\r\n"css": false,\r\n\r\n"php": "customfield.php",\r\n\r\n"class": "GKFormInputCustomField"\r\n\r\n}[/code]\r\n\r\n<strong>name</strong>, <strong>description</strong>, <strong>php</strong> i <strong>class</strong> fields have to include particular values; js and css fields are optional - they allow to specify whether a field given has to use additional CSS and JavaScript code (then, a name of files from a field catalog has to be set as a value). Also, you have to create a <strong>customfield.php</strong> file including a <strong>GKFormInputCustomField</strong> class derived after a <strong>GKFormInput</strong> class.\r\n\r\nAlso, a <strong>customfield.css</strong> file must include a safety code at the beginning:\r\n\r\n[code]// disable direct access to the file\r\n\r\ndefined(''GAVERN_WP'') or die(''Access denied'');[/code]\r\n\r\nEach field class has to include at least one public method - <strong>output</strong> not loading any additional arguments. This method must return HTML code of a field given. Field properties froma JSON file are available as class fields, e.g. <strong>required</strong> is available as:\r\n\r\n[code]$this-&gt;required[/code]\r\n\r\nThe second important public methid of each class of a form field is a <strong>getValue</strong> method which loads one argument - <strong>$default</strong>. Its use is optional and useful only when a value of a field given uses more than one field in the data base. Then, it is useful to overwrite this method - as an example we recommend a standard code of a <strong>WidthHeight</strong> field where overwritting a getValue method was used for storing values of two form fields in one main field created by a <strong>GKInputFormWidthHeight</strong> class.\r\n\r\nThe remaining class methods have to be created according to the needs of the author of a form  field given.', 'Option files', '', 'inherit', 'open', 'open', '', '427-revision-13', '', '', '2012-08-12 17:31:53', '2012-08-12 17:31:53', '', 427, 'http://wp1/uncategorized/427-revision-13/', 0, 'revision', '', 0),
(664, 1, '2012-08-12 17:51:44', '2012-08-12 17:51:44', '', 'Basic settings', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-4', '', '', '2012-08-12 17:51:44', '2012-08-12 17:51:44', '', 416, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-4.jpg', 0, 'attachment', 'image/jpeg', 0),
(665, 1, '2012-08-12 17:52:41', '2012-08-12 17:52:41', '', 'Author block', '', 'inherit', 'open', 'open', '', 'main-front-end-features-free-wordpress-template', '', '', '2012-08-12 17:52:41', '2012-08-12 17:52:41', '', 416, 'http://wp1/wp-content/uploads/2012/07/Main-front-end-features-»-Free-WordPress-template.jpg', 0, 'attachment', 'image/jpeg', 0),
(666, 1, '2012-08-12 15:57:06', '2012-08-12 15:57:06', 'Basic settings of GavernWP allow to specify basic parameters connected with page''s display:\r\n\r\n[screenshot]\r\n\r\nThe first option allows to choose a color version of a template. In this place, there may appear a few various fields depending on the conent of <strong>styles.json</strong> configuration file.\r\n\r\nThere is an option allowing to switch a style-switcher after an option/options of choosing template''s styles  - it is an element allowing for a website''s user to choose a template style himself/herself.\r\n\r\nThe next option is connected with switching on breadcrumbs element on a website. There are the following options to choose from: <strong>Enabled</strong>, <strong>Disabled</strong> and <strong>Conditional rule</strong> - then, you have to set a rule using <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of PHP language in a <strong>Conditional rule</strong> field, e.g. a rule displayinga a breadcrumbs element on the homepage and in the "Meet GavernWP" category will be in the following form: [code]is_homepage() || is_category(''Meet GavernWP'')[/code]\r\n\r\n"<strong><label for="meetgavernwp_template_homepage_mainbody">Show mainbody widgets insteads of blog posts on the homepage</label></strong>" option is useful when you want to place a widget instead of entries on the homepage - then  you have to switch it on <strong>mainbody</strong> widget position, place a widget needed which will replace a standard list of posts generated by Wordpress.\r\n\r\nThe last option, namely <strong>"Show author info"</strong> allows to display information about its author under each post in the following form:\r\n\r\n[screenshot]\r\n\r\n&nbsp;', 'Basic settings', '', 'inherit', 'open', 'open', '', '416-revision-11', '', '', '2012-08-12 15:57:06', '2012-08-12 15:57:06', '', 416, 'http://wp1/uncategorized/416-revision-11/', 0, 'revision', '', 0),
(667, 1, '2012-07-23 11:31:51', '2012-07-23 11:31:51', 'Widget rules is a mechanism which introduces a completely new way to manage widgets on a website. Thanks to it, it is possible to specify widget features such as:\r\n<ul>\r\n	<li>displaying on subpages chosen,</li>\r\n	<li>displaying on devices chosen,</li>\r\n	<li>displaying for a group of users chosen,</li>\r\n	<li>displaying with a widget style use chosen.</li>\r\n</ul>\r\nAfter switching on widget rules in template''s advanced settings, under each widget, the following options should be displayed:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-371" title="Widgets ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="258" height="200" /></a>\r\n\r\nThe most extensive options are those connected with a widget visibility on subpages chosen - after choosing an option to show a widget on pages chosen (or an option not showing a widget on pages chosen), such a panel will appear:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg"><img class="aligncenter size-full wp-image-372" title="Widgets ‹ Meet Gavern WP — WordPress-1-1" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-1-1.jpg" alt="" width="240" height="203" /></a>\r\n\r\nThen, you have to choose a page''s type to add, e.g. Category, and then give category ID:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg"><img class="aligncenter size-full wp-image-373" title="Widgets ‹ Meet Gavern WP — WordPress-2" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-2.jpg" alt="" width="242" height="216" /></a>\r\n\r\nAfter clicking "Add page" button, a page will appear on a list of pages chosen on which in our case a widget will be displayed:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-374" title="Widgets ‹ Meet Gavern WP — WordPress-3" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="233" height="77" /></a>\r\n\r\nOf course, it is possible to add more pages:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-375" title="Widgets ‹ Meet Gavern WP — WordPress-4" src="http://wp1/wp-content/uploads/2012/07/Widgets-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="230" height="100" /></a>\r\n\r\nTo make it clearer, , each page''s type is displayed with a different color. A page added can be removed by clicking a removing icon placed on the right side of each page.\r\n\r\nIn this way, you may set a widget so as to be shown on pages chosen or to be shown on all pages except the chosen ones.\r\n\r\nGenerally, widgets are shown on all pages.\r\n\r\nAn option of displaying a widget on devices chosen has five options to choose:\r\n<ul>\r\n	<li><strong>All devices</strong> - a widget will be displayed everytwhere - on every device</li>\r\n	<li><strong>Desktop</strong> - a widget will be displayed only when neither a <strong>tablet.css</strong> file nor a <strong>mobile.css</strong> is loaded <strong></strong></li>\r\n	<li><strong>Tablets</strong> - a widget displays only when a <strong>tablet.css</strong> file will be loaded and, at the same time, a <strong>mobile.css</strong> file will not be loaded <strong></strong></li>\r\n	<li><strong>Smartphones</strong> - a widget will be displayed only when a <strong>mobile.css</strong> file will be loaded</li>\r\n	<li><strong>Tablets/Smartphones</strong> - a widget will be displayed when at least one file will be loaded: <strong>tablet.css</strong> or <strong>mobile.css</strong>.</li>\r\n</ul>\r\nThanks to these settings, it is possible to limit significantly the amount of content displayed on devices with small screens.\r\n\r\nAn option of displaying widget for a chosen groups of users has four options to choose:\r\n<ul>\r\n	<li><strong>All users</strong> - a widget will be displayed to all users</li>\r\n	<li><strong>Only guests</strong> - a widget will be displayed to not logged in users</li>\r\n	<li><strong>Only registered users</strong> - a widget will be displayed to logged in users only</li>\r\n	<li><strong>Only administrator</strong> - a widget will be displayed to administrators only</li>\r\n</ul>\r\nThanks to this option, it is possible e.g. to display messages specified by using widgets for a group of users chosen.\r\n\r\nThe last optio from widget rules is an option for choosing a widget style - it causes appending to a widget main container an additional class giving styling specified by a user.\r\n\r\nWidget styles are defined in widget.styles.json file and in CSS code - in this case in <strong>css/wp.extensions.css</strong>.<strong></strong>', 'Widget rules', '', 'inherit', 'open', 'open', '', '370-revision-7', '', '', '2012-07-23 11:31:51', '2012-07-23 11:31:51', '', 370, 'http://wp1/uncategorized/370-revision-7/', 0, 'revision', '', 0),
(668, 1, '2012-07-20 11:17:25', '2012-07-20 11:17:25', 'Each template''s subpage in GavernWP is created and based on one file from template''s main catalog, e.g. <strong>single.php</strong> and at least four additional files from <strong>layouts</strong> catalog:\r\n<ul>\r\n	<li><strong>header.php</strong> - this file includes starting page''s structure i.e. a head section and the whole headline with elements such as: logo, main menu, etc.</li>\r\n	<li><strong>before.php</strong> - there are all widget positions included in this file which are before page''s main content.</li>\r\n	<li><strong>after.php</strong> - this file is an equivalent of <strong>before.php</strong> file but with one difference - it includes widget positions which are after page''s main content.</li>\r\n	<li><strong>footer.php</strong> - similarly to <strong>header.php</strong> file, it includes a starting page''s structure as footer.php includes the ending page''s structure, i.e. a footer and and elements below.</li>\r\n</ul>\r\nThe above files with a file given from a main catalog, create a basic structure of each page. The remaining elements are generated by additional files or functions. The majority of of such files can be found in <strong>layouts</strong> catalog; e.g. files with names content.post.*.php, include constituents of each post. . Using these files allowed to restrict the amount of code in template''s main files and simplify its modification as change e.g. an entry footer requires modification of one or two files only.\r\n\r\nFunctions used for generating additional information displayed in posts are in <strong>gavern/helpers/helpers.layout.fragments.php</strong> file.', 'Template structure', '', 'inherit', 'open', 'open', '', '359-revision-4', '', '', '2012-07-20 11:17:25', '2012-07-20 11:17:25', '', 359, 'http://wp1/uncategorized/359-revision-4/', 0, 'revision', '', 0),
(669, 1, '2012-07-19 21:39:35', '2012-07-19 21:39:35', '<a href="http://www.opensearch.org/Home" target="_blank">Open Search</a> is a technology which allows to create your own browsing engine used by a browser. Thanks to it, e.g. in a Firefox browser, a user may define a new browser after entering our website based on GavernWP framework. Because of it, in the case of more extensive websites, e.g. data catalogs, searching is much easier.\r\n\r\nSwitching on support for Open Search requires switching on one option in an administration panel in a tab of advanced settings. All other operations are made with GavernWP.', 'Open Search support', '', 'inherit', 'open', 'open', '', '353-revision-3', '', '', '2012-07-19 21:39:35', '2012-07-19 21:39:35', '', 353, 'http://wp1/uncategorized/353-revision-3/', 0, 'revision', '', 0),
(670, 1, '2012-07-19 10:44:52', '2012-07-19 10:44:52', 'GavernWP has built - in support for <a title="Open Graph" href="http://opengraphprotocol.org/" target="_blank">Open Graph</a> protocol. Thanks to it, each post added may have metatags specified and during publishing a post given on Facebook, there will be information specified earlier by an author of an entry displayed:\r\n<ul>\r\n	<li>title</li>\r\n	<li>entry description</li>\r\n	<li>thumbnail connected with an entry</li>\r\n</ul>\r\nThanks to it, an author of a post has better influence on the information displayed on social media services. It''s also worth remembering that in the case when fields connected with Open Graph will not be filled, then GavernWP will try to fill them automatically basing on the entry data.\r\n\r\nSupport for Open Graph is a great supplement for a Social API system implemented in GavernWP.', 'Open Graph support', '', 'inherit', 'open', 'open', '', '341-revision-4', '', '', '2012-07-19 10:44:52', '2012-07-19 10:44:52', '', 341, 'http://wp1/uncategorized/341-revision-4/', 0, 'revision', '', 0),
(671, 1, '2012-07-16 12:10:09', '2012-07-16 12:10:09', 'oEmbeds is an important facility used while creating posts. Thanks to it, a user may embed in an entry easily, e.g. a movie from You Tube service by giving just a link to the movie - Wordpress will generate a movie from this link automatically.\r\n\r\nA few examples are presented below:\r\n\r\nYouTube\r\n\r\nhttp://www.youtube.com/watch?v=MdrC7kYTAX4\r\n\r\nTwitter\r\n\r\nhttps://twitter.com/gavickpro/status/221189052983025666\r\n\r\nFlickr\r\n\r\nhttp://www.flickr.com/photos/synectic/5489943396/', 'oEmbeds', '', 'inherit', 'open', 'open', '', '332-revision-5', '', '', '2012-07-16 12:10:09', '2012-07-16 12:10:09', '', 332, 'http://wp1/uncategorized/332-revision-5/', 0, 'revision', '', 0),
(673, 1, '2012-07-16 11:45:56', '2012-07-16 11:45:56', 'Gavern Framework has a quite extensive files structure. It is similar to a standard structure of majority of the templates, however, because of many functionalities, there are some new elements.\r\n\r\n<!--more-->\r\n\r\nThe overall outline of files structure is presented below:\r\n<ol>\r\n	<li><strong>template''s catalog</strong>\r\n<small>It includes all basic files and catalogs for a template. It is worth seeing that Custom Pages templates have a <strong>template.</strong> prefix at the beginning of their names which helps to find them in files structure.</small>\r\n<ol>\r\n	<li><strong>css</strong>\r\n<small>There are all CSS template''s files in it. They are described in details in an entry about framework''s CSS code.\r\n</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>To have everything ordered, CSS files connected with an administration panel were placed in this catalog.\r\n</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>fonts</strong>\r\n<small>This catalog is used for storing files with additional fonts. You have to remember that each font must have its own catalog including a stylesheet.css file. More information about fonts service can be found in an entry about <strong>Fonts</strong> in an administration panel.<strong></strong>\r\n</small></li>\r\n	<li><strong>gavern</strong>\r\n<small>A catalog including the base of whole GavernWP framework work.\r\n</small>\r\n<ol>\r\n	<li><strong>classes</strong>\r\n<small>Files with supporting classes used in framework''s code.\r\n</small></li>\r\n	<li><strong>config</strong>\r\n<small>Files including framework''s configuration. It has to be remembered that there are additional catalogs used for making transalations.\r\n</small></li>\r\n	<li><strong>form_elements</strong>\r\n<small>It includes a main file with a code which generates basic form elements in an administration panel, as well as, catalogs with elements created by a user.\r\n</small></li>\r\n	<li><strong>helpers</strong>\r\n<small>A collection of classes connected with specific framework''s tasks, e.g. with generating layout fragments.\r\n</small></li>\r\n	<li><strong>layouts</strong>\r\n<small>Files used for generating HTML code of an administration panel.\r\n</small></li>\r\n	<li><strong>options</strong>\r\n<small>Files which store options of particular sections of template''s administration panel. Similarly to <strong>config</strong> catalog; there are also additional catalogs used for making translations.<strong></strong>\r\n</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>images</strong>\r\n<small>Graphic files used with a template\r\n</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>Files connected with an administration panel.\r\n</small></li>\r\n	<li><strong>headers</strong>\r\n<small>Default header''s images.\r\n</small></li>\r\n	<li><strong>post_formats</strong>\r\n<small>Images connected with entries formats.\r\n</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>js</strong>\r\n<small>JavaScript scripts files used in a template\r\n</small>\r\n<ol>\r\n	<li><strong>back-end</strong>\r\n<small>Likewise in <strong>css</strong> and <strong>images</strong> catalogs there are files included used in an administration panel.<strong></strong><strong></strong>\r\n</small></li>\r\n	<li><strong>templates</strong>\r\n<small>Additional JavaScript files used by some Custom Pages.\r\n</small></li>\r\n</ol>\r\n</li>\r\n	<li><strong>languages</strong>\r\n<small>Main files used for creating translations.\r\n</small></li>\r\n	<li><strong>layouts</strong>\r\n<small>Files used for generating subpages; they include elements which are used very often; e.g. a head section.\r\n</small></li>\r\n</ol>\r\n</li>\r\n</ol>\r\n&nbsp;', 'Framework structure', '', 'inherit', 'open', 'open', '', '330-revision-4', '', '', '2012-07-16 11:45:56', '2012-07-16 11:45:56', '', 330, 'http://wp1/uncategorized/330-revision-4/', 0, 'revision', '', 0),
(674, 1, '2012-07-16 12:58:05', '2012-07-16 12:58:05', 'GavernWP has full support for making translations. Because of differences being a result of using JSON files for generating template''s options, a template''s translation should be done in three places:\r\n<ol>\r\n	<li>with files use from a languages catalog</li>\r\n	<li>by creating a catalog of a language given in a config catalog</li>\r\n	<li>by creating a catalog of a language given in an options catalog</li>\r\n</ol>\r\nThe first stage is a standard operation described in details in Wordpress documentation. Let''s focus on the two remaining stages then:\r\n\r\nGenerally, there is <strong>en_US</strong> catalog created in <strong>config</strong> and <strong>options</strong> catalogs which includes JSON configuration files in an English language. So, in order to translate a template to a different language , you have to copy this catalog and change its name to a respective language used in your installation, e.g. <strong>pl_PL</strong>. Then, you have to change all phrases from the English language to your language.\r\n\r\nNOTE! You must not change the names of keys in JSON files, the same as, proper names because they are used for proper work and reading values.\r\n\r\ne.g. in a widgets.json file for a fragment:\r\n\r\n[code]{\r\n"name": "Top widgets",\r\n"id": "top",\r\n"description": "Widgets area on under the header of website",\r\n"before_widget": "&lt;div id=\\"%1$s\\" class=\\"box%2$s\\"&gt;",\r\n"after_widget": "&lt;/div&gt;",\r\n"before_title": "&lt;h3 class=\\"box-title\\"&gt;",\r\n"after_title": "&lt;/h3&gt;"\r\n},[/code]\r\n\r\nchange the following phrases only:\r\n<ul>\r\n	<li>"Top widgets"</li>\r\n	<li>"Widgets area on under the header of website"</li>\r\n</ul>\r\nAfter this operation, you will see sentences in your mother tongue in an administration panel.\r\n\r\nIt''s worth remembering that in the case when GavernWP will not find a catalog corresponding to the language set in configuration, there will be files used from <strong>en_US</strong> catalogs.', 'Translations', '', 'inherit', 'open', 'open', '', '335-revision-4', '', '', '2012-07-16 12:58:05', '2012-07-16 12:58:05', '', 335, 'http://wp1/uncategorized/335-revision-4/', 0, 'revision', '', 0),
(675, 1, '2012-08-10 11:56:15', '2012-08-10 11:56:15', 'In order to make GavernWP framework more flexible, we decided to use files in JSON format for storing template''s configuration and options layout in an administration panel.\r\n\r\nYou may find files responsible for template''s configuration in <strong>gavern/options/</strong> catalog:<strong></strong>\r\n<ul>\r\n	<li><strong>fonts.json</strong> - a file which stores template''s groups of fonts. By default, there are three main gropus created. In order to create a new group, it is enough to add a next object to the object table existing in this file.plik przechowujący grupy czcionek szablonu.</li>\r\n	<li><strong>menus.json</strong> - you will find space for menu used in a template in this file. You have to remember that except adding a new object, you have to add PHP code generating menu data in template''s code. It is also worth remembering that there could be one main menu (<strong>main</strong> field in menu object).<strong></strong></li>\r\n	<li><strong>opengraph.json</strong> - this file includes configuration of fields used in a block connected with metabox which is used for generating Open Graph data. We do not recommend to make any changes in it before you get acquainted with Open Graph tags implementation in GavernWP framework.</li>\r\n	<li><strong>styles.json</strong> - this file is used for generating additional template''s styles. Except adding a new style, you have to remember about creating an additional CSS file which will be loaded while changing template''s style.</li>\r\n	<li><strong>template.json</strong> - it is the most important configuration file. It includes information about a template and it allows to switch off chosen elements of template administration panel. It is NOT recommended to add new fields to this files because they will not be used without additional PHP code.</li>\r\n	<li><strong>widgets.json</strong> - a file including a list of all positions of widgets. Similarly to <strong>menus.json</strong> file, you have to remember that except adding a new widget position, you have to also add PHP code which generates it in a template.</li>\r\n	<li><strong>widgets.styles.json</strong> - a file used for creating new widget styles. Thanks to its implementation, it allows to assign a style given to one widget type only or exclude some widget types from a style given.</li>\r\n</ul>\r\nIn order to understand better JSON files format, we recommend to visit the official website of  <a href="http://www.json.org/">this format</a>.\r\n\r\n&nbsp;', 'JSON Configuration', '', 'inherit', 'open', 'open', '', '338-revision-6', '', '', '2012-08-10 11:56:15', '2012-08-10 11:56:15', '', 338, 'http://wp1/uncategorized/338-revision-6/', 0, 'revision', '', 0),
(676, 1, '2012-08-11 07:41:18', '2012-08-11 07:41:18', 'GavernWP has an extensive mechanism allowing to create additional template styles. We may distinguish two main groups of styles in this mechanism:\r\n<ul>\r\n	<li>style family</li>\r\n	<li>styles included in style family given</li>\r\n</ul>\r\nThe whole configuration is included in <strong>styles.json</strong> file:\r\n\r\n[code][{\r\n\r\n"family": "color",\r\n"family_desc": "Template color",\r\n"family_tooltip": "You can select one of the template colors",\r\n"styles": [\r\n{\r\n"name": "Color I",\r\n"value": "color1",\r\n"file": "style1.css"\r\n},\r\n{\r\n"name": "Color II",\r\n"value": "color2",\r\n"file": "style2.css"\r\n}\r\n]\r\n}][/code]\r\n\r\nAs you can see, it includes <strong>color</strong> style family which has two styles, namely: <strong>Color I</strong> and <strong>Color II</strong>.\r\n\r\nIn order to create new style family or a style for style family given, it is enough to create a next object in <strong>styles.json</strong> file and then create CSS files connected with a family given - in the case of <strong>color</strong> family, these are <strong>style1.css</strong> and <strong>style2.css</strong> files.\r\n\r\nGavernWP will load CSS files of a style given in a <strong>head</strong> section - chosen in an administration panel or, if there is a tool for choosing user''s styles switched on, they will be loaded based on a Cookie file storing data about a style used by a user.\r\n\r\nYou have to remember that for each style family there is at least one CSS file loaded. Therefore, creating coexisting style families like:\r\n<ul>\r\n	<li><strong>dark styles</strong> and <strong>light styles</strong></li>\r\n	<li><strong>blue styles</strong> and <strong>green styles</strong></li>\r\n</ul>\r\nis incorrect because at least one CSS style from each family will be loaded immediately. So the correct one is creating style families responsible for some elements of website styling, e.g. a separate family responsible for website coloring (<strong>colors</strong>) and a separate one for website background (<strong>patterns</strong>).\r\n\r\nGenerally, you have to care about particular style families in order not to overwrite one another.', 'Color Styles', '', 'inherit', 'open', 'open', '', '349-revision-4', '', '', '2012-08-11 07:41:18', '2012-08-11 07:41:18', '', 349, 'http://wp1/uncategorized/349-revision-4/', 0, 'revision', '', 0),
(677, 1, '2012-08-12 18:02:07', '2012-08-12 18:02:07', 'GavernWP has an extensive mechanism allowing to create additional theme styles. We may distinguish two main groups of styles in this mechanism:\r\n<ul>\r\n	<li>style family</li>\r\n	<li>styles included in style family given</li>\r\n</ul>\r\nThe whole configuration is included in <strong>styles.json</strong> file:\r\n\r\n[code][{\r\n\r\n"family": "color",\r\n"family_desc": "Theme color",\r\n"family_tooltip": "You can select one of the theme colors",\r\n"styles": [\r\n{\r\n"name": "Color I",\r\n"value": "color1",\r\n"file": "style1.css"\r\n},\r\n{\r\n"name": "Color II",\r\n"value": "color2",\r\n"file": "style2.css"\r\n}\r\n]\r\n}][/code]\r\n\r\nAs you can see, it includes <strong>color</strong> style family which has two styles, namely: <strong>Color I</strong> and <strong>Color II</strong>.\r\n\r\nIn order to create new style family or a style for style family given, it is enough to create a next object in <strong>styles.json</strong> file and then create CSS files connected with a family given - in the case of <strong>color</strong> family, these are <strong>style1.css</strong> and <strong>style2.css</strong> files.\r\n\r\nGavernWP will load CSS files of a style given in a <strong>head</strong> section - chosen in an administration panel or, if there is a tool for choosing user''s styles switched on, they will be loaded based on a Cookie file storing data about a style used by a user.\r\n\r\nYou have to remember that for each style family there is at least one CSS file loaded. Therefore, creating coexisting style families like:\r\n<ul>\r\n	<li><strong>dark styles</strong> and <strong>light styles</strong></li>\r\n	<li><strong>blue styles</strong> and <strong>green styles</strong></li>\r\n</ul>\r\nis incorrect because at least one CSS style from each family will be loaded immediately. So the correct one is creating style families responsible for some elements of website styling, e.g. a separate family responsible for website coloring (<strong>colors</strong>) and a separate one for website background (<strong>patterns</strong>).\r\n\r\nGenerally, you have to care about particular style families in order not to overwrite one another.', 'Color Styles', '', 'inherit', 'open', 'open', '', '349-revision-5', '', '', '2012-08-12 18:02:07', '2012-08-12 18:02:07', '', 349, 'http://wp1/uncategorized/349-revision-5/', 0, 'revision', '', 0),
(678, 1, '2012-07-19 21:24:46', '2012-07-19 21:24:46', 'GavernWP makes possible to create templates based on Responsive Web Design. That''s why, it has two additional CSS styles:\r\n<ul>\r\n	<li>tablet.css</li>\r\n	<li>mobile.css</li>\r\n</ul>\r\nThanks to options available in an administration panel, it is possible to specify when these styles will be loaded.\r\n\r\nTwo column layout (if a column is switched on) is loaded when tablet.css file is not loaded.\r\n\r\nAt the moment of reaching maximum width for tablet.css file, page''s layout is changed into one column and the column itself is placed before or after page''s main content.\r\n\r\nAdditionally, in widget positions like top or bottom1/2/3, modules from three column layout are changed into one column  layout.\r\n\r\nAfter loading mobile.css file there is one column layout used everywhere.\r\n\r\nA very important improvement is a possibility of specifying whether a module will be loaded in tablet or mobile mode. More information can be found in Widget Rules entry.', 'Responsive Layout', '', 'inherit', 'open', 'open', '', '351-revision-3', '', '', '2012-07-19 21:24:46', '2012-07-19 21:24:46', '', 351, 'http://wp1/uncategorized/351-revision-3/', 0, 'revision', '', 0),
(679, 1, '2012-07-20 12:40:26', '2012-07-20 12:40:26', 'Template''s CSS code is divided into a few files, loaded in order specified. All these files are in <strong>css</strong> catalog. You have to remember that order of these files is very important and its change may cause unpredictable changes of template''s look because of using moving from general styling to detailed styling in CSS code.\r\n\r\nThe list of CSS files used in a template is presented below (order according to recommended order of loading these files):\r\n<ol>\r\n	<li><strong>normalize.css</strong> - CSS code unifying page''s elements styling in all browsers</li>\r\n	<li><strong>template.css</strong> - the most important CSS file responsible for page''s layout styling , basic typography, widget styling, etc.</li>\r\n	<li><strong>wp.css</strong> - CSS rules which are responsible for Wordpress elements styling, e.g. a comments form , comments themselves or posts elements.</li>\r\n	<li><strong>shortcodes.*.css</strong> (optional) - a group of CSS files responsible for typography elements styling inserting to posts with Shortcodes.</li>\r\n	<li><strong>stuff.css</strong> - it includes styling of additional template''s elements sucha s breadcrumbs or font-size switcher.</li>\r\n	<li><strong>wp.extensions.css</strong> - CSS rules connected with styling of standard widgets available with Wordpress.</li>\r\n	<li><strong>extensions.css (optional)</strong> - a CSS file which you have to add yourself in the case when you want to style additional widgets. In the case of small changes in widget styling, we recommend to use <strong>override.css</strong> file instead of this file.</li>\r\n	<li><strong>tablet.css</strong> - CSS rules used while displaying a page on tablet devices.</li>\r\n	<li><strong>mobile.css</strong> - CSS rules used while displaying  a page on smartfon devices.</li>\r\n	<li><strong>ie*.css</strong> - a file or a group of CSS files used for correcting page''s look in an Internet Explorer browser.</li>\r\n	<li><strong>style*.css</strong> - a file or a group of CSS files used for changing coloring or general style of a template - they are loaded automatically by a mechanism responsible for template''s coloring.</li>\r\n	<li><strong>override.css</strong> (optional) - you may add your own rules in this file which will overwrite existing rules in previous files - a perfect solution for template modification without modifying the remaining CSS files.</li>\r\n</ol>\r\nAdditionally, CSS code used in a template itself, you will also find in a <strong>templates</strong> catalog where there are CSS files loaded on chosen styles of subpages, e.g. needed for correct work of a gallery.', 'Template CSS', '', 'inherit', 'open', 'open', '', '361-revision-3', '', '', '2012-07-20 12:40:26', '2012-07-20 12:40:26', '', 361, 'http://wp1/uncategorized/361-revision-3/', 0, 'revision', '', 0),
(680, 1, '2012-07-23 08:36:39', '2012-07-23 08:36:39', 'GavernWP has support for comments with a division into threads. Thanks to it, discussions made in comments under a post given are clearer.\r\n\r\nAll options connected with comments configuration can be set by using standard options in a Wordpress administration panel (Settings &gt; Discussion). Threads in comments are switched on thanks to "Enable threaded (nested) comments" and specifying maximal depth of nested comments in threads.\r\n\r\nThere are two files responsible for generating HTML code of comments, namely:\r\n<ul>\r\n	<li><strong>comments.php</strong> - it includes a code which generates a comments list and a form of adding comments.</li>\r\n	<li><strong>gavern/helpers/helper.layout.fragments.php</strong> - in <strong>gavern_comment_template</strong> function, there is a code responsible for generating a code of a comment given.</li>\r\n</ul>\r\nCSS code responsible for a style of comments and a form of adding comments is in <strong>css/wp.css</strong> file.<strong></strong>', 'Threaded comments', '', 'inherit', 'open', 'open', '', '364-revision-4', '', '', '2012-07-23 08:36:39', '2012-07-23 08:36:39', '', 364, 'http://wp1/uncategorized/364-revision-4/', 0, 'revision', '', 0),
(681, 1, '2012-07-23 09:24:40', '2012-07-23 09:24:40', 'GavernWP makes accessible a few own styles of subpages. Thanks to them, it is possible to use Wordpress possiblitities better  and adjusting pages to themes chosen.\r\n\r\nAll additional subpages styles are placed in a main catalog in <strong>template.*.php</strong> files. GavernWP has the following subpages:\r\n<ul>\r\n	<li><strong>template.archive.php</strong> - an archive page, in includes a list of recent posts, categories and a list of links to monthly archives.</li>\r\n	<li><strong>template.contact.php</strong> - a page with a contact form which allows to send an email to an email address specified in a Wordpress configuration.</li>\r\n	<li><strong>template.fullwidth.php</strong> - a page''s layout without a sidebar.</li>\r\n	<li><strong>template.gallery.php</strong> - a page generating an animated gallery of images with a mechanism of attachments available in Wordpress - it is enough to assign attachments to such a page that they will show as slides in a gallery. It is recommened to choose images with the same size.</li>\r\n	<li><strong>template.login.php</strong> - a page generating a login form for users - after logging in, it displays information about his/her username and a button to log out.</li>\r\n	<li><strong>template.tagcloud.php</strong> - a page generating a tag cloud of our website.</li>\r\n</ul>\r\nMain CSS styles of subpages are in a <strong>css/stuff.css</strong> file. However, you have to remember that some more extensive files of subpages may additionally load CSS and JavaScript files from <strong>css/templates/</strong> and <strong>js/templates/</strong>.\r\n\r\nIn order to load additional files in this way, it is enough to specify the second parameter of a <strong>gk_load</strong> function (see: code of requesting a <strong>gk_load</strong> function in a <strong>template.gallery.php</strong> file).', 'Custom Page Styles', '', 'inherit', 'open', 'open', '', '367-revision-6', '', '', '2012-07-23 09:24:40', '2012-07-23 09:24:40', '', 367, 'http://wp1/uncategorized/367-revision-6/', 0, 'revision', '', 0),
(682, 1, '2012-07-23 13:28:55', '2012-07-23 13:28:55', 'GavernWP makes accessible options allowing for template''s branding. Branding options are divided into two groups:\r\n<ul>\r\n	<li>template''s branding</li>\r\n	<li>administration panel branding</li>\r\n</ul>\r\nThanks to template''s branding options, a user may specify:\r\n<ul>\r\n	<li>specify page''s logo</li>\r\n	<li>specify template''s footer content</li>\r\n	<li>decide about displaying a framework logo under page''s footer</li>\r\n</ul>\r\nMore information about branding options for a template can be found in an entry devoted to a "Template branding" tab in an administration panel.\r\n\r\nAdministration panel branding options allow to define:\r\n<ul>\r\n	<li>a logo displayed next to a template''s name in an administration panel sidebar</li>\r\n	<li>a logo visible over a log in form to an administration panel</li>\r\n</ul>\r\nMore about branding options for an administration panel can be found in an entry devoted to "Back-end branding"  in an administration panel.', 'Branding', '', 'inherit', 'open', 'open', '', '377-revision-3', '', '', '2012-07-23 13:28:55', '2012-07-23 13:28:55', '', 377, 'http://wp1/uncategorized/377-revision-3/', 0, 'revision', '', 0),
(683, 1, '2012-08-12 18:09:11', '2012-08-12 18:09:11', '', 'Live Editor', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-5', '', '', '2012-08-12 18:09:11', '2012-08-12 18:09:11', '', 380, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-5.jpg', 0, 'attachment', 'image/jpeg', 0),
(684, 1, '2012-08-09 13:03:09', '2012-08-09 13:03:09', 'GavernWP has basic support for a new option available in Wordpress 3.4 - an options editor with templates preview. Now, the most important options connected with template''s style and its layout has been implemented to a live editor.\r\n\r\nIn order to reach it easier, we placed a direct link to this editor in the top part of templates'' options:\r\n\r\n[screenshot]\r\n\r\nAll options included in this editor are also available via traditional template''s options panel.\r\n\r\nIn order to simplify adding your own options to a live editor, the whole code generating options is placed in a separate file: <strong>gavern/helpers/helpers.customizer.php</strong>.\r\n\r\nYou have to remember that all options and settings from a live editor are stored in the same place as their equivalents from an administration panel so settings change with a live editor causes changes in an options panel. That''s why, it is recommended not to use a traditional administration panel and a live editor at the same time because saving options with various values in two different places at the same time may not give the expected result.', 'Theme live editor', '', 'inherit', 'open', 'open', '', '380-revision-7', '', '', '2012-08-09 13:03:09', '2012-08-09 13:03:09', '', 380, 'http://wp1/uncategorized/380-revision-7/', 0, 'revision', '', 0),
(685, 1, '2012-08-12 18:10:40', '2012-08-12 18:10:40', '', 'Updates', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-6', '', '', '2012-08-12 18:10:40', '2012-08-12 18:10:40', '', 382, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-6.jpg', 0, 'attachment', 'image/jpeg', 0),
(686, 1, '2012-07-25 10:04:21', '2012-07-25 10:04:21', 'GavernWP has an update section which allows to access information whether a template was updated to the latest version. In order to access an updates panel, you have to use "Updates" submenu from a main menu of template''s options:\r\n\r\n[screenshot]\r\n\r\nIf a template was not updated, a list of updates will appear; which are newer than your template version:\r\n\r\n[screenshot]\r\n\r\nHowever, when you have a template in the latest version, you will see an appropriate message that a template does not have any new updates to download:\r\n\r\n[screenshot]\r\n\r\nIt''s worth remembering that a free template - MeetGavernWP is available through a public repository in a github service which allows to easy analysis of changes implemented in particular files. In the case of commercial templates, it is recommended to use tools like WinMerge (Windows) or File Merge (MacOS X) to compare changes in files. Each update in our update system has information about the list of modified files. Generally, it is recommended to compare only these files which you modified manually after loading a template.', 'Updates', '', 'inherit', 'open', 'open', '', '382-revision-4', '', '', '2012-07-25 10:04:21', '2012-07-25 10:04:21', '', 382, 'http://wp1/uncategorized/382-revision-4/', 0, 'revision', '', 0),
(687, 1, '2012-07-19 21:53:33', '2012-07-19 21:53:33', 'Thanks to Social API, adding buttons to an entry for sharing posts in the most popular social network services is very easy.\r\n\r\nAt the moment, Social API supports four services:\r\n<ul>\r\n	<li>Facebook</li>\r\n	<li>Google+</li>\r\n	<li>Twitter</li>\r\n	<li>Pinterest</li>\r\n</ul>\r\nButtons for sharing are generally added under an entry. All contact data needed for sharing are loaded from entry content or from OpenGraph metatags.\r\n\r\nThanks to extensive configuration options, it is possible to adjust buttons look in accordance with available configuration parameters.\r\n\r\nThe most important thing is that the work of Social API can be limited to specific posts or switch off some posts from its work.', 'Social API', '', 'inherit', 'open', 'open', '', '356-revision-4', '', '', '2012-07-19 21:53:33', '2012-07-19 21:53:33', '', 356, 'http://wp1/uncategorized/356-revision-4/', 0, 'revision', '', 0),
(688, 1, '2012-08-12 18:12:59', '2012-08-12 18:12:59', '', 'SEO settings', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-7', '', '', '2012-08-12 18:12:59', '2012-08-12 18:12:59', '', 413, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-7.jpg', 0, 'attachment', 'image/jpeg', 0),
(689, 1, '2012-08-12 18:16:21', '2012-08-12 18:16:21', '', 'Metatags', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-8', '', '', '2012-08-12 18:16:21', '2012-08-12 18:16:21', '', 413, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-8.jpg', 0, 'attachment', 'image/jpeg', 0),
(690, 1, '2012-08-12 18:17:00', '2012-08-12 18:17:00', '', 'Metaboxes', '', 'inherit', 'open', 'open', '', 'edit-post-meet-gavern-wp-wordpress-2', '', '', '2012-08-12 18:17:00', '2012-08-12 18:17:00', '', 413, 'http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-2.jpg', 0, 'attachment', 'image/jpeg', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(691, 1, '2012-08-07 11:58:40', '2012-08-07 11:58:40', 'GavernWP has SEO settings built - in which allow to overwrite Wordpress standard SEO settings. After switching on "Use Gavern SEO settings" option, a lot of options connected with SEO will appear:\r\n\r\n[screenshot]\r\n\r\nThe first group of options is connected with page''s title:\r\n<ul>\r\n	<li><strong>Use blogname in title</strong> - this option allows to switch on showing a blogname in the title</li>\r\n	<li><strong>Separator used in title</strong> - it specifies a separator which is between a title description and a pages''s name</li>\r\n	<li><strong>Title - description</strong> - it allows to specify page''s title description (the first part of a title - before a separator)</li>\r\n	<li><strong>Title - blogname</strong> - it allows to specify page''s name (the second part of a title after a separator)</li>\r\n</ul>\r\nThe remaining options allow to switch on advanced management of <strong>keywords</strong> and <strong>description</strong> metatags:\r\n\r\n[screenshot]\r\n\r\nIn the case of a homepage, these metatags values are specified in a SEO settings panel whereas in the case of subpages, there are two settings available for both metatags:\r\n<ul>\r\n	<li><strong>Disabled</strong></li>\r\n	<li><strong>Enabled (custom field in the post editor)</strong></li>\r\n</ul>\r\nWhen you switch on these settings, under a posts editor two additional fields will appear:\r\n\r\n[screenshot]\r\n\r\nIf you fill them in, metatags used on one subpage with an entry will be created.', 'SEO settings', '', 'inherit', 'open', 'open', '', '413-revision-3', '', '', '2012-08-07 11:58:40', '2012-08-07 11:58:40', '', 413, 'http://wp1/uncategorized/413-revision-3/', 0, 'revision', '', 0),
(692, 1, '2012-08-12 18:19:05', '2012-08-12 18:19:05', '', 'OpenGraph metabox', '', 'inherit', 'open', 'open', '', 'edit-post-meet-gavern-wp-wordpress-3', '', '', '2012-08-12 18:19:05', '2012-08-12 18:19:05', '', 422, 'http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-3.jpg', 0, 'attachment', 'image/jpeg', 0),
(693, 1, '2012-08-12 17:36:57', '2012-08-12 17:36:57', 'An advanced settings section includes settings which are connected with different aspects of GavernWP framework work:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-3.jpg"><img class="aligncenter size-full wp-image-659" title="Advanced settings" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-3.jpg" alt="" width="595" height="571" /></a>\r\n<ul>\r\n	<li><strong>Widget rules</strong> allows to switch on this mechanism. It is recommended to switch on this option in the case when you do not need to use widgets visible on a chosen subpages. Note that it will allow to optimize a little bit the speed of a website as operations of checking rules for each widget will not be made.</li>\r\n	<li><strong>Support for Google Chrome Frame</strong> - it switches on a metatag forcing use of  <a href="https://developers.google.com/chrome/chrome-frame/" target="_blank">Google Chrome Frame</a> plugin on Internet Explorer browsers if it is installed.</li>\r\n	<li><strong>Parse emoticons in the text widgets</strong> - it activates parsing emoticons to a graphic form in widgets.</li>\r\n	<li><strong>Parse shortcodes in the text widgets</strong> - it activates parsing of <a href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> in widgets.</li>\r\n	<li><strong>Use Thickbox</strong> - it allows to switch on Thickbox  script for presenting images included in posts.</li>\r\n	<li><strong>Value for the $content_width variable</strong> -  <strong>$content_width</strong> variable is used while creating thumbnails of images for posts, that''s why it has to be defined as an appropriate value - we recommend to set the value not bigger than the max. page''s width.</li>\r\n	<li><strong>Use the override.css file</strong> - thanks to switching on this option, an <strong>override.css</strong> file will appear at the end of the list of CSS files which allows to overwrite theme''s CSS rules easily without interference in existing CSS code.</li>\r\n	<li><strong>Enable support for Open Search</strong> - it allows to switch on support for  <a href="http://www.opensearch.org/Home" target="_blank">Open Search</a> technology.</li>\r\n	<li><strong>Enable support for Open Graph</strong> - it allows to switch on support for <a href="http://ogp.me/" target="_blank">Open Graph </a> technology - after switching on this option, an additional metabox will appear on a page for editing posts: <a href="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-660" title="Open Graph Metabox" src="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="732" height="609" /></a></li>\r\n</ul>', 'Advanced settings', '', 'inherit', 'open', 'open', '', '422-revision-9', '', '', '2012-08-12 17:36:57', '2012-08-12 17:36:57', '', 422, 'http://wp1/uncategorized/422-revision-9/', 0, 'revision', '', 0),
(694, 1, '2012-08-09 08:05:14', '2012-08-09 08:05:14', 'Templates based on GavernWP framework have support for many useful solutions and technologies. The most important ones are:\r\n<ul>\r\n	<li><a title="Custom Page Styles" href="http://wp1/template-features/custom-page-styles-2/">Custom page styles</a> - they extend functionality of standard subpages.</li>\r\n	<li><a title="Typography" href="http://wp1/template-features/typography/">Typography</a> - an advanced list of elements gives a possibility to enhance posts about various add ons.</li>\r\n	<li><a title="Social API" href="http://wp1/template-features/social-api/">Social API</a> - it allows to add buttons for sharing posts in social network services very easily.</li>\r\n	<li><a title="Open Graph support" href="http://wp1/template-features/open-graph-support/">Open Graph</a> - it allows to specify the way in which content shared on Facebook will be visible.</li>\r\n	<li><a title="Threaded comments" href="http://wp1/template-features/threaded-comments-2/">Threaded comments</a> - they allow to make discussions under posts in a clear way.</li>\r\n	<li><a title="Branding" href="http://wp1/template-features/branding/">Branding</a> - it simplifies setting key elements of a website connected with its name or brand.</li>\r\n	<li><a title="Color Styles" href="http://wp1/uncategorized/color-styles/">Color styles</a> - thanks to color styles, it is possible to create many various color and stylistic versions of a template.</li>\r\n</ul>\r\n&nbsp;', 'Main front-end features', '', 'inherit', 'open', 'open', '', '408-revision-3', '', '', '2012-08-09 08:05:14', '2012-08-09 08:05:14', '', 408, 'http://wp1/uncategorized/408-revision-3/', 0, 'revision', '', 0),
(695, 1, '2012-08-12 18:21:50', '2012-08-12 18:21:50', '', 'Shortcodes', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-9', '', '', '2012-08-12 18:21:50', '2012-08-12 18:21:50', '', 397, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-9.jpg', 0, 'attachment', 'image/jpeg', 0),
(696, 1, '2012-08-09 11:47:54', '2012-08-09 11:47:54', 'Shortcodes are facilities which are not used by everyone. Besides, XHTML code of the majority of typography elements can be generated manually. It causes that not all CSS and JavaScript files connected with Shortcodes are needed while loading a page.\r\n\r\nThanks to a Shortcodes tab, it is possible to switch off chosen groups of Shortcodes:\r\n\r\n[screenshot]\r\n\r\nNote! Switching off a given group of Shortcodes will cause not only switching off adding CSS and JS files connected with a group given but will also switch off functions which parse Shortcodes in articles. That''s why, you have to make sure that Shortcodes groups you want to switch off, are not used in existing articles.', 'Shortcodes settings', '', 'inherit', 'open', 'open', '', '397-revision-4', '', '', '2012-08-09 11:47:54', '2012-08-09 11:47:54', '', 397, 'http://wp1/uncategorized/397-revision-4/', 0, 'revision', '', 0),
(697, 1, '2012-08-12 18:25:09', '2012-08-12 18:25:09', '', 'branding', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-10', '', '', '2012-08-12 18:25:09', '2012-08-12 18:25:09', '', 394, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-10.jpg', 0, 'attachment', 'image/jpeg', 0),
(698, 1, '2012-08-12 18:26:09', '2012-08-12 18:26:09', '', 'Logo image', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-11', '', '', '2012-08-12 18:26:09', '2012-08-12 18:26:09', '', 394, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-11.jpg', 0, 'attachment', 'image/jpeg', 0),
(699, 1, '2012-08-12 18:27:18', '2012-08-12 18:27:18', '', 'Textlogo', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-12', '', '', '2012-08-12 18:27:18', '2012-08-12 18:27:18', '', 394, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-12.jpg', 0, 'attachment', 'image/jpeg', 0),
(700, 1, '2012-08-12 18:27:37', '2012-08-12 18:27:37', '', 'Text logo own', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-13', '', '', '2012-08-12 18:27:37', '2012-08-12 18:27:37', '', 394, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-13.jpg', 0, 'attachment', 'image/jpeg', 0),
(701, 1, '2012-08-10 09:56:45', '2012-08-10 09:56:45', 'There are three key places connected with branding in a template based on GavernWP framework:\r\n<ul>\r\n	<li>page''s logo</li>\r\n	<li>page''s footer</li>\r\n	<li>framework''s logo under a page''s footer</li>\r\n</ul>\r\nThere are the following administration panel options responsible for these elements:\r\n\r\n[screenshot]\r\n\r\nIn the case of a framework''s logo, it is only possible to switch it on/off.\r\n\r\nFooter content is defined in <strong>Footer content</strong> option. It will be displayed at the bottom of the page, usually on the right side.\r\n\r\nThe majority of parameters are connected with a page''s logo. The first step in a logo configuration is to choose a logo type; there are the following logo types available:\r\n<ul>\r\n	<li><strong>Defined in the CSS code</strong> - a logo is defined template''s CSS style as an element having <strong>cssLogo</strong> class. In this case, except CSS code modification, no other settings changes are needed.</li>\r\n	<li><strong>Image logo</strong> - after choosing this option, some additional options will appear:  [screenshot]. You have to choose an image logo and specify its sizes.</li>\r\n	<li><strong>Text logo</strong> - likewise in the previous option, some additional options appear: [screenshot]. <strong>Template logo text </strong>option specifies whether main logo text and the signature below it will be taken from Wordpress settings (<strong>from Wordpress settings</strong>) or will be specified by a user (<strong>Own</strong>). In the case of choosing the second option, two additional fields to fill in will appear: [screenshot].</li>\r\n	<li><strong>None</strong> - in this case, a logo will not be displayed.</li>\r\n</ul>\r\n<div><strong>Note</strong>: <strong>None</strong> option is useful when you want to define a logo code in template''s code yourself - then, it is enough to add your own code to an appropriate file (usually it is: <strong>layouts/header.php</strong>).</div>\r\n&nbsp;', 'Template branding settings', '', 'inherit', 'open', 'open', '', '394-revision-7', '', '', '2012-08-10 09:56:45', '2012-08-10 09:56:45', '', 394, 'http://wp1/uncategorized/394-revision-7/', 0, 'revision', '', 0),
(702, 1, '2012-08-12 18:28:53', '2012-08-12 18:28:53', '', 'Layout', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-14', '', '', '2012-08-12 18:28:53', '2012-08-12 18:28:53', '', 404, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-14.jpg', 0, 'attachment', 'image/jpeg', 0),
(703, 1, '2012-08-09 09:22:14', '2012-08-09 09:22:14', 'Layout settings in a template are connected with five main options:\r\n\r\n[shortcodes]\r\n\r\nThanks to a <strong>Page layout</strong> option, it is possible to specify a column position in page''s layout: on the left/right side or switch off showing a column completely (in this situation, you achieve the layout available via an additional subpage style - <strong>fullwidth</strong>).\r\n\r\nA <strong>Template width</strong> option specifies maximal page''s width - no matter what width a browser window has, page''s width will not exceed this value.\r\n\r\nColumn width is specified in per cents thanks to a <strong>Sidebar width</strong> option. <strong>Tablet width</strong> and <strong>Mobile width</strong> options allow to specify width of a browser window in pixels where <strong>css/tablet.css</strong> and <strong>css/mobile.css</strong> files are loaded.\r\n\r\nIn the case of <strong>tablet.css</strong>, modules which normally create four - column layout (max.), will appear in two - column layout which after loading a <strong>mobile.css</strong> file will change into one - column layout. Additionally, after loading a <strong>tablet.css</strong> file,a column moves under main content of a page given.\r\n\r\n<strong>Note</strong>: all options from a <strong>Layout</strong> section are also in a live-preview editor which allows to adjust values of these options easily, thanks to a site live preview.', 'Layout settings', '', 'inherit', 'open', 'open', '', '404-revision-4', '', '', '2012-08-09 09:22:14', '2012-08-09 09:22:14', '', 404, 'http://wp1/uncategorized/404-revision-4/', 0, 'revision', '', 0),
(704, 1, '2012-08-12 18:29:23', '2012-08-12 18:29:23', 'Layout settings in a theme are connected with five main options:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-14.jpg"><img class="aligncenter size-full wp-image-702" title="Layout" src="http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-14.jpg" alt="" width="571" height="355" /></a>\r\n\r\nThanks to a <strong>Page layout</strong> option, it is possible to specify a column position in page''s layout: on the left/right side or switch off showing a column completely (in this situation, you achieve the layout available via an additional subpage style - <strong>fullwidth</strong>).\r\n\r\nA <strong>Theme width</strong> option specifies maximal page''s width - no matter what width a browser window has, page''s width will not exceed this value.\r\n\r\nColumn width is specified in per cents thanks to a <strong>Sidebar width</strong> option. <strong>Tablet width</strong> and <strong>Mobile width</strong> options allow to specify width of a browser window in pixels where <strong>css/tablet.css</strong> and <strong>css/mobile.css</strong> files are loaded.\r\n\r\nIn the case of <strong>tablet.css</strong>, modules which normally create four - column layout (max.), will appear in two - column layout which after loading a <strong>mobile.css</strong> file will change into one - column layout. Additionally, after loading a <strong>tablet.css</strong> file,a column moves under main content of a page given.\r\n\r\n<strong>Note</strong>: all options from a <strong>Layout</strong> section are also in a live-preview editor which allows to adjust values of these options easily, thanks to a site live preview.', 'Layout settings', '', 'inherit', 'open', 'open', '', '404-revision-5', '', '', '2012-08-12 18:29:23', '2012-08-12 18:29:23', '', 404, 'http://wp1/uncategorized/404-revision-5/', 0, 'revision', '', 0),
(705, 1, '2012-08-12 18:32:07', '2012-08-12 18:32:07', '', 'button typo', '', 'inherit', 'open', 'open', '', 'edit-post-meet-gavern-wp-wordpress-4', '', '', '2012-08-12 18:32:07', '2012-08-12 18:32:07', '', 386, 'http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-4.jpg', 0, 'attachment', 'image/jpeg', 0),
(706, 1, '2012-08-12 18:32:21', '2012-08-12 18:32:21', '', 'typo button popup', '', 'inherit', 'open', 'open', '', 'edit-post-meet-gavern-wp-wordpress-5', '', '', '2012-08-12 18:32:21', '2012-08-12 18:32:21', '', 386, 'http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-5.jpg', 0, 'attachment', 'image/jpeg', 0),
(707, 1, '2012-08-10 08:57:35', '2012-08-10 08:57:35', 'To simplify shortcodes use available in templates based on GavernWP framework, a button for template''s typography has been implemented which is available in a posts editor:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg"><img class="aligncenter size-full wp-image-387" title="Add New Post ‹ Meet Gavern WP — WordPress" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress.jpg" alt="" width="308" height="107" /></a>\r\n\r\nBy clicking this button, you will see a list of available typography elements:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg"><img class="aligncenter size-full wp-image-388" title="Add New Post ‹ Meet Gavern WP — WordPress-1" src="http://wp1/wp-content/uploads/2012/07/Add-New-Post-‹-Meet-Gavern-WP-—-WordPress-1.jpg" alt="" width="251" height="369" /></a>\r\n\r\nIt is possible to choose a version with a stylistic specified for the majority of elements. After choosing a particular style, a shortcode will appear which will be replaced in entry content by scripts to structure styled in a way given.\r\n\r\nPlease, note that adding a new Shortcode code requires three operations:\r\n<ul>\r\n	<li>adding an entry in shortcodes.js configuration file</li>\r\n	<li>adding PHP code supporting a shortcode given</li>\r\n	<li>adding optional CSS and JavaScript code (if a shortcode given requires it)</li>\r\n</ul>\r\n<strong>shortcodes.js</strong> file in <strong>config</strong> catalog includes entries which are replaced to menu structure visible after clicking a typography button - it includes <strong>$GAVERNWP_SHORTCODES</strong> variable which is a table including objects representing elements of a menu. Each object has three features: <strong>title</strong>, <strong>code</strong> and <strong>submenu</strong>. Let''s analyze this structure with a <strong>Highlight</strong> position:\r\n\r\n[code]{\r\n\r\n"title": "Highlight",\r\n"code": "[highlight]Your text[/highlight]",\r\n"submenu": [\r\n{\r\n"title": "Style I",\r\n"code": "[highlight style=\\"1\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style II",\r\n"code": "[highlight style=\\"2\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style III",\r\n"code": "[highlight style=\\"3\\"]Your text[/highlight]"\r\n}\r\n]\r\n},[/code]\r\n<ul>\r\n	<li><strong>title</strong> - it includes a menu positon name displayed by a script</li>\r\n	<li><strong>code</strong> - it is a shortcode code which will be added to an entry when clicking a menu position given - you have to remember that not all menu positions on the first level have a value in this field - if it was an empty sequence of symbols, it means for a script that clicking on a menu position given does not request any action.</li>\r\n	<li><strong>submenu</strong> - it is a table  of a submenu of a menu position given. Each submenu position is built the same as menu positions as these on the first level but with one difference - a submenu cannot have the next submenu, so you do not add a <strong>submenu</strong> feature in a submenu object.</li>\r\n</ul>\r\nLet''s say, we added our shortcode to a typography button using shortcodes.js file. So, there is one thing left to do - support our shortcode from a template side.\r\n\r\nTo do this, you have to open <strong>gavern/helpers/helpers.shortcodes.php</strong> file.\r\n\r\nThis file is divided into three main sections starting with lines similar to:\r\n\r\n[code]if(get_option($tpl-&gt;name . ''_shortcodes1_state'', ''Y'') == ''Y'') {[/code]\r\n\r\nIt is a conditional  IF instruction connected with a group of typography elements given. Gavern icludes three groups:\r\n<ul>\r\n	<li>typography elements - functions connected with it have <strong>gavern_ts_</strong> prefix in the title</li>\r\n	<li>interactive elements - functions connected with it have <strong>gavern_ies_</strong> prefix in the title</li>\r\n	<li>elements characteristic for a particular template - functions connected with it have <strong>gavern_tss_</strong> prefix in the title</li>\r\n</ul>\r\nWe recommend to add new typography elements in the last group - in Meet GavernWP template, it is empty by default. Please, remember about using an appropriate prefix in a function name for a group given, e.g. in the case of the third group, it will be <strong>gavern_tss_</strong>. The code itself of a shortcode given has to be created according to guidelines described in<a href="http://codex.wordpress.org/Shortcode_API"> Shortcode API</a>.\r\n\r\nThe last step is rather optional and depends on your Shortcode type. If your Shortcode requires additional CSS or JavaScript code, you have to define it in <strong>shortcodes.*.css</strong> i <strong>shortcodes.*.js</strong> files, where <strong>*</strong> is a group name to which a Shortcode given was assigned.\r\n\r\nIt is very important to place elements of CSS and JavaScript code in an appropriate file, as it will give a possibility of optimizing whole template code when switching off given group of Shortcodes codes.', 'Typography button', '', 'inherit', 'open', 'open', '', '386-revision-8', '', '', '2012-08-10 08:57:35', '2012-08-10 08:57:35', '', 386, 'http://wp1/uncategorized/386-revision-8/', 0, 'revision', '', 0),
(708, 1, '2012-08-12 18:32:40', '2012-08-12 18:32:40', 'To simplify shortcodes use available in themes based on GavernWP framework, a button for theme''s typography has been implemented which is available in a posts editor:<a href="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-4.jpg"><img class="aligncenter size-full wp-image-705" title="button typo" src="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-4.jpg" alt="" width="474" height="118" /></a>\r\n\r\n&nbsp;\r\n\r\nBy clicking this button, you will see a list of available typography elements:<a href="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-5.jpg"><img class="aligncenter size-full wp-image-706" title="typo button popup" src="http://wp1/wp-content/uploads/2012/07/Edit-Post-‹-Meet-Gavern-WP-—-WordPress-5.jpg" alt="" width="265" height="353" /></a>\r\n\r\n&nbsp;\r\n\r\nIt is possible to choose a version with a stylistic specified for the majority of elements. After choosing a particular style, a shortcode will appear which will be replaced in entry content by scripts to structure styled in a way given.\r\n\r\nPlease, note that adding a new Shortcode code requires three operations:\r\n<ul>\r\n	<li>adding an entry in shortcodes.js configuration file</li>\r\n	<li>adding PHP code supporting a shortcode given</li>\r\n	<li>adding optional CSS and JavaScript code (if a shortcode given requires it)</li>\r\n</ul>\r\n<strong>shortcodes.js</strong> file in <strong>config</strong> catalog includes entries which are replaced to menu structure visible after clicking a typography button - it includes <strong>$GAVERNWP_SHORTCODES</strong> variable which is a table including objects representing elements of a menu. Each object has three features: <strong>title</strong>, <strong>code</strong> and <strong>submenu</strong>. Let''s analyze this structure with a <strong>Highlight</strong> position:\r\n\r\n[code]{\r\n\r\n"title": "Highlight",\r\n"code": "[highlight]Your text[/highlight]",\r\n"submenu": [\r\n{\r\n"title": "Style I",\r\n"code": "[highlight style=\\"1\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style II",\r\n"code": "[highlight style=\\"2\\"]Your text[/highlight]"\r\n},\r\n{\r\n"title": "Style III",\r\n"code": "[highlight style=\\"3\\"]Your text[/highlight]"\r\n}\r\n]\r\n},[/code]\r\n<ul>\r\n	<li><strong>title</strong> - it includes a menu positon name displayed by a script</li>\r\n	<li><strong>code</strong> - it is a shortcode code which will be added to an entry when clicking a menu position given - you have to remember that not all menu positions on the first level have a value in this field - if it was an empty sequence of symbols, it means for a script that clicking on a menu position given does not request any action.</li>\r\n	<li><strong>submenu</strong> - it is a table  of a submenu of a menu position given. Each submenu position is built the same as menu positions as these on the first level but with one difference - a submenu cannot have the next submenu, so you do not add a <strong>submenu</strong> feature in a submenu object.</li>\r\n</ul>\r\nLet''s say, we added our shortcode to a typography button using shortcodes.js file. So, there is one thing left to do - support our shortcode from a theme side.\r\n\r\nTo do this, you have to open <strong>gavern/helpers/helpers.shortcodes.php</strong> file.\r\n\r\nThis file is divided into three main sections starting with lines similar to:\r\n\r\n[code]if(get_option($tpl-&gt;name . ''_shortcodes1_state'', ''Y'') == ''Y'') {[/code]\r\n\r\nIt is a conditional  IF instruction connected with a group of typography elements given. Gavern icludes three groups:\r\n<ul>\r\n	<li>typography elements - functions connected with it have <strong>gavern_ts_</strong> prefix in the title</li>\r\n	<li>interactive elements - functions connected with it have <strong>gavern_ies_</strong> prefix in the title</li>\r\n	<li>elements characteristic for a particular theme - functions connected with it have <strong>gavern_tss_</strong> prefix in the title</li>\r\n</ul>\r\nWe recommend to add new typography elements in the last group - in Meet GavernWP theme, it is empty by default. Please, remember about using an appropriate prefix in a function name for a group given, e.g. in the case of the third group, it will be <strong>gavern_tss_</strong>. The code itself of a shortcode given has to be created according to guidelines described in<a href="http://codex.wordpress.org/Shortcode_API"> Shortcode API</a>.\r\n\r\nThe last step is rather optional and depends on your Shortcode type. If your Shortcode requires additional CSS or JavaScript code, you have to define it in <strong>shortcodes.*.css</strong> i <strong>shortcodes.*.js</strong> files, where <strong>*</strong> is a group name to which a Shortcode given was assigned.\r\n\r\nIt is very important to place elements of CSS and JavaScript code in an appropriate file, as it will give a possibility of optimizing whole theme code when switching off given group of Shortcodes codes.', 'Typography button', '', 'inherit', 'open', 'open', '', '386-revision-9', '', '', '2012-08-12 18:32:40', '2012-08-12 18:32:40', '', 386, 'http://wp1/uncategorized/386-revision-9/', 0, 'revision', '', 0),
(709, 1, '2012-08-12 18:34:59', '2012-08-12 18:34:59', '', 'Nav menu', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-15', '', '', '2012-08-12 18:34:59', '2012-08-12 18:34:59', '', 401, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-15.jpg', 0, 'attachment', 'image/jpeg', 0),
(710, 1, '2012-08-12 18:35:38', '2012-08-12 18:35:38', '', 'Nav menu options', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-16', '', '', '2012-08-12 18:35:38', '2012-08-12 18:35:38', '', 401, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-16.jpg', 0, 'attachment', 'image/jpeg', 0),
(711, 1, '2012-08-10 10:28:26', '2012-08-10 10:28:26', 'GavernWP gives a possibility of advanced menu managing on a website. There is a list of menus available in a template in a configuration file - <strong>menus.json</strong>. These menus are displayed in a <strong>Navigation</strong> tab:\r\n\r\n[screenshot]\r\n\r\nThere are a few options available for each menu available on a website. Website''s main menu has more options than a menu placed e.g. in a page''s footer.\r\n\r\nThe difference is that a main menu has additional options connected with animation:\r\n\r\n[screenshot]\r\n\r\nThese options allow to specify the type and speed of animation of a submenu.\r\n\r\nAdditionally, all menu types have the two options:\r\n<ul>\r\n	<li>an option specifying whether a menu given was switched on - a menu given can be switched on only on a particular subpages thanks to a <strong>Conditional rule</strong> option - then, you have to insert a rule from  <a href="http://codex.wordpress.org/Conditional_Tags">Conditional Tags</a> and logic operators of a PHP language in  a Conditional rule field, e.g. a rule displaying a menu on the homepage and in a category called "Meet GavernWP" will have the following form:  [code]is_homepage() || is_category(''Meet GavernWP'')[/code]</li>\r\n	<li>an option specifying menu depth i.e. a maximal nesting level for all menu positions displayed. If e.g. you want to skip the second menu level and display menu positions which are on the first menu level, you have to set this option to <strong>1</strong>. Of course <strong>All levels</strong> value will cause displaying all menu postions available for a menu given.</li>\r\n</ul>\r\nYou have to remember that adding a menu, except adding an appropriate entry in an configuration file <strong>menus.json</strong>, also requires creating appropriate code in a template.\r\n\r\nThis code uses a standard <a href="http://codex.wordpress.org/Function_Reference/wp_nav_menu">wp_nav_menu</a> function but you have to remember about three crucial things:\r\n<ul>\r\n	<li>code of <strong>wp_nav_menu</strong> function has to be placed inside IF condition in a form:<strong></strong> [code]if(gk_show_menu(''MENU_NAME'')) {[/code] where <strong>MENU_NAME</strong> is a menu name, e.g. <strong>mainmenu</strong><strong></strong>. Thanks to it, there will be a functionality which allows to display a menu only on subpages chosen.</li>\r\n	<li>in the case of main menu, it is very useful to create a duplicate in a mobile version so as while displaying a website on mobile devices, a menu will be adjusted to mobile devices.</li>\r\n	<li>in the case of a main menu, you have to use a special class derived from <strong>Walker</strong>: <strong>GKMenuWalker</strong> class; however, for a mobile menu, you have to use <strong>GKMenuWalkerMobile</strong> class. Thanks to it, appropriate menu structure will be generated.</li>\r\n</ul>\r\nCSS code connected with a menu is in <strong>css/wp.css</strong> and <strong>css/mobile.css</strong> files.\r\n\r\nScripts creating main menu animations are in <strong>js/gk.menu.js</strong> file.', 'Navigation settings', '', 'inherit', 'open', 'open', '', '401-revision-7', '', '', '2012-08-10 10:28:26', '2012-08-10 10:28:26', '', 401, 'http://wp1/uncategorized/401-revision-7/', 0, 'revision', '', 0),
(712, 1, '2012-08-12 18:38:06', '2012-08-12 18:38:06', '', 'Import/export menu', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-17', '', '', '2012-08-12 18:38:06', '2012-08-12 18:38:06', '', 384, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-17.jpg', 0, 'attachment', 'image/jpeg', 0),
(713, 1, '2012-08-12 18:38:22', '2012-08-12 18:38:22', '', 'Import/Export page', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-18', '', '', '2012-08-12 18:38:22', '2012-08-12 18:38:22', '', 384, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-18.jpg', 0, 'attachment', 'image/jpeg', 0),
(714, 1, '2012-07-25 11:59:27', '2012-07-25 11:59:27', 'Sometimes, there is a situation when you have to copy a configuration from one installation to another one. In order to simplify it, GavernWP has been equipped with import and export options of template''s settings in "Import/Export" tab of a template''s main menu:\r\n\r\n[screenshot]\r\n\r\nAfter entering a page of these settings, you will see the following form:\r\n\r\n[screenshot]\r\n\r\nIn order to export settings, it is enough to copy a text from an "Export" field and copy it to an "Import" field in a different template.\r\n\r\n<strong>Note!</strong> While exporting settings, you have to remember that it is possible to copy settings between the same templates.\r\nTemplate''s settings are available in JSON format, so it is possible to save these settings to a file and then modify them manually before loading to a different template.\r\n\r\nTip: we recommend to make a dump of template''s settings, thanks to it, you will be secured against not desired effects of greater changes in a template''s configuration. Such settings dumps should be saved in a file which has in its name the date of making a dump, e.g.  <strong>meetgavernwp_backup_30_07_2012.json</strong>.', 'Import/Export settings', '', 'inherit', 'open', 'open', '', '384-revision-7', '', '', '2012-07-25 11:59:27', '2012-07-25 11:59:27', '', 384, 'http://wp1/uncategorized/384-revision-7/', 0, 'revision', '', 0),
(715, 1, '2012-08-12 18:39:36', '2012-08-12 18:39:36', '', 'Back-end branding', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-19', '', '', '2012-08-12 18:39:36', '2012-08-12 18:39:36', '', 392, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-19.jpg', 0, 'attachment', 'image/jpeg', 0),
(716, 1, '2012-08-12 18:41:22', '2012-08-12 18:41:22', '', 'Login logo', '', 'inherit', 'open', 'open', '', 'meet-gavern-wp-log-in', '', '', '2012-08-12 18:41:22', '2012-08-12 18:41:22', '', 392, 'http://wp1/wp-content/uploads/2012/07/Meet-Gavern-WP-›-Log-In.jpg', 0, 'attachment', 'image/jpeg', 0),
(717, 1, '2012-08-12 18:42:06', '2012-08-12 18:42:06', '', 'Back-end logo', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-20', '', '', '2012-08-12 18:42:06', '2012-08-12 18:42:06', '', 392, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-20.jpg', 0, 'attachment', 'image/jpeg', 0),
(718, 1, '2012-08-09 12:03:56', '2012-08-09 12:03:56', 'In order to adjust stylistics of an administration panel to a GavernWP page, there are some options allowing to adjust the look of administration panel elements to a theme of a page given.\r\n\r\nYou will find the following options in a back-end branding tab:\r\n\r\n[screenshot]\r\n\r\nThe first two options are connected with a logotype displayed on a log in page. You have to choose an image which will be used as a logo and then insert the size of the image chosen. In this way, you may achieve, e.g. the following log in panel:\r\n\r\n[screenshot]\r\n\r\nThe remaining two options are connected with template''s login displayed in a main menu of an administration panel:\r\n\r\n[screenshot]\r\n\r\nWe recommend to use an image in 16x16 size - bigger or smaller images may cause problems with menu layout.\r\n\r\n&nbsp;', 'Back-end branding settings', '', 'inherit', 'open', 'open', '', '392-revision-3', '', '', '2012-08-09 12:03:56', '2012-08-09 12:03:56', '', 392, 'http://wp1/uncategorized/392-revision-3/', 0, 'revision', '', 0),
(719, 1, '2012-08-08 19:58:48', '2012-08-08 19:58:48', 'One of the key elements which has influence on website''s look is an appropriate choice of fonts used for text presentation.\r\n\r\nGavernWP allows to choose fonts easily which are assigned to CSS selectors specified by a user.\r\n\r\nIn order to simplify support for many fonts on one page, GavernWP supports groups of fonts - each group allows to assign a font given to selectors chosen by a user:\r\n\r\n[screenshot]\r\n\r\nGroups of fonts are defined in a configuration file called <strong>fonts.json</strong>. Adding a new group of fonts is very easy - it is enough to define the next object of a form:\r\n\r\n[code]{\r\n"full_name": "Full name of the fonts group",\r\n"short_name": "short name of the fonts group using only alphanumeric characters",\r\n"description": "Short description of the font family"\r\n}[/code]\r\n\r\nAfter adding such an object, in a table included in <strong>fonts.json</strong> file, you will see the next group of fonts to manage in an administration panel.\r\n\r\nYou have to specify three basic values for each group of fonts:\r\n<ul>\r\n	<li> a type of font used</li>\r\n	<li> a font of a type given</li>\r\n	<li>selectors connected with a font given</li>\r\n</ul>\r\nSpecifying of a font type is restricted to choosing one out of three fonts types:\r\n<ul>\r\n	<li><strong>Standard fonts</strong> - standard sets of fonts available on the majority of computers - you have to choose a font given from a list which is shown under the field of choosing a type of font: [screenshot]</li>\r\n	<li><strong>Fonts Squirrel</strong> - fonts downloaded from <a href="http://www.fontsquirrel.com/" target="_blank">Font Squirrel</a> page - you have to download @font-face kit of a font given and place its content in <strong>fonts</strong> catalog.  It is very important to have a folder with the same name as a font name used in <strong>stylesheet.css</strong> file which is in a new catalog. If you prepare a catalog in this way, you will see a font given on the list to choose:  [screenshot]</li>\r\n	<li><strong>Google Web Fonts</strong> - fonts from <a href="http://www.google.com/webfonts" target="_blank">Google Web Fonts</a> page; in this case, you have to specify the URL address of a font given: [screenshot]</li>\r\n</ul>\r\nThe last stage is specifying selectors connected with a font given:\r\n\r\n[screenshot]\r\n\r\nAfter saving the settings, the results should be visible on the website immediately - it is not required to make any additional operations.', 'Fonts settings', '', 'inherit', 'open', 'open', '', '410-revision-6', '', '', '2012-08-08 19:58:48', '2012-08-08 19:58:48', '', 410, 'http://wp1/uncategorized/410-revision-6/', 0, 'revision', '', 0),
(720, 1, '2012-08-12 18:46:35', '2012-08-12 18:46:35', '', 'Fonts', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-21', '', '', '2012-08-12 18:46:35', '2012-08-12 18:46:35', '', 410, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-21.jpg', 0, 'attachment', 'image/jpeg', 0),
(721, 1, '2012-08-12 18:47:59', '2012-08-12 18:47:59', '', 'standard fonts', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-22', '', '', '2012-08-12 18:47:59', '2012-08-12 18:47:59', '', 410, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-22.jpg', 0, 'attachment', 'image/jpeg', 0),
(722, 1, '2012-08-12 18:48:25', '2012-08-12 18:48:25', '', 'Squirrel fonts', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-23', '', '', '2012-08-12 18:48:25', '2012-08-12 18:48:25', '', 410, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-23.jpg', 0, 'attachment', 'image/jpeg', 0),
(723, 1, '2012-08-12 18:48:43', '2012-08-12 18:48:43', '', 'MeetGavernWP ‹ Meet Gavern WP — WordPress-24', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-24', '', '', '2012-08-12 18:48:43', '2012-08-12 18:48:43', '', 410, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-24.jpg', 0, 'attachment', 'image/jpeg', 0),
(724, 1, '2012-08-12 18:49:18', '2012-08-12 18:49:18', '', 'Font selectors', '', 'inherit', 'open', 'open', '', 'meetgavernwp-meet-gavern-wp-wordpress-26', '', '', '2012-08-12 18:49:18', '2012-08-12 18:49:18', '', 410, 'http://wp1/wp-content/uploads/2012/07/MeetGavernWP-‹-Meet-Gavern-WP-—-WordPress-26.jpg', 0, 'attachment', 'image/jpeg', 0),
(725, 1, '2012-08-12 18:43:56', '2012-08-12 18:43:56', 'One of the key elements which has influence on website''s look is an appropriate choice of fonts used for text presentation.\r\n\r\nGavernWP allows to choose fonts easily which are assigned to CSS selectors specified by a user.\r\n\r\nIn order to simplify support for many fonts on one page, GavernWP supports groups of fonts - each group allows to assign a font given to selectors chosen by a user:\r\n\r\n[screenshot]\r\n\r\nGroups of fonts are defined in a configuration file called <strong>fonts.json</strong>. Adding a new group of fonts is very easy - it is enough to define the next object of a form:\r\n\r\n[code]{\r\n"full_name": "Full name of the fonts group",\r\n"short_name": "short name of the fonts group using only alphanumeric characters",\r\n"description": "Short description of the font family"\r\n}[/code]\r\n\r\nAfter adding such an object, in a table included in <strong>fonts.json</strong> file, you will see the next group of fonts to manage in an administration panel.\r\n\r\nYou have to specify three basic values for each group of fonts:\r\n<ul>\r\n	<li> a type of font used</li>\r\n	<li> a font of a type given</li>\r\n	<li>selectors connected with a font given</li>\r\n</ul>\r\nSpecifying of a font type is restricted to choosing one out of three fonts types:\r\n<ul>\r\n	<li><strong>Standard fonts</strong> - standard sets of fonts available on the majority of computers - you have to choose a font given from a list which is shown under the field of choosing a type of font: [screenshot]</li>\r\n	<li><strong>Fonts Squirrel</strong> - fonts downloaded from <a href="http://www.fontsquirrel.com/" target="_blank">Font Squirrel</a> page - you have to download @font-face kit of a font given and place its content in <strong>fonts</strong> catalog.  It is very important to have a folder with the same name as a font name used in <strong>stylesheet.css</strong> file which is in a new catalog. If you prepare a catalog in this way, you will see a font given on the list to choose:  [screenshot]</li>\r\n	<li><strong>Google Web Fonts</strong> - fonts from <a href="http://www.google.com/webfonts" target="_blank">Google Web Fonts</a> page; in this case, you have to specify the URL address of a font given: [screenshot]</li>\r\n</ul>\r\nThe last stage is specifying selectors connected with a font given:\r\n\r\n[screenshot]\r\n\r\nAfter saving the settings, the results should be visible on the website immediately - it is not required to make any additional operations.', 'Fonts settings', '', 'inherit', 'open', 'open', '', '410-revision-7', '', '', '2012-08-12 18:43:56', '2012-08-12 18:43:56', '', 410, 'http://wp1/uncategorized/410-revision-7/', 0, 'revision', '', 0),
(726, 1, '2012-08-13 08:52:31', '2012-08-13 08:52:31', 'You can download it from our Download Area', 'December wallpaper', 'It is our December 2011 Wallpaper available for free download', 'inherit', 'open', 'open', '', 'dec_wallpaper', '', '', '2012-08-13 08:52:31', '2012-08-13 08:52:31', '', 121, 'http://wp1/wp-content/uploads/2012/08/dec_wallpaper.jpeg', 0, 'attachment', 'image/jpeg', 0),
(727, 1, '2012-08-13 08:53:15', '2012-08-13 08:53:15', 'You can download it from our Download Area', 'November wallpaper', 'It is our November 2011 Wallpaper available for free download', 'inherit', 'open', 'open', '', 'nov_wallpaper', '', '', '2012-08-13 08:53:15', '2012-08-13 08:53:15', '', 121, 'http://wp1/wp-content/uploads/2012/08/nov_wallpaper.jpeg', 0, 'attachment', 'image/jpeg', 0),
(728, 1, '2012-08-13 08:53:18', '2012-08-13 08:53:18', 'You can download it from our Download Area', 'October wallpaper', 'It is our October 2011 Wallpaper available for free download', 'inherit', 'open', 'open', '', 'oct_wallpaper', '', '', '2012-08-13 08:53:18', '2012-08-13 08:53:18', '', 121, 'http://wp1/wp-content/uploads/2012/08/oct_wallpaper.jpeg', 0, 'attachment', 'image/jpeg', 0),
(729, 1, '2012-08-26 07:17:13', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-26 07:17:13', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=729', 0, 'post', '', 0),
(730, 1, '2012-08-26 07:33:20', '2012-08-26 07:33:20', 'test', 'test', '', 'publish', 'closed', 'closed', '', 'test', '', '', '2012-08-26 07:33:20', '2012-08-26 07:33:20', '', 0, 'http://wp1/?post_type=portfolio&#038;p=730', 0, 'portfolio', '', 0),
(731, 1, '2012-08-26 07:33:22', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-26 07:33:22', '0000-00-00 00:00:00', '', 0, 'http://wp1/?post_type=portfolio&p=731', 0, 'portfolio', '', 0),
(732, 1, '2012-08-26 07:33:29', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2012-08-26 07:33:29', '0000-00-00 00:00:00', '', 0, 'http://wp1/?post_type=portfolio&p=732', 0, 'portfolio', '', 0),
(739, 1, '2012-09-02 09:56:50', '2012-09-02 09:56:50', 'This post contains an example of the Custom Post Fields.\r\n\r\n&nbsp;', 'Custom Post Fields', '', 'publish', 'open', 'open', '', 'custom-post-fields', '', '', '2013-02-12 21:22:58', '2013-02-12 21:22:58', '', 0, 'http://wp1/?p=739', 0, 'post', '', 0),
(742, 1, '2012-09-09 18:04:14', '2012-09-09 18:04:14', '', 'Latest Posts Page', '', 'publish', 'open', 'open', '', 'latest-posts-page', '', '', '2012-09-09 18:04:14', '2012-09-09 18:04:14', '', 0, 'http://wp1/?page_id=742', 0, 'page', '', 0),
(743, 1, '2012-09-09 18:02:54', '2012-09-09 18:02:54', '', 'Auto Draft', '', 'inherit', 'open', 'open', '', '742-revision', '', '', '2012-09-09 18:02:54', '2012-09-09 18:02:54', '', 742, 'http://wp1/uncategorized/742-revision/', 0, 'revision', '', 0),
(744, 1, '2012-09-09 18:06:48', '2012-09-09 18:06:48', ' ', '', '', 'publish', 'open', 'open', '', '744', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=744', 7, 'nav_menu_item', '', 0),
(746, 1, '2012-09-19 09:45:31', '2012-09-19 09:45:31', '', 'favicon', '', 'inherit', 'open', 'open', '', 'favicon', '', '', '2012-09-19 09:45:31', '2012-09-19 09:45:31', '', 0, 'http://wp1/wp-content/uploads/2012/09/favicon.ico', 0, 'attachment', 'image/x-icon', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(747, 1, '2012-09-10 09:41:01', '2012-09-10 09:41:01', 'GavernWP allows to access a lot of additional typography elements created with <a title="Shortcode API" href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> use. The use is very simple thanks to <a title="Typography button" href="http://demo.gavick.com/wordpress/meetgavernwp/back-end-features/typography-button/" target="_blank">an additional button</a> in a posts editor. A typography description from a programistic side has been divided into two parts, namely: <a title="Typography API" href="http://demo.gavick.com/wordpress/meetgavernwp/template-api/typography-api/">front-end</a> and <a title="Typography API – back-end" href="http://demo.gavick.com/wordpress/meetgavernwp/back-end-api/typography-api-back-end/">back-end</a>.\r\n\r\nBelow, there are all elements available in theme''s typography. Typography elements can be divided into three main groups:\r\n<ul>\r\n	<li>typography elements,</li>\r\n	<li>interactive elements,</li>\r\n	<li>elements prepared especially for a particular theme.</li>\r\n</ul>\r\n<h2>Warnings / Infos / Notices / Errors</h2>\r\nThese elements are used for highlighting text fragments together with their importance / type of information by using appropriate colors.\r\n\r\n[warning]Warning text example using Shortcodes[/warning]\r\n\r\n[info]Info text example using Shortcodes[/info]\r\n\r\n[notice]Notice text example using Shortcodes[/notice]\r\n\r\n[error]Error text example using Shortcodes[/error]\r\n<h2>Labels</h2>\r\nLabels are useful for marking the importance of the text fragment or a word given. In the case of longer texts, we recommend to use elements from <em>Warnings / Infos / Notices</em> group.\r\n\r\nThis is a paragraph with the [label style="1"]labeled text[/label] using the first style.\r\n\r\nThis is a paragraph with the [label style="2"]labeled text[/label] using the second style.\r\n\r\nThis is a paragraph with the [label style="3"]labeled text[/label] using the third style.\r\n\r\nThis is a paragraph with the [label style="4"]labeled text[/label] using the fourth style.\r\n\r\nThis is a paragraph with the [label style="5"]labeled text[/label] using the fifth style.\r\n\r\nThis is a paragraph with the [label style="6"]labeled text[/label] using the sixth style.\r\n<h2>Badges</h2>\r\nBadges in their look are similar to Labels, however, you may use them mainly for highlighting shorter texts, e.g. numerical values.\r\n\r\nThis is a paragraph with the badge [badge style="1"]12[/badge] using the first style.\r\n\r\nThis is a paragraph with the badge [badge style="2"]12[/badge] using the second style.\r\n\r\nThis is a paragraph with the badge [badge style="3"]12[/badge] using the third style.\r\n\r\nThis is a paragraph with the badge [badge style="4"]12[/badge] using the fourth style.\r\n\r\nThis is a paragraph with the badge [badge style="5"]12[/badge] using the fifth style.\r\n\r\nThis is a paragraph with the badge [badge style="6"]12[/badge] using the sixth style.\r\n<h2>Code listings</h2>\r\nWe recommend to use an element creating code listings in one out of three styles available for presenting source codes:\r\n\r\n[code style="1"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n\r\n[code style="2"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n\r\n[code style="3"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n<h2>Text blocks</h2>\r\nText blocks are useful for generating an element highlighting a particular part of an  entry:\r\n\r\n[textblock style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[numblock num="01" style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="02" style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="03" style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="04" style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\nFusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. [floated align="left"]Lorem ipsum dolor sit amet[/floated]\r\n\r\nFusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. [floated align="right"]Lorem ipsum dolor sit amet[/floated]\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. [floated align="center"]Lorem ipsum dolor sit amet[/floated] Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\r\n<h2>Quote and Citations</h2>\r\nQuotes elements are useful for highlighting the author of a sentence given:\r\n\r\n[quote style="1" author="Author"]The content of the quote in style 1[/quote]\r\n\r\n[quote style="2" author="Author"]The content of the quote in style 2[/quote]\r\n\r\n[quote style="3" author="Author"]The content of the quote in style 3[/quote]\r\n\r\n[quote style="4" author="Author"]The content of the quote in style 4[/quote]\r\n\r\n[quote style="5" author="Author"]The content of the quote in style 5[/quote]\r\n<h2>Dropcap</h2>\r\nElements creating the first letter highlighted:\r\n\r\n[dropcap style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n\r\n[dropcap style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n\r\n[dropcap style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n<h2>Lists</h2>\r\nOrdered and unordered lists:\r\n<div class="gk-columns" data-column-count="4">\r\n<div>[olist style="1"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="2"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="3"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="4"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n</div>\r\n<div class="gk-columns" data-column-count="4">\r\n<div>[ulist style="1"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="2"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="3"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="4"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n</div>\r\n<h2>Buttons</h2>\r\nButtons in many different variations:\r\n\r\n[button style="1"]Your text[/button] [button style="2"]Your text[/button] [button style="3"]Your text[/button] [button style="4"]Your text[/button] [button style="5"]Your text[/button] [button style="6"]Your text[/button] [button style="7"]Your text[/button]\r\n<h2>Legends</h2>\r\nElements with legend useful while creating text blocks in a frame provided with an appropriate title.\r\n\r\n[legend title="Legend style 1" style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 2" style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 3" style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 4" style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 5" style="5"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n<h2>Raw text</h2>\r\nAn element useful for generating text without formatting:\r\n\r\n[raw]Your text[/raw]\r\n<h2>Tooltips</h2>\r\nTooltips may occur in two forms: a link to a different website with a tooltip or a text connected with the text:\r\n\r\n[tip label="Default style" style="1" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Blue style" style="2" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Red style" style="3" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Green style" style="4" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Yellow style" style="5" href="URL"]Text of the tooltip[/tip]\r\n<h2>Other typography elements</h2>\r\nElements which could not be groupped to other categories.\r\n\r\nColumns allow to place text in multicolumn layout:\r\n\r\n[columns]\r\n[column]Content for the first column[/column]\r\n[column]Content for the second column[/column]\r\n[column]Content for the third column[/column]\r\n[/columns]\r\n\r\nToggle text - elements useful for creating blocks with text to toggle:\r\n\r\n[toggle header="Header text"]Cras mattis consectetur purus sit amet fermentum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Maecenas sed diam eget risus varius blandit sit amet non magna. Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit sit amet non magna. Maecenas sed diam eget risus varius blandit sit amet non magna. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Sed posuere consectetur est at lobortis.[/toggle]\r\n\r\n[toggle header="Header text" open="true"]Cras mattis consectetur purus sit amet fermentum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Maecenas sed diam eget risus varius blandit sit amet non magna. Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit sit amet non magna. Maecenas sed diam eget risus varius blandit sit amet non magna. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Sed posuere consectetur est at lobortis.[/toggle]\r\n\r\nShortcode pageurl allows to place an address to a blog:\r\n\r\n[pageurl]\r\n\r\nA link to a RSS channel:\r\n\r\n[rss href="URL"]Link text[/rss]\r\n\r\nA link to a PDF document:\r\n\r\n[pdf url="URL"]Text of the link[/pdf]\r\n\r\nA private note in an entry, visible for an author only:\r\n\r\n[note]Your private note[/note]\r\n\r\nMail illegible for bots creating data bases for spammers:\r\n\r\n[mail]email.to@obfuscate.com[/mail]\r\n\r\nContent visible for logged in users only:\r\n<div class="gk-members"><strong>Members only</strong>Content for the members only</div>\r\nRelated posts:\r\n\r\n[related limit="5"]', 'Typography', '', 'inherit', 'open', 'open', '', '207-revision-2', '', '', '2012-09-10 09:41:01', '2012-09-10 09:41:01', '', 207, 'http://wp1/uncategorized/207-revision-2/', 0, 'revision', '', 0),
(748, 1, '2012-09-19 10:04:01', '2012-09-19 10:04:01', 'GavernWP allows to access a lot of additional typography elements created with <a title="Shortcode API" href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> use. The use is very simple thanks to <a title="Typography button" href="http://demo.gavick.com/wordpress/meetgavernwp/back-end-features/typography-button/" target="_blank">an additional button</a> in a posts editor. A typography description from a programistic side has been divided into two parts, namely: <a title="Typography API" href="http://demo.gavick.com/wordpress/meetgavernwp/template-api/typography-api/">front-end</a> and <a title="Typography API – back-end" href="http://demo.gavick.com/wordpress/meetgavernwp/back-end-api/typography-api-back-end/">back-end</a>.\r\n\r\nBelow, there are all elements available in theme''s typography. Typography elements can be divided into three main groups:\r\n<ul>\r\n	<li>typography elements,</li>\r\n	<li>interactive elements,</li>\r\n	<li>elements prepared especially for a particular theme.</li>\r\n</ul>\r\n<h2>Warnings / Infos / Notices / Errors</h2>\r\nThese elements are used for highlighting text fragments together with their importance / type of information by using appropriate colors.\r\n\r\n[warning]Warning text example using Shortcodes[/warning]\r\n\r\n[info]Info text example using Shortcodes[/info]\r\n\r\n[notice]Notice text example using Shortcodes[/notice]\r\n\r\n[error]Error text example using Shortcodes[/error]\r\n<h2>Labels</h2>\r\nLabels are useful for marking the importance of the text fragment or a word given. In the case of longer texts, we recommend to use elements from <em>Warnings / Infos / Notices</em> group.\r\n\r\nThis is a paragraph with the [label style="1"]labeled text[/label] using the first style.\r\n\r\nThis is a paragraph with the [label style="2"]labeled text[/label] using the second style.\r\n\r\nThis is a paragraph with the [label style="3"]labeled text[/label] using the third style.\r\n\r\nThis is a paragraph with the [label style="4"]labeled text[/label] using the fourth style.\r\n\r\nThis is a paragraph with the [label style="5"]labeled text[/label] using the fifth style.\r\n\r\nThis is a paragraph with the [label style="6"]labeled text[/label] using the sixth style.\r\n<h2>Badges</h2>\r\nBadges in their look are similar to Labels, however, you may use them mainly for highlighting shorter texts, e.g. numerical values.\r\n\r\nThis is a paragraph with the badge [badge style="1"]12[/badge] using the first style.\r\n\r\nThis is a paragraph with the badge [badge style="2"]12[/badge] using the second style.\r\n\r\nThis is a paragraph with the badge [badge style="3"]12[/badge] using the third style.\r\n\r\nThis is a paragraph with the badge [badge style="4"]12[/badge] using the fourth style.\r\n\r\nThis is a paragraph with the badge [badge style="5"]12[/badge] using the fifth style.\r\n\r\nThis is a paragraph with the badge [badge style="6"]12[/badge] using the sixth style.\r\n<h2>Code listings</h2>\r\nWe recommend to use an element creating code listings in one out of three styles available for presenting source codes:\r\n\r\n[code style="1"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n\r\n[code style="2"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n\r\n[code style="3"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n<h2>Text blocks</h2>\r\nText blocks are useful for generating an element highlighting a particular part of an  entry:\r\n\r\n[textblock style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[numblock num="01" style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="02" style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="03" style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="04" style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\nFusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. [floated align="left"]Lorem ipsum dolor sit amet[/floated]\r\n\r\nFusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. [floated align="right"]Lorem ipsum dolor sit amet[/floated]\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. [floated align="center"]Lorem ipsum dolor sit amet[/floated] Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\r\n<h2>Quote and Citations</h2>\r\nQuotes elements are useful for highlighting the author of a sentence given:\r\n\r\n[quote style="1" author="Author"]The content of the quote in style 1[/quote]\r\n\r\n[quote style="2" author="Author"]The content of the quote in style 2[/quote]\r\n\r\n[quote style="3" author="Author"]The content of the quote in style 3[/quote]\r\n\r\n[quote style="4" author="Author"]The content of the quote in style 4[/quote]\r\n\r\n[quote style="5" author="Author"]The content of the quote in style 5[/quote]\r\n<h2>Dropcap</h2>\r\nElements creating the first letter highlighted:\r\n\r\n[dropcap style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n\r\n[dropcap style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n\r\n[dropcap style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n<h2>Lists</h2>\r\nOrdered and unordered lists:\r\n<div class="gk-columns" data-column-count="4">\r\n<div>[olist style="1"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="2"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="3"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="4"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n</div>\r\n<div class="gk-columns" data-column-count="4">\r\n<div>[ulist style="1"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="2"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="3"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="4"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n</div>\r\n<h2>Buttons</h2>\r\nButtons in many different variations:\r\n\r\n[button style="1"]Your text[/button] [button style="2"]Your text[/button] [button style="3"]Your text[/button] [button style="4"]Your text[/button] [button style="5"]Your text[/button] [button style="6"]Your text[/button] [button style="7"]Your text[/button]\r\n<h2>Legends</h2>\r\nElements with legend useful while creating text blocks in a frame provided with an appropriate title.\r\n\r\n[legend title="Legend style 1" style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 2" style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 3" style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 4" style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 5" style="5"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n<h2>Raw text</h2>\r\nAn element useful for generating text without formatting:\r\n\r\n[raw]Your text[/raw]\r\n<h2>Tooltips</h2>\r\nTooltips may occur in two forms: a link to a different website with a tooltip or a text connected with the text:\r\n\r\n[tip label="Default style" style="1" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Blue style" style="2" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Red style" style="3" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Green style" style="4" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Yellow style" style="5" href="URL"]Text of the tooltip[/tip]\r\n<h2>Other typography elements</h2>\r\nElements which could not be groupped to other categories.\r\n\r\nColumns allow to place text in multicolumn layout:\r\n\r\n[columns width="50,25,25"]\r\n[column]Content for the first column[/column]\r\n[column]Content for the second column[/column]\r\n[column]Content for the third column[/column]\r\n[/columns]\r\n\r\nYou can also adjust the columns width using the <strong>width</strong> attribute:\r\n\r\n[columns width="50,25,25"]\r\n[column]Content for the first column[/column]\r\n[column]Content for the second column[/column]\r\n[column]Content for the third column[/column]\r\n[/columns]\r\n\r\nToggle text - elements useful for creating blocks with text to toggle:\r\n\r\n[toggle header="Header text"]Cras mattis consectetur purus sit amet fermentum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Maecenas sed diam eget risus varius blandit sit amet non magna. Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit sit amet non magna. Maecenas sed diam eget risus varius blandit sit amet non magna. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Sed posuere consectetur est at lobortis.[/toggle]\r\n\r\n[toggle header="Header text" open="true"]Cras mattis consectetur purus sit amet fermentum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Maecenas sed diam eget risus varius blandit sit amet non magna. Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit sit amet non magna. Maecenas sed diam eget risus varius blandit sit amet non magna. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Sed posuere consectetur est at lobortis.[/toggle]\r\n\r\nShortcode pageurl allows to place an address to a blog:\r\n\r\n[pageurl]\r\n\r\nA link to a RSS channel:\r\n\r\n[rss href="URL"]Link text[/rss]\r\n\r\nA link to a PDF document:\r\n\r\n[pdf url="URL"]Text of the link[/pdf]\r\n\r\nA private note in an entry, visible for an author only:\r\n\r\n[note]Your private note[/note]\r\n\r\nMail illegible for bots creating data bases for spammers:\r\n\r\n[mail]email.to@obfuscate.com[/mail]\r\n\r\nContent visible for logged in users only:\r\n<div class="gk-members"><strong>Members only</strong>Content for the members only</div>\r\nRelated posts:\r\n\r\n[related limit="5"]', 'Typography', '', 'inherit', 'open', 'open', '', '207-revision-3', '', '', '2012-09-19 10:04:01', '2012-09-19 10:04:01', '', 207, 'http://wp1/uncategorized/207-revision-3/', 0, 'revision', '', 0),
(749, 1, '2012-09-19 10:04:59', '2012-09-19 10:04:59', 'GavernWP allows to access a lot of additional typography elements created with <a title="Shortcode API" href="http://codex.wordpress.org/Shortcode_API" target="_blank">Shortcodes</a> use. The use is very simple thanks to <a title="Typography button" href="http://demo.gavick.com/wordpress/meetgavernwp/back-end-features/typography-button/" target="_blank">an additional button</a> in a posts editor. A typography description from a programistic side has been divided into two parts, namely: <a title="Typography API" href="http://demo.gavick.com/wordpress/meetgavernwp/template-api/typography-api/">front-end</a> and <a title="Typography API – back-end" href="http://demo.gavick.com/wordpress/meetgavernwp/back-end-api/typography-api-back-end/">back-end</a>.\r\n\r\nBelow, there are all elements available in theme''s typography. Typography elements can be divided into three main groups:\r\n<ul>\r\n	<li>typography elements,</li>\r\n	<li>interactive elements,</li>\r\n	<li>elements prepared especially for a particular theme.</li>\r\n</ul>\r\n<h2>Warnings / Infos / Notices / Errors</h2>\r\nThese elements are used for highlighting text fragments together with their importance / type of information by using appropriate colors.\r\n\r\n[warning]Warning text example using Shortcodes[/warning]\r\n\r\n[info]Info text example using Shortcodes[/info]\r\n\r\n[notice]Notice text example using Shortcodes[/notice]\r\n\r\n[error]Error text example using Shortcodes[/error]\r\n<h2>Labels</h2>\r\nLabels are useful for marking the importance of the text fragment or a word given. In the case of longer texts, we recommend to use elements from <em>Warnings / Infos / Notices</em> group.\r\n\r\nThis is a paragraph with the [label style="1"]labeled text[/label] using the first style.\r\n\r\nThis is a paragraph with the [label style="2"]labeled text[/label] using the second style.\r\n\r\nThis is a paragraph with the [label style="3"]labeled text[/label] using the third style.\r\n\r\nThis is a paragraph with the [label style="4"]labeled text[/label] using the fourth style.\r\n\r\nThis is a paragraph with the [label style="5"]labeled text[/label] using the fifth style.\r\n\r\nThis is a paragraph with the [label style="6"]labeled text[/label] using the sixth style.\r\n<h2>Badges</h2>\r\nBadges in their look are similar to Labels, however, you may use them mainly for highlighting shorter texts, e.g. numerical values.\r\n\r\nThis is a paragraph with the badge [badge style="1"]12[/badge] using the first style.\r\n\r\nThis is a paragraph with the badge [badge style="2"]12[/badge] using the second style.\r\n\r\nThis is a paragraph with the badge [badge style="3"]12[/badge] using the third style.\r\n\r\nThis is a paragraph with the badge [badge style="4"]12[/badge] using the fourth style.\r\n\r\nThis is a paragraph with the badge [badge style="5"]12[/badge] using the fifth style.\r\n\r\nThis is a paragraph with the badge [badge style="6"]12[/badge] using the sixth style.\r\n<h2>Code listings</h2>\r\nWe recommend to use an element creating code listings in one out of three styles available for presenting source codes:\r\n\r\n[code style="1"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n\r\n[code style="2"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n\r\n[code style="3"]function helloWorld() {\r\n\r\nalert(''Hello World!'');\r\n\r\n}[/code]\r\n<h2>Text blocks</h2>\r\nText blocks are useful for generating an element highlighting a particular part of an  entry:\r\n\r\n[textblock style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[textblock style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/textblock]\r\n\r\n[numblock num="01" style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="02" style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="03" style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\n[numblock num="04" style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/numblock]\r\n\r\nFusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. [floated align="left"]Lorem ipsum dolor sit amet[/floated]\r\n\r\nFusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. [floated align="right"]Lorem ipsum dolor sit amet[/floated]\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Nullam id dolor id nibh ultricies vehicula ut id elit. [floated align="center"]Lorem ipsum dolor sit amet[/floated] Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\r\n<h2>Quote and Citations</h2>\r\nQuotes elements are useful for highlighting the author of a sentence given:\r\n\r\n[quote style="1" author="Author"]The content of the quote in style 1[/quote]\r\n\r\n[quote style="2" author="Author"]The content of the quote in style 2[/quote]\r\n\r\n[quote style="3" author="Author"]The content of the quote in style 3[/quote]\r\n\r\n[quote style="4" author="Author"]The content of the quote in style 4[/quote]\r\n\r\n[quote style="5" author="Author"]The content of the quote in style 5[/quote]\r\n<h2>Dropcap</h2>\r\nElements creating the first letter highlighted:\r\n\r\n[dropcap style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n\r\n[dropcap style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n\r\n[dropcap style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/dropcap]\r\n<h2>Lists</h2>\r\nOrdered and unordered lists:\r\n<div class="gk-columns" data-column-count="4">\r\n<div>[olist style="1"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="2"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="3"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n<div>[olist style="4"]\r\nitem1\r\nitem2\r\nitem3\r\n[/olist]</div>\r\n</div>\r\n<div class="gk-columns" data-column-count="4">\r\n<div>[ulist style="1"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="2"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="3"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n<div>[ulist style="4"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]</div>\r\n</div>\r\n<h2>Buttons</h2>\r\nButtons in many different variations:\r\n\r\n[button style="1"]Your text[/button] [button style="2"]Your text[/button] [button style="3"]Your text[/button] [button style="4"]Your text[/button] [button style="5"]Your text[/button] [button style="6"]Your text[/button] [button style="7"]Your text[/button]\r\n<h2>Legends</h2>\r\nElements with legend useful while creating text blocks in a frame provided with an appropriate title.\r\n\r\n[legend title="Legend style 1" style="1"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 2" style="2"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 3" style="3"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 4" style="4"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n\r\n[legend title="Legend style 5" style="5"]Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam quis risus eget urna mollis ornare vel eu leo.[/legend]\r\n<h2>Raw text</h2>\r\nAn element useful for generating text without formatting:\r\n\r\n[raw]Your text[/raw]\r\n<h2>Tooltips</h2>\r\nTooltips may occur in two forms: a link to a different website with a tooltip or a text connected with the text:\r\n\r\n[tip label="Default style" style="1" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Blue style" style="2" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Red style" style="3" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Green style" style="4" href="URL"]Text of the tooltip[/tip]\r\n\r\n[tip label="Yellow style" style="5" href="URL"]Text of the tooltip[/tip]\r\n<h2>Other typography elements</h2>\r\nElements which could not be groupped to other categories.\r\n\r\nColumns allow to place text in multicolumn layout:\r\n\r\n[columns]\r\n[column]Content for the first column[/column]\r\n[column]Content for the second column[/column]\r\n[column]Content for the third column[/column]\r\n[/columns]\r\n\r\nYou can also adjust the columns width using the <strong>width</strong> attribute:\r\n\r\n[columns width="50,25,25"]\r\n[column]Content for the first column[/column]\r\n[column]Content for the second column[/column]\r\n[column]Content for the third column[/column]\r\n[/columns]\r\n\r\nToggle text - elements useful for creating blocks with text to toggle:\r\n\r\n[toggle header="Header text"]Cras mattis consectetur purus sit amet fermentum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Maecenas sed diam eget risus varius blandit sit amet non magna. Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit sit amet non magna. Maecenas sed diam eget risus varius blandit sit amet non magna. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Sed posuere consectetur est at lobortis.[/toggle]\r\n\r\n[toggle header="Header text" open="true"]Cras mattis consectetur purus sit amet fermentum. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Maecenas sed diam eget risus varius blandit sit amet non magna. Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit sit amet non magna. Maecenas sed diam eget risus varius blandit sit amet non magna. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Sed posuere consectetur est at lobortis.[/toggle]\r\n\r\nShortcode pageurl allows to place an address to a blog:\r\n\r\n[pageurl]\r\n\r\nA link to a RSS channel:\r\n\r\n[rss href="URL"]Link text[/rss]\r\n\r\nA link to a PDF document:\r\n\r\n[pdf url="URL"]Text of the link[/pdf]\r\n\r\nA private note in an entry, visible for an author only:\r\n\r\n[note]Your private note[/note]\r\n\r\nMail illegible for bots creating data bases for spammers:\r\n\r\n[mail]email.to@obfuscate.com[/mail]\r\n\r\nContent visible for logged in users only:\r\n<div class="gk-members"><strong>Members only</strong>Content for the members only</div>\r\nRelated posts:\r\n\r\n[related limit="5"]', 'Typography', '', 'inherit', 'open', 'open', '', '207-revision', '', '', '2012-09-19 10:04:59', '2012-09-19 10:04:59', '', 207, 'http://wp1/uncategorized/207-revision/', 0, 'revision', '', 0),
(752, 1, '2013-02-04 10:38:11', '2013-02-04 10:38:11', 'It is an example gallery page.\n\n[notice]<strong>Tip:</strong> to create the gallery please use attachments from the Media library.[/notice]', 'Gallery page', '', 'inherit', 'open', 'open', '', '121-autosave', '', '', '2013-02-04 10:38:11', '2013-02-04 10:38:11', '', 121, 'http://wp1/uncategorized/121-autosave/', 0, 'revision', '', 0),
(754, 1, '2012-11-20 13:02:42', '2012-11-20 13:02:42', 'GavernWP has an advanced panel for managing theme''s options in an administration panel. These options have been divided into a few main groups:\r\n<ul>\r\n	<li>Basic settings</li>\r\n	<li>Layout settings</li>\r\n	<li>Fonts settings</li>\r\n	<li>Navigation settings</li>\r\n	<li>Advanced settings</li>\r\n	<li>Shortcodes settings</li>\r\n	<li>Social API settings</li>\r\n	<li>Theme branding settings</li>\r\n	<li>Back-end branding settings</li>\r\n	<li>SEO settings</li>\r\n</ul>\r\nAlso, some additional elements generated by a framework in an administration panel in some various places appear, namely:\r\n<ul>\r\n	<li>Typography button</li>\r\n	<li>Widget rules</li>\r\n	<li>Open Graph metabox</li>\r\n	<li>GavernWP SEO settings metaboxes</li>\r\n</ul>\r\nIt is also worth getting acquainted with a theme configuration with files use in JSON format:\r\n<ul>\r\n	<li>Option files</li>\r\n	<li>Theme configuration</li>\r\n</ul>\r\nThe ability of these files edition, gives a possibility of deep interference in websites work based on GaverWP.', 'Main back-end features', '', 'inherit', 'open', 'open', '', '419-revision', '', '', '2012-11-20 13:02:42', '2012-11-20 13:02:42', '', 419, 'http://wp1/uncategorized/419-revision/', 0, 'revision', '', 0),
(755, 1, '2012-11-20 13:02:51', '2012-11-20 13:02:51', 'GavernWP has an advanced panel for managing theme''s options in an administration panel. These options have been divided into a few main groups:\r\n<ul>\r\n	<li>Basic settings</li>\r\n	<li>Layout settings</li>\r\n	<li>Fonts settings</li>\r\n	<li>Navigation settings</li>\r\n	<li>Advanced settings</li>\r\n	<li>Shortcodes settings</li>\r\n	<li>Social API settings</li>\r\n	<li>Theme branding settings</li>\r\n	<li>Back-end branding settings</li>\r\n	<li>SEO settings</li>\r\n</ul>\r\nAlso, some additional elements generated by a framework in an administration panel in some various places appear, namely:\r\n<ul>\r\n	<li>Typography button</li>\r\n	<li>Widget rules</li>\r\n	<li>Open Graph metabox</li>\r\n	<li>GavernWP SEO settings metaboxes</li>\r\n</ul>\r\nIt is also worth getting acquainted with a theme configuration with files use in JSON format:\r\n<ul>\r\n	<li>Option files</li>\r\n	<li>Theme configuration</li>\r\n</ul>\r\nThe ability of these files edition, gives a possibility of deep interference in websites work based on GaverWP.', 'Main back-end features', '', 'inherit', 'open', 'open', '', '419-revision-2', '', '', '2012-11-20 13:02:51', '2012-11-20 13:02:51', '', 419, 'http://wp1/uncategorized/419-revision-2/', 0, 'revision', '', 0),
(756, 1, '2012-11-20 14:36:28', '2012-11-20 14:36:28', 'The Meet GavenrWP theme contains four built-in widgets which can be used for generating content on your website:\r\n<ul>\r\n	<li><a title="GK Comments" href="http://wp1/built-in-widgets/gk-comments/">GK Comments</a></li>\r\n	<li><a title="GK News Show Pro" href="http://wp1/built-in-widgets/gk-news-show-pro/">GK News Show Pro</a></li>\r\n	<li><a title="GK Social Icons" href="http://wp1/built-in-widgets/gk-social-icons/">GK Social Icons</a></li>\r\n	<li><a title="GK Tabs" href="http://wp1/built-in-widgets/gk-tabs/">GK Tabs</a></li>\r\n</ul>', 'Built-in widgets', '', 'publish', 'open', 'open', '', 'built-in-widgets', '', '', '2012-11-20 14:47:54', '2012-11-20 14:47:54', '', 0, 'http://wp1/?page_id=756', 0, 'page', '', 0),
(758, 1, '2012-11-20 14:38:23', '2012-11-20 14:38:23', 'GK Comments is a simple widget to display latest comments with user avatars:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/comments1.jpg"><img class="aligncenter size-full wp-image-760" title="comments1" src="http://wp1/wp-content/uploads/2012/11/comments1.jpg" alt="" width="317" height="520" /></a>\r\n\r\nThe configuration of the widget is really simple:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/comments2.jpg"><img class="aligncenter size-full wp-image-759" title="comments2" src="http://wp1/wp-content/uploads/2012/11/comments2.jpg" alt="" width="265" height="247" /></a>\r\n\r\nAs you can see, there are three important options:\r\n<ul>\r\n	<li><strong>Avatar size</strong> - this option is used to specify the size of the avatars displayed under each comment.</li>\r\n	<li><strong>Word count</strong> - this option specifies the maximal amount of words displayed in each comment item.</li>\r\n	<li><strong>Number of comments</strong> - it specifes the maximal amount of comments to display.</li>\r\n</ul>\r\nThe GK Comments widget uses a built-in WordPress cache system and it refreshes the cache after every comments operation.', 'GK Comments', '', 'publish', 'open', 'open', '', 'gk-comments', '', '', '2012-11-20 14:38:27', '2012-11-20 14:38:27', '', 756, 'http://wp1/?page_id=758', 0, 'page', '', 0),
(759, 1, '2012-11-20 14:37:13', '2012-11-20 14:37:13', '', 'comments2', '', 'inherit', 'open', 'open', '', 'comments2', '', '', '2012-11-20 14:37:13', '2012-11-20 14:37:13', '', 758, 'http://wp1/wp-content/uploads/2012/11/comments2.jpg', 0, 'attachment', 'image/jpeg', 0),
(760, 1, '2012-11-20 14:38:06', '2012-11-20 14:38:06', '', 'comments1', '', 'inherit', 'open', 'open', '', 'comments1', '', '', '2012-11-20 14:38:06', '2012-11-20 14:38:06', '', 758, 'http://wp1/wp-content/uploads/2012/11/comments1.jpg', 0, 'attachment', 'image/jpeg', 0),
(761, 1, '2012-11-20 14:37:32', '2012-11-20 14:37:32', 'GK Comments is a simple widget to display latest comments with user avatars:\n\n&nbsp;\n\nThe configuration of the widget is really simple:\n\n<a href="http://wp1/wp-content/uploads/2012/11/comments2.jpg"><img class="aligncenter size-full wp-image-759" title="comments2" src="http://wp1/wp-content/uploads/2012/11/comments2.jpg" alt="" width="265" height="247" /></a>\n\nAs you can see, there are three important options:\n<ul>\n	<li><strong>Avatar size</strong> - this option is used to specify the size of the avatars displayed under each comment.</li>\n	<li><strong>Word count</strong> - this option specifies the maximal amount of words displayed in each comment item.</li>\n	<li><strong>Number of comments</strong> - it specifes the maximal amount of comments to display.</li>\n</ul>\nThe GK Comments widget uses a built-in WordPress cache system and it refreshes the cache after every comments operation.', 'GK Comments', '', 'inherit', 'open', 'open', '', '758-revision', '', '', '2012-11-20 14:37:32', '2012-11-20 14:37:32', '', 758, 'http://wp1/uncategorized/758-revision/', 0, 'revision', '', 0),
(762, 1, '2012-11-20 14:38:23', '2012-11-20 14:38:23', 'GK Comments is a simple widget to display latest comments with user avatars:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/comments1.jpg"><img class="aligncenter size-full wp-image-760" title="comments1" src="http://wp1/wp-content/uploads/2012/11/comments1.jpg" alt="" width="317" height="520" /></a>\r\n\r\nThe configuration of the widget is really simple:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/comments2.jpg"><img class="aligncenter size-full wp-image-759" title="comments2" src="http://wp1/wp-content/uploads/2012/11/comments2.jpg" alt="" width="265" height="247" /></a>\r\n\r\nAs you can see, there are three important options:\r\n<ul>\r\n	<li><strong>Avatar size</strong> - this option is used to specify the size of the avatars displayed under each comment.</li>\r\n	<li><strong>Word count</strong> - this option specifies the maximal amount of words displayed in each comment item.</li>\r\n	<li><strong>Number of comments</strong> - it specifes the maximal amount of comments to display.</li>\r\n</ul>\r\nThe GK Comments widget uses a built-in WordPress cache system and it refreshes the cache after every comments operation.', 'GK Comments', '', 'inherit', 'open', 'open', '', '758-revision-2', '', '', '2012-11-20 14:38:23', '2012-11-20 14:38:23', '', 758, 'http://wp1/uncategorized/758-revision-2/', 0, 'revision', '', 0),
(763, 1, '2012-11-20 14:38:40', '2012-11-20 14:38:40', 'The Meet GavenrWP theme contains four built-in widgets which can be used for generating content on your website:\n<ul>\n	<li>GK Comments</li>\n	<li>GK Image Show</li>\n	<li>GK News Show Pro</li>\n	<li>GK Social Icons</li>\n</ul>', 'Built-in widgets', '', 'inherit', 'open', 'open', '', '756-autosave', '', '', '2012-11-20 14:38:40', '2012-11-20 14:38:40', '', 756, 'http://wp1/uncategorized/756-autosave/', 0, 'revision', '', 0),
(764, 1, '2012-11-20 14:36:28', '2012-11-20 14:36:28', 'The Startup theme contains four built-in widgets which can be used for generating content on your website:\r\n<ul>\r\n	<li>GK Comments</li>\r\n	<li>GK Image Show</li>\r\n	<li>GK News Show Pro</li>\r\n	<li>GK Social Icons</li>\r\n</ul>', 'Built-in widgets', '', 'inherit', 'open', 'open', '', '756-revision-2', '', '', '2012-11-20 14:36:28', '2012-11-20 14:36:28', '', 756, 'http://wp1/uncategorized/756-revision-2/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(765, 1, '2012-11-20 14:41:13', '2012-11-20 14:41:13', 'GK News Show Pro is a complex and powerful widget used for displaying posts with thumbnails and additional content like title, text and additional information.\r\n\r\n&nbsp;\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/nsp1.jpg"><img class="aligncenter size-full wp-image-767" title="nsp1" src="http://wp1/wp-content/uploads/2012/11/nsp1.jpg" alt="" width="800" height="468" /></a>\r\n\r\nThe configuration of the widget contains a lot of useful options:\r\n\r\n&nbsp;\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/nsp2.jpeg"><img class="aligncenter size-full wp-image-766" title="nsp2" src="http://wp1/wp-content/uploads/2012/11/nsp2.jpeg" alt="" width="681" height="623" /></a>\r\n\r\nLet''s start with describing the Data source section - this section contains all important options connected with selecting posts to display:\r\n<ul>\r\n	<li><strong>Data source</strong>- here, you may select one of the three values:\r\n<ul>\r\n	<li><strong>Latest posts</strong> - in this case, the text area under the selectbox should be empty - a widget will load the latest posts automatically</li>\r\n	<li><strong>Categories slugs</strong> - for this value the text area under the selectbox should contain the categories slugs separated with a comma i.e. news,blog,sport</li>\r\n	<li><strong>Articles slugs</strong> - similarly to the previous value - the text area under the selectbox should contain the articles slugs separated with a comma i.e. test-post-1,test-post-2</li>\r\n</ul>\r\n</li>\r\n	<li><strong>Order by </strong>- this option specifies the value used for the ordering and the ordering direction</li>\r\n	<li><strong>Offset</strong> - sometimes it is necessary to display the second post from a specific category - then this option should be set to 1. The default value for this option is 0 - then, the widget will display posts starting from the first post. This option can be used only for the "Latest posts" and "Categories slugs".</li>\r\n</ul>\r\nThe widget can display specific amount of articles and links under the articles. It is possible to specify the amount of pages, columns and rows used to display in the articles amount and links amount options.\r\n\r\nThe <strong>cache time</strong> option is very important - it specifies how often the widget content is generated - it is safe to set it for at least 30-60 minutes or even more if the page isn''t often updated.\r\n\r\nWhen the articles or links are displayed on more than one page, then the pagination will be displayed - the type of the pagination can be specified in the <strong>Article pagination</strong> and <strong>Links pagination</strong> options.\r\n\r\nBoth for Articles and Links, you can specify the format of elements displayed. Every element can be disabled by the "On/Off" switchers.\r\n\r\nFor articles and links, a user can specify the maximal length of the title and text.\r\n\r\nImages displayed in the widget may have specific dimensions and position - the left position works only when the image is on the first position at the article - then it is displayed in the separated column. The article info block may contain few information about the article:\r\n<ul>\r\n	<li><strong>%DATE</strong> - the post date - format of the date can be specified in the "Date format" option.</li>\r\n	<li><strong>%CATEGORY</strong> - the post category name</li>\r\n	<li><strong>%AUTHOR</strong> - the post author name</li>\r\n	<li><strong>%COMMENTS</strong> - the post comments amount</li>\r\n</ul>\r\nSo, in order to display the post category and comments amount ,we will use the following format for the info block:\r\n\r\n[code]%CATEGORY %COMMENTS[/code]', 'GK News Show Pro', '', 'publish', 'open', 'open', '', 'gk-news-show-pro', '', '', '2012-11-20 14:41:27', '2012-11-20 14:41:27', '', 756, 'http://wp1/?page_id=765', 0, 'page', '', 0),
(766, 1, '2012-11-20 14:40:50', '2012-11-20 14:40:50', '', 'nsp2', '', 'inherit', 'open', 'open', '', 'nsp2', '', '', '2012-11-20 14:40:50', '2012-11-20 14:40:50', '', 765, 'http://wp1/wp-content/uploads/2012/11/nsp2.jpeg', 0, 'attachment', 'image/jpeg', 0),
(767, 1, '2012-11-20 14:41:01', '2012-11-20 14:41:01', '', 'nsp1', '', 'inherit', 'open', 'open', '', 'nsp1', '', '', '2012-11-20 14:41:01', '2012-11-20 14:41:01', '', 765, 'http://wp1/wp-content/uploads/2012/11/nsp1.jpg', 0, 'attachment', 'image/jpeg', 0),
(768, 1, '2012-11-20 14:39:11', '2012-11-20 14:39:11', '', 'GK News Show Pro', '', 'inherit', 'open', 'open', '', '765-revision', '', '', '2012-11-20 14:39:11', '2012-11-20 14:39:11', '', 765, 'http://wp1/uncategorized/765-revision/', 0, 'revision', '', 0),
(769, 1, '2012-11-20 14:41:13', '2012-11-20 14:41:13', 'GK News Show Pro is a complex and powerful widget used for displaying posts with thumbnails and additional content like title, text and additional information.\r\n\r\n&nbsp;\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/nsp1.jpg"><img class="aligncenter size-full wp-image-767" title="nsp1" src="http://wp1/wp-content/uploads/2012/11/nsp1.jpg" alt="" width="800" height="468" /></a>\r\n\r\nThe configuration of the widget contains a lot of useful options:\r\n\r\n&nbsp;\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/nsp2.jpeg"><img class="aligncenter size-full wp-image-766" title="nsp2" src="http://wp1/wp-content/uploads/2012/11/nsp2.jpeg" alt="" width="681" height="623" /></a>\r\n\r\nLet''s start with describing the Data source section - this section contains all important options connected with selecting posts to display:\r\n<ul>\r\n	<li><strong>Data source</strong>- here, you may select one of the three values:\r\n<ul>\r\n	<li><strong>Latest posts</strong> - in this case, the text area under the selectbox should be empty - a widget will load the latest posts automatically</li>\r\n	<li><strong>Categories slugs</strong> - for this value the text area under the selectbox should contain the categories slugs separated with a comma i.e. news,blog,sport</li>\r\n	<li><strong>Articles slugs</strong> - similarly to the previous value - the text area under the selectbox should contain the articles slugs separated with a comma i.e. test-post-1,test-post-2</li>\r\n</ul>\r\n</li>\r\n	<li><strong>Order by </strong>- this option specifies the value used for the ordering and the ordering direction</li>\r\n	<li><strong>Offset</strong> - sometimes it is necessary to display the second post from a specific category - then this option should be set to 1. The default value for this option is 0 - then, the widget will display posts starting from the first post. This option can be used only for the "Latest posts" and "Categories slugs".</li>\r\n</ul>\r\nThe widget can display specific amount of articles and links under the articles. It is possible to specify the amount of pages, columns and rows used to display in the articles amount and links amount options.\r\n\r\nThe <strong>cache time</strong> option is very important - it specifies how often the widget content is generated - it is safe to set it for at least 30-60 minutes or even more if the page isn''t often updated.\r\n\r\nWhen the articles or links are displayed on more than one page, then the pagination will be displayed - the type of the pagination can be specified in the <strong>Article pagination</strong> and <strong>Links pagination</strong> options.\r\n\r\nBoth for Articles and Links, you can specify the format of elements displayed. Every element can be disabled by the "On/Off" switchers.\r\n\r\nFor articles and links, a user can specify the maximal length of the title and text.\r\n\r\nImages displayed in the widget may have specific dimensions and position - the left position works only when the image is on the first position at the article - then it is displayed in the separated column. The article info block may contain few information about the article:\r\n<ul>\r\n	<li><strong>%DATE</strong> - the post date - format of the date can be specified in the "Date format" option.</li>\r\n	<li><strong>%CATEGORY</strong> - the post category name</li>\r\n	<li><strong>%AUTHOR</strong> - the post author name</li>\r\n	<li><strong>%COMMENTS</strong> - the post comments amount</li>\r\n</ul>\r\nSo, in order to display the post category and comments amount ,we will use the following format for the info block:\r\n\r\n[code]%CATEGORY %COMMENTS[/code]', 'GK News Show Pro', '', 'inherit', 'open', 'open', '', '765-revision-2', '', '', '2012-11-20 14:41:13', '2012-11-20 14:41:13', '', 765, 'http://wp1/uncategorized/765-revision-2/', 0, 'revision', '', 0),
(770, 1, '2012-11-20 14:43:13', '2012-11-20 14:43:13', 'GK Social Icons is a simple widget used to display your social profile''s URLs:\r\n\r\n&nbsp;\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/social_icons.jpg"><img class="aligncenter size-full wp-image-771" title="social_icons" src="http://wp1/wp-content/uploads/2012/11/social_icons.jpg" alt="" width="66" height="197" /></a>\r\n\r\nThe configuration is very easy - you have to just provide the profile''s URLs and... that''s all:\r\n\r\n&nbsp;\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/social1.jpg"><img class="aligncenter size-full wp-image-772" title="social1" src="http://wp1/wp-content/uploads/2012/11/social1.jpg" alt="" width="266" height="306" /></a>\r\n\r\nYou haven''t to even provide the module title, because it isn''t used in the widget structure. It can be used at the back-end to name few widget instances.', 'GK Social Icons', '', 'publish', 'open', 'open', '', 'gk-social-icons', '', '', '2012-11-20 14:43:13', '2012-11-20 14:43:13', '', 756, 'http://wp1/?page_id=770', 0, 'page', '', 0),
(771, 1, '2012-11-20 14:42:02', '2012-11-20 14:42:02', '', 'social_icons', '', 'inherit', 'open', 'open', '', 'social_icons', '', '', '2012-11-20 14:42:02', '2012-11-20 14:42:02', '', 770, 'http://wp1/wp-content/uploads/2012/11/social_icons.jpg', 0, 'attachment', 'image/jpeg', 0),
(772, 1, '2012-11-20 14:42:54', '2012-11-20 14:42:54', '', 'social1', '', 'inherit', 'open', 'open', '', 'social1', '', '', '2012-11-20 14:42:54', '2012-11-20 14:42:54', '', 770, 'http://wp1/wp-content/uploads/2012/11/social1.jpg', 0, 'attachment', 'image/jpeg', 0),
(773, 1, '2012-11-20 14:42:40', '2012-11-20 14:42:40', 'GK Social Icons is a simple widget used to display your social profile''s URLs:\n\n&nbsp;\n\n<a href="http://wp1/wp-content/uploads/2012/11/social_icons.jpg"><img class="aligncenter size-full wp-image-771" title="social_icons" src="http://wp1/wp-content/uploads/2012/11/social_icons.jpg" alt="" width="66" height="197" /></a>\n\nThe configuration is very easy - you have to just provide the profile''s URLs and... that''s all:\n\n&nbsp;\n\n&nbsp;\n\nYou haven''t to even provide the module title, because it isn''t used in the widget structure. It can be used at the back-end to name few widget instances.', 'GK Social Icons', '', 'inherit', 'open', 'open', '', '770-revision', '', '', '2012-11-20 14:42:40', '2012-11-20 14:42:40', '', 770, 'http://wp1/uncategorized/770-revision/', 0, 'revision', '', 0),
(774, 1, '2012-11-20 14:45:58', '2012-11-20 14:45:58', 'GK Tabs is a simple widget which can be used for displaying other widgets in the tabs:\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/tabs1.jpg"><img class="aligncenter size-full wp-image-777" title="tabs1" src="http://wp1/wp-content/uploads/2012/11/tabs1.jpg" alt="" width="316" height="288" /></a>\r\n\r\nThe configuration of the widget, similarly to the GK Comments widget, is really simple:\r\n\r\n&nbsp;\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/tabs2.jpg"><img class="aligncenter size-full wp-image-776" title="tabs2" src="http://wp1/wp-content/uploads/2012/11/tabs2.jpg" alt="" width="263" height="310" /></a>\r\n\r\nThe most important option is the <strong>Tabs source</strong> - this option specifies the sidebar used as the data source of the widget. Especially for the GK Tabs widget, we have created three special widget areas - Tab I, Tab II and Tab III - these widget areas don''t exist on the theme and they can be used in the GK Tabs widget to avoid problems with the duplicated widgets.\r\n\r\nTo create tabs, a user must drag some widgets to the specified in the GK Tabs widget sidebar. The titles of these widgets will be used as the tabs titles, the order of the widgets in the sidebar is also important - it will be used in the GK Tabs widget.\r\n\r\nSo, for example, in order to achieve the GK Tabs widget layout as in the first screenshot, you have to put the widgets on the Tab I sidebar as following:\r\n\r\n&nbsp;\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/tabs3.jpg"><img class="aligncenter size-full wp-image-775" title="tabs3" src="http://wp1/wp-content/uploads/2012/11/tabs3.jpg" alt="" width="299" height="260" /></a>\r\n\r\nThe other options are strictly connected with the widget interface:\r\n<ul>\r\n	<li><strong>Tabs activator event</strong> - it specifies the event used to activate the tab - it can be a hover or a click event.</li>\r\n	<li><strong>Auto animation</strong> - the GK Tabs widget can autoanimate the tabs when this option is enabled. Then, the time between tabs animations is defined in the animation interval option.</li>\r\n	<li><strong>Animation speed</strong> - time of the transition between the tabs - defined in miliseconds.</li>\r\n	<li><strong>Animation interval</strong> - time for the autoanimation option - defined in miliseconds</li>\r\n</ul>\r\nThe GK Tabs widget has no internal cache system but if there are widgets displayed in the GK Tabs widget then there will be no problems with caching the widget content.', 'GK Tabs', '', 'publish', 'open', 'open', '', 'gk-tabs', '', '', '2012-11-20 14:46:04', '2012-11-20 14:46:04', '', 756, 'http://wp1/?page_id=774', 0, 'page', '', 0),
(775, 1, '2012-11-20 14:44:30', '2012-11-20 14:44:30', '', 'tabs3', '', 'inherit', 'open', 'open', '', 'tabs3', '', '', '2012-11-20 14:44:30', '2012-11-20 14:44:30', '', 774, 'http://wp1/wp-content/uploads/2012/11/tabs3.jpg', 0, 'attachment', 'image/jpeg', 0),
(776, 1, '2012-11-20 14:45:06', '2012-11-20 14:45:06', '', 'tabs2', '', 'inherit', 'open', 'open', '', 'tabs2', '', '', '2012-11-20 14:45:06', '2012-11-20 14:45:06', '', 774, 'http://wp1/wp-content/uploads/2012/11/tabs2.jpg', 0, 'attachment', 'image/jpeg', 0),
(777, 1, '2012-11-20 14:45:41', '2012-11-20 14:45:41', '', 'tabs1', '', 'inherit', 'open', 'open', '', 'tabs1', '', '', '2012-11-20 14:45:41', '2012-11-20 14:45:41', '', 774, 'http://wp1/wp-content/uploads/2012/11/tabs1.jpg', 0, 'attachment', 'image/jpeg', 0),
(778, 1, '2012-11-20 14:44:11', '2012-11-20 14:44:11', '', 'GK Tabs', '', 'inherit', 'open', 'open', '', '774-revision', '', '', '2012-11-20 14:44:11', '2012-11-20 14:44:11', '', 774, 'http://wp1/uncategorized/774-revision/', 0, 'revision', '', 0),
(779, 1, '2012-11-20 14:45:58', '2012-11-20 14:45:58', 'GK Tabs is a simple widget which can be used for displaying other widgets in the tabs:\r\n\r\n&nbsp;\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/tabs1.jpg"><img class="aligncenter size-full wp-image-777" title="tabs1" src="http://wp1/wp-content/uploads/2012/11/tabs1.jpg" alt="" width="316" height="288" /></a>\r\n\r\nThe configuration of the widget, similarly to the GK Comments widget, is really simple:\r\n\r\n&nbsp;\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/tabs2.jpg"><img class="aligncenter size-full wp-image-776" title="tabs2" src="http://wp1/wp-content/uploads/2012/11/tabs2.jpg" alt="" width="263" height="310" /></a>\r\n\r\nThe most important option is the <strong>Tabs source</strong> - this option specifies the sidebar used as the data source of the widget. Especially for the GK Tabs widget, we have created three special widget areas - Tab I, Tab II and Tab III - these widget areas don''t exist on the theme and they can be used in the GK Tabs widget to avoid problems with the duplicated widgets.\r\n\r\nTo create tabs, a user must drag some widgets to the specified in the GK Tabs widget sidebar. The titles of these widgets will be used as the tabs titles, the order of the widgets in the sidebar is also important - it will be used in the GK Tabs widget.\r\n\r\nSo, for example, in order to achieve the GK Tabs widget layout as in the first screenshot, you have to put the widgets on the Tab I sidebar as following:\r\n\r\n&nbsp;\r\n\r\n<a href="http://wp1/wp-content/uploads/2012/11/tabs3.jpg"><img class="aligncenter size-full wp-image-775" title="tabs3" src="http://wp1/wp-content/uploads/2012/11/tabs3.jpg" alt="" width="299" height="260" /></a>\r\n\r\nThe other options are strictly connected with the widget interface:\r\n<ul>\r\n	<li><strong>Tabs activator event</strong> - it specifies the event used to activate the tab - it can be a hover or a click event.</li>\r\n	<li><strong>Auto animation</strong> - the GK Tabs widget can autoanimate the tabs when this option is enabled. Then, the time between tabs animations is defined in the animation interval option.</li>\r\n	<li><strong>Animation speed</strong> - time of the transition between the tabs - defined in miliseconds.</li>\r\n	<li><strong>Animation interval</strong> - time for the autoanimation option - defined in miliseconds</li>\r\n</ul>\r\nThe GK Tabs widget has no internal cache system but if there are widgets displayed in the GK Tabs widget then there will be no problems with caching the widget content.', 'GK Tabs', '', 'inherit', 'open', 'open', '', '774-revision-2', '', '', '2012-11-20 14:45:58', '2012-11-20 14:45:58', '', 774, 'http://wp1/uncategorized/774-revision-2/', 0, 'revision', '', 0),
(780, 1, '2012-11-20 14:47:03', '2012-11-20 14:47:03', ' ', '', '', 'publish', 'open', 'open', '', '780', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 0, 'http://wp1/?p=780', 14, 'nav_menu_item', '', 0),
(781, 1, '2012-11-20 14:47:03', '2012-11-20 14:47:03', ' ', '', '', 'publish', 'open', 'open', '', '781', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 756, 'http://wp1/?p=781', 18, 'nav_menu_item', '', 0),
(782, 1, '2012-11-20 14:47:03', '2012-11-20 14:47:03', ' ', '', '', 'publish', 'open', 'open', '', '782', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 756, 'http://wp1/?p=782', 17, 'nav_menu_item', '', 0),
(783, 1, '2012-11-20 14:47:03', '2012-11-20 14:47:03', ' ', '', '', 'publish', 'open', 'open', '', '783', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 756, 'http://wp1/?p=783', 16, 'nav_menu_item', '', 0),
(784, 1, '2012-11-20 14:47:03', '2012-11-20 14:47:03', ' ', '', '', 'publish', 'open', 'open', '', '784', '', '', '2012-11-20 14:47:03', '2012-11-20 14:47:03', '', 756, 'http://wp1/?p=784', 15, 'nav_menu_item', '', 0),
(785, 1, '2012-11-20 14:38:42', '2012-11-20 14:38:42', 'The Meet GavenrWP theme contains four built-in widgets which can be used for generating content on your website:\r\n<ul>\r\n	<li>GK Comments</li>\r\n	<li>GK Image Show</li>\r\n	<li>GK News Show Pro</li>\r\n	<li>GK Social Icons</li>\r\n</ul>', 'Built-in widgets', '', 'inherit', 'open', 'open', '', '756-revision-3', '', '', '2012-11-20 14:38:42', '2012-11-20 14:38:42', '', 756, 'http://wp1/uncategorized/756-revision-3/', 0, 'revision', '', 0),
(786, 1, '2012-08-11 07:49:20', '2012-08-11 07:49:20', 'This is an example of the Link Post Format:\r\n\r\n<a href="http://www.gavick.com" target="_blank">GavickPro Website</a>\r\n\r\n<a href="http://www.gavick.com/documentation" target="_blank">GavickPro Documentation</a>', 'Link Post', '', 'inherit', 'open', 'open', '', '599-revision-2', '', '', '2012-08-11 07:49:20', '2012-08-11 07:49:20', '', 599, 'http://wp1/uncategorized/599-revision-2/', 0, 'revision', '', 0),
(787, 1, '2012-11-21 17:49:08', '2012-11-21 17:49:08', 'This is an example of the Link Post Format:\r\n\r\n<a href="http://www.gavick.com" target="_blank">GavickPro Website</a>\r\n\r\n<a href="http://www.gavick.com/documentation" target="_blank">GavickPro Documentation</a>', 'Link Post', '', 'inherit', 'open', 'open', '', '599-revision-3', '', '', '2012-11-21 17:49:08', '2012-11-21 17:49:08', '', 599, 'http://wp1/uncategorized/599-revision-3/', 0, 'revision', '', 0),
(789, 1, '2012-12-15 10:39:30', '2012-12-15 10:39:30', 'This page presents widget styles available in this theme.\r\n\r\nWe have also included a really useful mechanism - you can put the icon in the header using following syntax:\r\n\r\n[code][icon-name] Header text[/code]\r\n\r\nWhere icon-name is one of <a title="Available classes" href="http://twitter.github.com/bootstrap/base-css.html#icons" target="_blank">available classes</a>.\r\n\r\n[ulist style="1"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]', 'Widget Styles', '', 'inherit', 'open', 'open', '', '506-revision-2', '', '', '2012-12-15 10:39:30', '2012-12-15 10:39:30', '', 506, 'http://wp1/uncategorized/506-revision-2/', 0, 'revision', '', 0),
(790, 1, '2012-12-15 10:40:18', '2012-12-15 10:40:18', 'This page presents widget styles available in this theme.\r\n\r\nWe have also included a really useful mechanism - you can put the icon in the header using following syntax:\r\n\r\n[code][icon-name] Header text[/code]\r\n\r\nWhere icon-name is one of <a title="Available classes" href="http://twitter.github.com/bootstrap/base-css.html#icons" target="_blank">available classes</a>.\r\n\r\n[ulist style="2"]\r\nitem1\r\nitem2\r\nitem3\r\n[/ulist]', 'Widget Styles', '', 'inherit', 'open', 'open', '', '506-revision-3', '', '', '2012-12-15 10:40:18', '2012-12-15 10:40:18', '', 506, 'http://wp1/uncategorized/506-revision-3/', 0, 'revision', '', 0),
(799, 1, '2012-12-23 23:13:13', '2012-12-23 23:13:13', 'This is an example of the Aside Post Format, which can be used to show less important posts.\r\n\r\nCum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Sed posuere consectetur est at lobortis. Nullam id dolor id nibh ultricies vehicula ut id elit. Curabitur blandit tempus porttitor.', 'Aside Post', '', 'inherit', 'open', 'open', '', '607-revision-2', '', '', '2012-12-23 23:13:13', '2012-12-23 23:13:13', '', 607, 'http://wp1/uncategorized/607-revision-2/', 0, 'revision', '', 0),
(800, 1, '2012-12-23 23:16:05', '2012-12-23 23:16:05', 'This is an example of the Aside Post Format, which can be used to show less important posts.\r\n\r\nCum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n\r\n<!--more-->Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Sed posuere consectetur est at lobortis. Nullam id dolor id nibh ultricies vehicula ut id elit. Curabitur blandit tempus porttitor.', 'Aside Post', '', 'inherit', 'open', 'open', '', '607-revision-3', '', '', '2012-12-23 23:16:05', '2012-12-23 23:16:05', '', 607, 'http://wp1/uncategorized/607-revision-3/', 0, 'revision', '', 0),
(801, 1, '2012-08-30 18:58:34', '2012-08-30 18:58:34', 'It is an example page with archive links.', 'Archive Page', '', 'inherit', 'open', 'open', '', '107-revision-2', '', '', '2012-08-30 18:58:34', '2012-08-30 18:58:34', '', 107, 'http://wp1/uncategorized/107-revision-2/', 0, 'revision', '', 0),
(802, 1, '2013-01-06 18:15:40', '2013-01-06 18:15:40', 'It is an example page with archive links.', 'Archive Page', '', 'inherit', 'open', 'open', '', '107-revision-3', '', '', '2013-01-06 18:15:40', '2013-01-06 18:15:40', '', 107, 'http://wp1/uncategorized/107-revision-3/', 0, 'revision', '', 0),
(803, 1, '2013-02-12 21:23:59', '2013-02-12 21:23:59', 'This post contains an example of the Custom Post Fields.\n\n&nbsp;', 'Custom Post Fields', '', 'inherit', 'open', 'open', '', '739-autosave', '', '', '2013-02-12 21:23:59', '2013-02-12 21:23:59', '', 739, 'http://wp1/uncategorized/739-autosave/', 0, 'revision', '', 0),
(804, 1, '2012-08-11 09:39:08', '2012-08-11 09:39:08', 'It is an example gallery page.\r\n\r\n[notice]<strong>Tip:</strong> to create the gallery please use attachments from the Media library.[/notice]', 'Gallery page', '', 'inherit', 'open', 'open', '', '121-revision-4', '', '', '2012-08-11 09:39:08', '2012-08-11 09:39:08', '', 121, 'http://wp1/uncategorized/121-revision-4/', 0, 'revision', '', 0),
(805, 1, '2013-01-24 12:06:15', '2013-01-24 12:06:15', 'It is an example gallery page.\r\n\r\n[notice]<strong>Tip:</strong> to create the gallery please use attachments from the Media library.[/notice]\r\n\r\n[gallery]', 'Gallery page', '', 'inherit', 'open', 'open', '', '121-revision', '', '', '2013-01-24 12:06:15', '2013-01-24 12:06:15', '', 121, 'http://wp1/uncategorized/121-revision/', 0, 'revision', '', 0),
(812, 1, '2013-02-12 21:07:30', '2013-02-12 21:07:30', 'This post contains an example of the Custom Post Fields.\r\n\r\n&nbsp;', 'Custom Post Fields', '', 'inherit', 'open', 'open', '', '739-revision-4', '', '', '2013-02-12 21:07:30', '2013-02-12 21:07:30', '', 739, 'http://wp1/?p=812', 0, 'revision', '', 0),
(813, 1, '2013-02-12 21:18:55', '2013-02-12 21:18:55', 'This post contains an example of the Custom Post Fields.\r\n\r\n&nbsp;', 'Custom Post Fields', '', 'inherit', 'open', 'open', '', '739-revision-2', '', '', '2013-02-12 21:18:55', '2013-02-12 21:18:55', '', 739, 'http://wp1/?p=813', 0, 'revision', '', 0),
(815, 1, '2012-12-20 16:02:55', '2012-12-20 16:02:55', 'This is an example of the Image Post Format:\r\n\r\n[caption id="attachment_610" align="aligncenter" width="313"]<a href="http://wp1/wp-content/uploads/2012/08/responsive.png"><img class="size-full wp-image-610" title="Web Responsive Design" alt="Web Responsive Design" src="http://wp1/wp-content/uploads/2012/08/responsive.png" width="313" height="167" /></a> Web Responsive Design is fully supported by the GavernWP Framework[/caption]', 'Image Post', '', 'inherit', 'open', 'open', '', '609-revision', '', '', '2012-12-20 16:02:55', '2012-12-20 16:02:55', '', 609, 'http://wp1/2012/12/20/609-revision/', 0, 'revision', '', 0),
(816, 1, '2013-02-24 21:43:27', '2013-02-24 21:43:27', 'This is an example of the Image Post Format:\r\n\r\n[caption id="attachment_610" align="aligncenter" width="313"]<a href="http://wp1/wp-content/uploads/2012/08/responsive.png"><img class="size-full wp-image-610" title="Web Responsive Design" alt="Web Responsive Design" src="http://wp1/wp-content/uploads/2012/08/responsive.png" width="313" height="167" /></a> Web Responsive Design is fully supported by the GavernWP Framework[/caption]', 'Image Post', '', 'inherit', 'open', 'open', '', '609-revision-2', '', '', '2013-02-24 21:43:27', '2013-02-24 21:43:27', '', 609, 'http://wp1/2013/02/24/609-revision-2/', 0, 'revision', '', 0),
(817, 1, '2017-03-09 09:18:24', '0000-00-00 00:00:00', '', 'Auto Draft', '', 'auto-draft', 'open', 'open', '', '', '', '', '2017-03-09 09:18:24', '0000-00-00 00:00:00', '', 0, 'http://wp1/?p=817', 0, 'post', '', 0);

-- --------------------------------------------------------

--
-- Table structure for table `wp_terms`
--

CREATE TABLE IF NOT EXISTS `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL DEFAULT '',
  `slug` varchar(200) NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `name` (`name`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=85 ;

--
-- Dumping data for table `wp_terms`
--

INSERT INTO `wp_terms` (`term_id`, `name`, `slug`, `term_group`) VALUES
(1, 'Uncategorized', 'uncategorized', 0),
(2, 'Blogroll', 'blogroll', 0),
(3, 'Test first menu', 'test-first-menu', 0),
(7, 'Fusce', 'fusce', 0),
(8, 'Dapibus', 'dapibus', 0),
(9, 'tellus', 'tellus', 0),
(10, 'tortor', 'tortor', 0),
(11, 'morbi', 'morbi', 0),
(12, 'leo', 'leo', 0),
(13, 'risus', 'risus', 0),
(14, 'nullam', 'nullam', 0),
(15, 'quis', 'quis', 0),
(16, 'post-format-aside', 'post-format-aside', 0),
(17, 'post-format-gallery', 'post-format-gallery', 0),
(18, 'Theme Features', 'theme-features', 0),
(25, 'Theme essentials', 'theme-essentials', 0),
(26, 'Open Graph', 'open-graph', 0),
(27, 'Social API', 'social-api', 0),
(28, 'JSON', 'json', 0),
(29, 'configuration', 'configuration', 0),
(30, 'widgets', 'widgets', 0),
(31, 'fonts', 'fonts', 0),
(32, 'menus', 'menus', 0),
(33, 'translations', 'translations', 0),
(34, 'oEmbed', 'oembed', 0),
(35, 'YouTube', 'youtube', 0),
(36, 'Twitter', 'twitter', 0),
(37, 'Flickr', 'flickr', 0),
(38, 'Framework', 'framework', 0),
(39, 'CSS', 'css', 0),
(40, 'JS', 'js', 0),
(41, 'Custom Pages', 'custom-pages', 0),
(42, 'typography', 'typography', 0),
(43, 'colors', 'colors', 0),
(44, 'responsive', 'responsive', 0),
(45, 'Open Search', 'open-search', 0),
(46, 'Firefox', 'firefox', 0),
(47, 'Facebook', 'facebook', 0),
(48, 'Google+', 'google', 0),
(49, 'Pinterest', 'pinterest', 0),
(50, 'theme', 'theme', 0),
(51, 'structure', 'structure', 0),
(52, 'comments', 'comments', 0),
(53, 'custom page styles', 'custom-page-styles', 0),
(54, 'widget rules', 'widget-rules', 0),
(55, 'branding', 'branding', 0),
(56, 'back-end', 'back-end', 0),
(57, 'Theme back-end', 'theme-back-end', 0),
(58, 'live editor', 'live-editor', 0),
(59, 'updates', 'updates', 0),
(60, 'import', 'import', 0),
(61, 'export', 'export', 0),
(62, 'shortcodes', 'shortcodes', 0),
(63, 'settings', 'settings', 0),
(64, 'navigation', 'navigation', 0),
(65, 'layout', 'layout', 0),
(66, 'front-end', 'front-end', 0),
(67, 'features', 'features', 0),
(68, 'SEO', 'seo', 0),
(69, 'basic', 'basic', 0),
(70, 'advanced', 'advanced', 0),
(71, 'Option files', 'option-files', 0),
(72, 'translated', 'translated', 0),
(73, 'Weblinks', 'weblinks', 0),
(74, 'Hot Links', 'hot-links', 0),
(75, 'Templates', 'templates', 0),
(76, 'Freebies', 'freebies', 0),
(77, 'Important', 'important', 0),
(78, 'Share', 'share', 0),
(79, 'post-format-link', 'post-format-link', 0),
(80, 'Post Formats', 'post-formats', 0),
(81, 'post-format-video', 'post-format-video', 0),
(82, 'post-format-quote', 'post-format-quote', 0),
(83, 'post-format-image', 'post-format-image', 0),
(84, 'Post fields', 'post-fields', 0);

-- --------------------------------------------------------

--
-- Table structure for table `wp_term_relationships`
--

CREATE TABLE IF NOT EXISTS `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_term_relationships`
--

INSERT INTO `wp_term_relationships` (`object_id`, `term_taxonomy_id`, `term_order`) VALUES
(1, 2, 0),
(2, 2, 0),
(3, 2, 0),
(4, 2, 0),
(5, 2, 0),
(6, 2, 0),
(7, 2, 0),
(8, 73, 0),
(9, 73, 0),
(10, 73, 0),
(11, 73, 0),
(12, 73, 0),
(13, 74, 0),
(14, 74, 0),
(15, 74, 0),
(16, 74, 0),
(17, 74, 0),
(18, 75, 0),
(19, 75, 0),
(20, 75, 0),
(21, 75, 0),
(22, 75, 0),
(23, 76, 0),
(24, 76, 0),
(25, 76, 0),
(26, 76, 0),
(27, 76, 0),
(28, 77, 0),
(29, 77, 0),
(30, 77, 0),
(31, 77, 0),
(32, 77, 0),
(33, 78, 0),
(34, 78, 0),
(35, 78, 0),
(36, 78, 0),
(37, 78, 0),
(59, 3, 0),
(76, 3, 0),
(109, 3, 0),
(115, 3, 0),
(123, 3, 0),
(127, 3, 0),
(207, 18, 0),
(207, 39, 0),
(207, 42, 0),
(330, 25, 0),
(330, 28, 0),
(330, 31, 0),
(330, 33, 0),
(330, 38, 0),
(330, 39, 0),
(330, 40, 0),
(330, 41, 0),
(332, 18, 0),
(332, 34, 0),
(332, 35, 0),
(332, 36, 0),
(332, 37, 0),
(335, 18, 0),
(335, 28, 0),
(335, 29, 0),
(335, 33, 0),
(338, 18, 0),
(338, 26, 0),
(338, 28, 0),
(338, 29, 0),
(338, 30, 0),
(338, 31, 0),
(338, 32, 0),
(341, 18, 0),
(341, 26, 0),
(341, 27, 0),
(349, 18, 0),
(349, 28, 0),
(349, 39, 0),
(349, 43, 0),
(351, 18, 0),
(351, 39, 0),
(351, 44, 0),
(353, 18, 0),
(353, 45, 0),
(353, 46, 0),
(356, 18, 0),
(356, 36, 0),
(356, 47, 0),
(356, 48, 0),
(356, 49, 0),
(359, 25, 0),
(359, 50, 0),
(359, 51, 0),
(361, 25, 0),
(361, 39, 0),
(361, 50, 0),
(364, 18, 0),
(364, 39, 0),
(364, 50, 0),
(364, 52, 0),
(367, 18, 0),
(367, 39, 0),
(367, 50, 0),
(367, 53, 0),
(370, 18, 0),
(370, 30, 0),
(370, 39, 0),
(370, 54, 0),
(377, 18, 0),
(377, 50, 0),
(377, 55, 0),
(377, 56, 0),
(380, 50, 0),
(380, 56, 0),
(380, 57, 0),
(380, 58, 0),
(382, 50, 0),
(382, 56, 0),
(382, 57, 0),
(382, 59, 0),
(384, 50, 0),
(384, 56, 0),
(384, 57, 0),
(384, 60, 0),
(384, 61, 0),
(386, 39, 0),
(386, 40, 0),
(386, 42, 0),
(386, 50, 0),
(386, 56, 0),
(386, 57, 0),
(386, 62, 0),
(392, 55, 0),
(392, 56, 0),
(392, 57, 0),
(392, 63, 0),
(394, 50, 0),
(394, 55, 0),
(394, 56, 0),
(394, 57, 0),
(394, 63, 0),
(397, 56, 0),
(397, 57, 0),
(397, 62, 0),
(397, 63, 0),
(401, 32, 0),
(401, 50, 0),
(401, 56, 0),
(401, 57, 0),
(401, 63, 0),
(401, 64, 0),
(404, 50, 0),
(404, 56, 0),
(404, 57, 0),
(404, 63, 0),
(404, 65, 0),
(408, 25, 0),
(408, 50, 0),
(408, 66, 0),
(408, 67, 0),
(410, 31, 0),
(410, 56, 0),
(410, 57, 0),
(410, 63, 0),
(413, 50, 0),
(413, 56, 0),
(413, 57, 0),
(413, 63, 0),
(413, 68, 0),
(416, 50, 0),
(416, 56, 0),
(416, 57, 0),
(416, 63, 0),
(416, 69, 0),
(419, 50, 0),
(419, 56, 0),
(419, 57, 0),
(419, 67, 0),
(422, 50, 0),
(422, 56, 0),
(422, 57, 0),
(422, 63, 0),
(422, 70, 0),
(424, 27, 0),
(424, 50, 0),
(424, 56, 0),
(424, 57, 0),
(424, 63, 0),
(427, 28, 0),
(427, 50, 0),
(427, 56, 0),
(427, 57, 0),
(427, 71, 0),
(508, 3, 0),
(513, 3, 0),
(581, 3, 0),
(584, 3, 0),
(585, 3, 0),
(586, 3, 0),
(587, 3, 0),
(588, 3, 0),
(595, 80, 0),
(595, 81, 0),
(595, 82, 0),
(599, 79, 0),
(599, 80, 0),
(599, 82, 0),
(600, 3, 0),
(603, 80, 0),
(603, 82, 0),
(603, 83, 0),
(607, 16, 0),
(607, 80, 0),
(607, 82, 0),
(609, 80, 0),
(609, 82, 0),
(609, 84, 0),
(632, 3, 0),
(739, 18, 0),
(739, 67, 0),
(739, 85, 0),
(744, 3, 0),
(780, 3, 0),
(781, 3, 0),
(782, 3, 0),
(783, 3, 0),
(784, 3, 0);

-- --------------------------------------------------------

--
-- Table structure for table `wp_term_taxonomy`
--

CREATE TABLE IF NOT EXISTS `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) NOT NULL DEFAULT '',
  `description` longtext NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=86 ;

--
-- Dumping data for table `wp_term_taxonomy`
--

INSERT INTO `wp_term_taxonomy` (`term_taxonomy_id`, `term_id`, `taxonomy`, `description`, `parent`, `count`) VALUES
(1, 1, 'category', '', 0, 0),
(2, 2, 'link_category', '', 0, 7),
(3, 3, 'nav_menu', '', 0, 22),
(7, 7, 'post_tag', 'Maecenas sed diam eget risus varius blandit sit amet non magna. Sed posuere consectetur est at lobortis. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Donec ullamcorper nulla non metus auctor fringilla.', 0, 0),
(8, 8, 'post_tag', '', 0, 0),
(9, 9, 'post_tag', '', 0, 0),
(10, 10, 'post_tag', '', 0, 0),
(11, 11, 'post_tag', '', 0, 0),
(12, 12, 'post_tag', '', 0, 0),
(13, 13, 'post_tag', '', 0, 0),
(14, 14, 'post_tag', '', 0, 0),
(15, 15, 'post_tag', '', 0, 0),
(16, 16, 'post_format', '', 0, 1),
(17, 17, 'post_format', '', 0, 0),
(18, 18, 'category', 'Articles about the main theme features: typography, responsive layout, widget rules and styles etc.', 0, 14),
(25, 25, 'category', 'GavernWP essentials - the most important features and options described in the easy and short form.', 0, 4),
(26, 26, 'post_tag', '', 0, 2),
(27, 27, 'post_tag', '', 0, 2),
(28, 28, 'post_tag', '', 0, 5),
(29, 29, 'post_tag', '', 0, 2),
(30, 30, 'post_tag', '', 0, 2),
(31, 31, 'post_tag', '', 0, 3),
(32, 32, 'post_tag', '', 0, 2),
(33, 33, 'post_tag', '', 0, 2),
(34, 34, 'post_tag', '', 0, 1),
(35, 35, 'post_tag', '', 0, 1),
(36, 36, 'post_tag', '', 0, 2),
(37, 37, 'post_tag', '', 0, 1),
(38, 38, 'post_tag', '', 0, 1),
(39, 39, 'post_tag', '', 0, 9),
(40, 40, 'post_tag', '', 0, 2),
(41, 41, 'post_tag', '', 0, 1),
(42, 42, 'post_tag', '', 0, 2),
(43, 43, 'post_tag', '', 0, 1),
(44, 44, 'post_tag', '', 0, 1),
(45, 45, 'post_tag', '', 0, 1),
(46, 46, 'post_tag', '', 0, 1),
(47, 47, 'post_tag', '', 0, 1),
(48, 48, 'post_tag', '', 0, 1),
(49, 49, 'post_tag', '', 0, 1),
(50, 50, 'post_tag', '', 0, 19),
(51, 51, 'post_tag', '', 0, 1),
(52, 52, 'post_tag', '', 0, 1),
(53, 53, 'post_tag', '', 0, 1),
(54, 54, 'post_tag', '', 0, 1),
(55, 55, 'post_tag', '', 0, 3),
(56, 56, 'post_tag', '', 0, 17),
(57, 57, 'category', 'Articles with description of the theme and framework options available in the back-end and configuration tips', 0, 16),
(58, 58, 'post_tag', '', 0, 1),
(59, 59, 'post_tag', '', 0, 1),
(60, 60, 'post_tag', '', 0, 1),
(61, 61, 'post_tag', '', 0, 1),
(62, 62, 'post_tag', '', 0, 2),
(63, 63, 'post_tag', '', 0, 10),
(64, 64, 'post_tag', '', 0, 1),
(65, 65, 'post_tag', '', 0, 1),
(66, 66, 'post_tag', '', 0, 1),
(67, 67, 'post_tag', '', 0, 3),
(68, 68, 'post_tag', '', 0, 1),
(69, 69, 'post_tag', '', 0, 1),
(70, 70, 'post_tag', '', 0, 1),
(71, 71, 'post_tag', '', 0, 1),
(72, 72, 'post_tag', '', 0, 0),
(73, 73, 'link_category', '', 0, 5),
(74, 74, 'link_category', '', 0, 5),
(75, 75, 'link_category', '', 0, 5),
(76, 76, 'link_category', '', 0, 5),
(77, 77, 'link_category', '', 0, 5),
(78, 78, 'link_category', '', 0, 5),
(79, 79, 'post_format', '', 0, 1),
(80, 80, 'category', 'Examples of usage the Post Formats feature.', 0, 5),
(81, 81, 'post_format', '', 0, 1),
(82, 80, 'post_tag', '', 0, 5),
(83, 82, 'post_format', '', 0, 1),
(84, 83, 'post_format', '', 0, 1),
(85, 84, 'post_tag', '', 0, 1);

-- --------------------------------------------------------

--
-- Table structure for table `wp_usermeta`
--

CREATE TABLE IF NOT EXISTS `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=14 ;

--
-- Dumping data for table `wp_usermeta`
--

INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`) VALUES
(1, 1, 'first_name', ''),
(2, 1, 'last_name', ''),
(3, 1, 'nickname', 'admin'),
(4, 1, 'description', ''),
(5, 1, 'rich_editing', 'true'),
(6, 1, 'comment_shortcuts', 'false'),
(7, 1, 'admin_color', 'fresh'),
(8, 1, 'use_ssl', '0'),
(9, 1, 'show_admin_bar_front', 'true'),
(10, 1, 'wp_capabilities', 'a:1:{s:13:"administrator";b:1;}'),
(11, 1, 'wp_user_level', '10'),
(12, 1, 'dismissed_wp_pointers', 'wp330_toolbar,wp330_saving_widgets,wp340_choose_image_from_library,wp340_customize_current_theme_link,wp350_media'),
(13, 1, 'wp_dashboard_quick_press_last_post_id', '817');

-- --------------------------------------------------------

--
-- Table structure for table `wp_users`
--

CREATE TABLE IF NOT EXISTS `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) NOT NULL DEFAULT '',
  `user_pass` varchar(64) NOT NULL DEFAULT '',
  `user_nicename` varchar(50) NOT NULL DEFAULT '',
  `user_email` varchar(100) NOT NULL DEFAULT '',
  `user_url` varchar(100) NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(60) NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- Dumping data for table `wp_users`
--

INSERT INTO `wp_users` (`ID`, `user_login`, `user_pass`, `user_nicename`, `user_email`, `user_url`, `user_registered`, `user_activation_key`, `user_status`, `display_name`) VALUES
(1, 'admin', '$P$BzXSVWUX6kEIkjKagaTQj/O.ETe8by1', 'admin', 's@s.rt', '', '2017-03-09 09:17:00', '', 0, 'admin');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
